% 37 Edges recorded
instance(3).
tlabel(3,(0,1),pickup). % (pickup node1 key0)
tlabel(3,(0,2),pickup). % (pickup node1 key1)
tlabel(3,(1,0),putdown). % (putdown node1 key0)
tlabel(3,(2,3),unlock_from_right). % (unlock_from_right node1 node2 key1 triangle)
tlabel(3,(2,0),putdown). % (putdown node1 key1)
tlabel(3,(3,4),move_right). % (move_right node1 node2)
tlabel(3,(3,5),putdown). % (putdown node1 key1)
tlabel(3,(4,3),move_left). % (move_left node2 node1)
tlabel(3,(4,6),putdown). % (putdown node2 key1)
tlabel(3,(5,7),move_right). % (move_right node1 node2)
tlabel(3,(5,8),pickup). % (pickup node1 key0)
tlabel(3,(5,3),pickup). % (pickup node1 key1)
tlabel(3,(6,9),move_left). % (move_left node2 node1)
tlabel(3,(6,4),pickup). % (pickup node2 key1)
tlabel(3,(7,5),move_left). % (move_left node2 node1)
tlabel(3,(8,10),move_right). % (move_right node1 node2)
tlabel(3,(8,5),putdown). % (putdown node1 key0)
tlabel(3,(9,6),move_right). % (move_right node1 node2)
tlabel(3,(9,11),pickup). % (pickup node1 key0)
tlabel(3,(10,8),move_left). % (move_left node2 node1)
tlabel(3,(10,12),putdown). % (putdown node2 key0)
tlabel(3,(11,13),move_right). % (move_right node1 node2)
tlabel(3,(11,9),putdown). % (putdown node1 key0)
tlabel(3,(12,14),move_left). % (move_left node2 node1)
tlabel(3,(12,10),pickup). % (pickup node2 key0)
tlabel(3,(13,11),move_left). % (move_left node2 node1)
tlabel(3,(13,15),putdown). % (putdown node2 key0)
tlabel(3,(14,12),move_right). % (move_right node1 node2)
tlabel(3,(14,16),pickup). % (pickup node1 key1)
tlabel(3,(15,17),move_left). % (move_left node2 node1)
tlabel(3,(15,13),pickup). % (pickup node2 key0)
tlabel(3,(15,18),pickup). % (pickup node2 key1)
tlabel(3,(16,18),move_right). % (move_right node1 node2)
tlabel(3,(16,14),putdown). % (putdown node1 key1)
tlabel(3,(17,15),move_right). % (move_right node1 node2)
tlabel(3,(18,16),move_left). % (move_left node2 node1)
tlabel(3,(18,15),putdown). % (putdown node2 key1)
% 19 States recorded
node(3,0).
node(3,1).
node(3,2).
node(3,3).
node(3,4).
node(3,5).
node(3,6).
node(3,7).
node(3,8).
node(3,9).
node(3,10).
node(3,11).
node(3,12).
node(3,13).
node(3,14).
node(3,15).
node(3,16).
node(3,17).
node(3,18).
f_static(3,comp_below_shape).
f_static(3,comp_smaller_inv_below).
f_static(3,er_below_lockedcell).
f_static(3,comp_below_overlap).
f_static(3,subset_key_verum).
f_static(3,inter_er_overlap_verum_er_left_lockedcell).
f_static(3,inter_er_overlap_robot_er_below_opencell).
f_static(3,er_left_opencell).
f_static(3,inter_er_below_opencell_er_overlap_key).
f_static(3,comp_smaller_shape).
f_static(3,comp_below_inv_smaller).
f_static(3,inter_er_overlap_verum_er_below_lockedcell).
f_static(3,below).
f_static(3,left).
f_static(3,comp_smaller_left).
f_static(3,inter_er_below_verum_er_overlap_robot).
f_static(3,verum).
f_static(3,robot).
f_static(3,peg).
f_static(3,comp_left_inv_smaller).
f_static(3,comp_below_inv_below).
f_static(3,er_left_lockedcell).
f_static(3,inter_er_overlap_robot_er_left_lockedcell).
f_static(3,er_left_verum).
f_static(3,inv_below).
f_static(3,comp_shape_inv_shape).
f_static(3,comp_left_shape).
f_static(3,inter_er_below_verum_er_overlap_key).
f_static(3,inter_er_overlap_verum_er_below_opencell).
f_static(3,comp_smaller_inv_left).
f_static(3,key).
f_static(3,comp_overlap_inv_below).
f_static(3,er_shape_verum).
f_static(3,inv_smaller).
f_static(3,shape).
f_static(3,comp_left_inv_left).
f_static(3,inv_left).
f_static(3,comp_inv_below_inv_overlap).
f_static(3,inter_er_below_verum_er_overlap_verum).
f_static(3,er_below_verum).
f_static(3,er_below_opencell).
f_static(3,inter_er_overlap_robot_er_below_lockedcell).
f_static(3,inter_er_left_verum_er_shape_verum).
f_static(3,comp_smaller_inv_smaller).
f_static(3,smaller).
f_static(3,inter_er_left_lockedcell_er_overlap_key).
f_static(3,er_smaller_verum).
f_static(3,inv_shape).
f_static(3,shape_form).
f_static(3,inter_er_below_lockedcell_er_overlap_key).
f_static(3,comp_smaller_below).
fval(3,(comp_inv_smaller_inv_overlap,(node2,node1)),0,1).
fval(3,(comp_inv_smaller_inv_overlap,(node2,triangle)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key0)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,r)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,r)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key1)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,square)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,square)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key0)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node1)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,square)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,square)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,r)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key0)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key0)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node1)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,triangle)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node2)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,r)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node1)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,triangle)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,node2)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,square)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key1)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,triangle)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node2)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node1)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node2)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key1)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,key1)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key0)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,square)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node1)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node2)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,r)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,triangle)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,key0)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key1)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,triangle)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,r)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node2)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key1)),0,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,node1)),1,1).
fval(3,(comp_inv_smaller_inv_overlap,(node2,triangle)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key0)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,r)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,r)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key1)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,square)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,square)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key0)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node1)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,square)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,square)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,r)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key0)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key0)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node1)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,triangle)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node2)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,r)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node1)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,triangle)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,node2)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,square)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key1)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,triangle)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node2)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node1)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node2)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key1)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,key1)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key0)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,square)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node1)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node2)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,r)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,triangle)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,key0)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key1)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,triangle)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,r)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node2)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key1)),1,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,node1)),2,1).
fval(3,(comp_inv_smaller_inv_overlap,(node2,triangle)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key0)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,r)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,r)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key1)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,square)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,square)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key0)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node1)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,square)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,square)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,r)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key0)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key0)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node1)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,triangle)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node2)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,r)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node1)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,triangle)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,node2)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,square)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key1)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,triangle)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node2)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node1)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node2)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key1)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,key1)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key0)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,square)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node1)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node2)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,r)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,triangle)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,key0)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key1)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,triangle)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,r)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node2)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key1)),2,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,node1)),3,1).
fval(3,(comp_inv_smaller_inv_overlap,(node2,triangle)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key0)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,r)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,r)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key1)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,square)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,square)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key0)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node1)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,square)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,square)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,r)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key0)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key0)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node1)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,triangle)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node2)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,r)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node1)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,triangle)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,node2)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,square)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key1)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,triangle)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node2)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node1)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node2)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key1)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,key1)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key0)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,square)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node1)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node2)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,r)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,triangle)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,key0)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key1)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,triangle)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,r)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node2)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key1)),3,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,node1)),4,1).
fval(3,(comp_inv_smaller_inv_overlap,(node1,node2)),4,1).
fval(3,(comp_inv_smaller_inv_overlap,(node2,triangle)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key0)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,r)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,r)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key1)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,square)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,square)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key0)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node1)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,square)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,square)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,r)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key0)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key0)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node1)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,triangle)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node2)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,r)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node1)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,triangle)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,square)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key1)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,triangle)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node2)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node1)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node2)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key1)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,key1)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key0)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,square)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node1)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node2)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,r)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,triangle)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,key0)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key1)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,triangle)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,r)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node2)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key1)),4,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,node1)),5,1).
fval(3,(comp_inv_smaller_inv_overlap,(node2,triangle)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key0)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,r)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,r)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key1)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,square)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,square)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key0)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node1)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,square)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,square)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,r)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key0)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key0)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node1)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,triangle)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node2)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,r)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node1)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,triangle)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,node2)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,square)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key1)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,triangle)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node2)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node1)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node2)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key1)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,key1)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key0)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,square)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node1)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node2)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,r)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,triangle)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,key0)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key1)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,triangle)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,r)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node2)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key1)),5,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,node1)),6,1).
fval(3,(comp_inv_smaller_inv_overlap,(node1,node2)),6,1).
fval(3,(comp_inv_smaller_inv_overlap,(node2,triangle)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key0)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,r)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,r)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key1)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,square)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,square)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key0)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node1)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,square)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,square)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,r)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key0)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key0)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node1)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,triangle)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node2)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,r)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node1)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,triangle)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,square)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key1)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,triangle)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node2)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node1)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node2)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key1)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,key1)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key0)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,square)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node1)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node2)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,r)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,triangle)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,key0)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key1)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,triangle)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,r)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node2)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key1)),6,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,node1)),7,1).
fval(3,(comp_inv_smaller_inv_overlap,(node1,node2)),7,1).
fval(3,(comp_inv_smaller_inv_overlap,(node2,triangle)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key0)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,r)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,r)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key1)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,square)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,square)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key0)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node1)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,square)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,square)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,r)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key0)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key0)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node1)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,triangle)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node2)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,r)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node1)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,triangle)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,square)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key1)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,triangle)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node2)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node1)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node2)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key1)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,key1)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key0)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,square)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node1)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node2)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,r)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,triangle)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,key0)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key1)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,triangle)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,r)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node2)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key1)),7,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,node1)),8,1).
fval(3,(comp_inv_smaller_inv_overlap,(node2,triangle)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key0)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,r)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,r)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key1)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,square)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,square)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key0)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node1)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,square)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,square)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,r)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key0)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key0)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node1)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,triangle)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node2)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,r)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node1)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,triangle)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,node2)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,square)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key1)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,triangle)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node2)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node1)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node2)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key1)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,key1)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key0)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,square)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node1)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node2)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,r)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,triangle)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,key0)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key1)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,triangle)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,r)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node2)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key1)),8,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,node1)),9,1).
fval(3,(comp_inv_smaller_inv_overlap,(node1,node2)),9,1).
fval(3,(comp_inv_smaller_inv_overlap,(node2,triangle)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key0)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,r)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,r)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key1)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,square)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,square)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key0)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node1)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,square)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,square)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,r)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key0)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key0)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node1)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,triangle)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node2)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,r)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node1)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,triangle)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,square)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key1)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,triangle)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node2)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node1)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node2)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key1)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,key1)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key0)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,square)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node1)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node2)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,r)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,triangle)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,key0)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key1)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,triangle)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,r)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node2)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key1)),9,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,node1)),10,1).
fval(3,(comp_inv_smaller_inv_overlap,(node1,node2)),10,1).
fval(3,(comp_inv_smaller_inv_overlap,(node2,triangle)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key0)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,r)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,r)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key1)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,square)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,square)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key0)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node1)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,square)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,square)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,r)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key0)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key0)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node1)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,triangle)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node2)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,r)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node1)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,triangle)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,square)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key1)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,triangle)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node2)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node1)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node2)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key1)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,key1)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key0)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,square)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node1)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node2)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,r)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,triangle)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,key0)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key1)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,triangle)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,r)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node2)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key1)),10,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,node1)),11,1).
fval(3,(comp_inv_smaller_inv_overlap,(node1,node2)),11,1).
fval(3,(comp_inv_smaller_inv_overlap,(node2,triangle)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key0)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,r)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,r)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key1)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,square)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,square)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key0)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node1)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,square)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,square)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,r)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key0)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key0)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node1)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,triangle)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node2)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,r)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node1)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,triangle)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,square)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key1)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,triangle)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node2)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node1)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node2)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key1)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,key1)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key0)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,square)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node1)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node2)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,r)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,triangle)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,key0)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key1)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,triangle)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,r)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node2)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key1)),11,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,node1)),12,1).
fval(3,(comp_inv_smaller_inv_overlap,(node1,node2)),12,1).
fval(3,(comp_inv_smaller_inv_overlap,(node2,triangle)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key0)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,r)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,r)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key1)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,square)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,square)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key0)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node1)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,square)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,square)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,r)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key0)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key0)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node1)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,triangle)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node2)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,r)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node1)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,triangle)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,square)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key1)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,triangle)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node2)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node1)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node2)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key1)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,key1)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key0)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,square)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node1)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node2)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,r)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,triangle)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,key0)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key1)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,triangle)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,r)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node2)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key1)),12,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,node2)),13,1).
fval(3,(comp_inv_smaller_inv_overlap,(node2,triangle)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key0)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,r)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,r)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key1)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,square)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,square)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key0)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node1)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,square)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,square)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,r)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key0)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key0)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node1)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,triangle)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node2)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,r)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node1)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,triangle)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,square)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key1)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,triangle)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node2)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node1)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node2)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key1)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,key1)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key0)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,square)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node1)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node2)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,node1)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,triangle)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,r)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,key0)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key1)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,triangle)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,r)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node2)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key1)),13,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,node1)),14,1).
fval(3,(comp_inv_smaller_inv_overlap,(node1,node2)),14,1).
fval(3,(comp_inv_smaller_inv_overlap,(node2,triangle)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key0)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,r)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,r)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key1)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,square)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,square)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key0)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node1)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,square)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,square)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,r)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key0)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key0)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node1)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,triangle)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node2)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,r)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node1)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,triangle)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,square)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key1)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,triangle)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node2)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node1)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node2)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key1)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,key1)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key0)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,square)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node1)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node2)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,r)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,triangle)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,key0)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key1)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,triangle)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,r)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node2)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key1)),14,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,node2)),15,1).
fval(3,(comp_inv_smaller_inv_overlap,(node2,triangle)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key0)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,r)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,r)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key1)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,square)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,square)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key0)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node1)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,square)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,square)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,r)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key0)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key0)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node1)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,triangle)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node2)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,r)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node1)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,triangle)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,square)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key1)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,triangle)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node2)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node1)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node2)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key1)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,key1)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key0)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,square)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node1)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node2)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,node1)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,triangle)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,r)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,key0)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key1)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,triangle)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,r)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node2)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key1)),15,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,node1)),16,1).
fval(3,(comp_inv_smaller_inv_overlap,(node1,node2)),16,1).
fval(3,(comp_inv_smaller_inv_overlap,(node2,triangle)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key0)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,r)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,r)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key1)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,square)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,square)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key0)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node1)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,square)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,square)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,r)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key0)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key0)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node1)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,triangle)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node2)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,r)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node1)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,triangle)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,square)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key1)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,triangle)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node2)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node1)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node2)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key1)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,key1)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key0)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,square)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node1)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node2)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,r)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,triangle)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,key0)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key1)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,triangle)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,r)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node2)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key1)),16,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,node1)),17,1).
fval(3,(comp_inv_smaller_inv_overlap,(node1,node2)),17,1).
fval(3,(comp_inv_smaller_inv_overlap,(node2,triangle)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key0)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,r)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,r)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key1)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,square)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,square)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key0)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node1)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,square)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,square)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,r)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key0)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key0)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node1)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,triangle)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node2)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,r)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node1)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,triangle)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,square)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key1)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,triangle)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node2)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node1)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node2)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key1)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,key1)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key0)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,square)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node1)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node2)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,r)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,triangle)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,key0)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key1)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,triangle)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,r)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node2)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key1)),17,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,node2)),18,1).
fval(3,(comp_inv_smaller_inv_overlap,(node2,triangle)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key0)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,r)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,r)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key1)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,square)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,square)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key0)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node1)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,square)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,square)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,r)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key0)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,key0)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node1)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,triangle)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,node2)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,r)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node1)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,triangle)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,square)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key1)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,triangle)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,node2)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node1)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,node2)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(triangle,key1)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(key0,key1)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,key0)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,square)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node1)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,node2)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(node2,node1)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,triangle)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,r)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(key1,key0)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(r,key1)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,triangle)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(node1,r)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,node2)),18,0).
fval(3,(comp_inv_smaller_inv_overlap,(square,key1)),18,0).
fval(3,(comp_below_shape,(node2,triangle)),0).
fval(3,(comp_below_shape,(triangle,r)),0).
fval(3,(comp_below_shape,(key0,r)),0).
fval(3,(comp_below_shape,(node2,key1)),0).
fval(3,(comp_below_shape,(triangle,key0)),0).
fval(3,(comp_below_shape,(key1,square)),0).
fval(3,(comp_below_shape,(node1,square)),0).
fval(3,(comp_below_shape,(r,key0)),0).
fval(3,(comp_below_shape,(key1,node1)),0).
fval(3,(comp_below_shape,(triangle,square)),0).
fval(3,(comp_below_shape,(key0,square)),0).
fval(3,(comp_below_shape,(square,r)),0).
fval(3,(comp_below_shape,(square,key0)),0).
fval(3,(comp_below_shape,(key1,triangle)),0).
fval(3,(comp_below_shape,(triangle,node1)),0).
fval(3,(comp_below_shape,(node2,key0)),0).
fval(3,(comp_below_shape,(key1,node2)),0).
fval(3,(comp_below_shape,(node2,r)),0).
fval(3,(comp_below_shape,(key0,node1)),0).
fval(3,(comp_below_shape,(node1,triangle)),0).
fval(3,(comp_below_shape,(node1,node2)),0).
fval(3,(comp_below_shape,(r,square)),0).
fval(3,(comp_below_shape,(node1,key1)),0).
fval(3,(comp_below_shape,(key0,triangle)),0).
fval(3,(comp_below_shape,(key0,node2)),0).
fval(3,(comp_below_shape,(r,node1)),0).
fval(3,(comp_below_shape,(triangle,node2)),0).
fval(3,(comp_below_shape,(triangle,key1)),0).
fval(3,(comp_below_shape,(key0,key1)),0).
fval(3,(comp_below_shape,(node1,key0)),0).
fval(3,(comp_below_shape,(node2,square)),0).
fval(3,(comp_below_shape,(square,node1)),0).
fval(3,(comp_below_shape,(r,node2)),0).
fval(3,(comp_below_shape,(node2,node1)),0).
fval(3,(comp_below_shape,(key1,r)),0).
fval(3,(comp_below_shape,(key1,key0)),0).
fval(3,(comp_below_shape,(r,triangle)),0).
fval(3,(comp_below_shape,(r,key1)),0).
fval(3,(comp_below_shape,(square,triangle)),0).
fval(3,(comp_below_shape,(node1,r)),0).
fval(3,(comp_below_shape,(square,node2)),0).
fval(3,(comp_below_shape,(square,key1)),0).
fval(3,(comp_smaller_inv_below,(node2,triangle)),0).
fval(3,(comp_smaller_inv_below,(key0,r)),0).
fval(3,(comp_smaller_inv_below,(node2,key1)),0).
fval(3,(comp_smaller_inv_below,(triangle,key0)),0).
fval(3,(comp_smaller_inv_below,(triangle,r)),0).
fval(3,(comp_smaller_inv_below,(key1,square)),0).
fval(3,(comp_smaller_inv_below,(node1,square)),0).
fval(3,(comp_smaller_inv_below,(r,key0)),0).
fval(3,(comp_smaller_inv_below,(key1,node1)),0).
fval(3,(comp_smaller_inv_below,(triangle,square)),0).
fval(3,(comp_smaller_inv_below,(key0,square)),0).
fval(3,(comp_smaller_inv_below,(square,r)),0).
fval(3,(comp_smaller_inv_below,(square,key0)),0).
fval(3,(comp_smaller_inv_below,(key1,triangle)),0).
fval(3,(comp_smaller_inv_below,(triangle,node1)),0).
fval(3,(comp_smaller_inv_below,(node2,key0)),0).
fval(3,(comp_smaller_inv_below,(key1,node2)),0).
fval(3,(comp_smaller_inv_below,(node2,r)),0).
fval(3,(comp_smaller_inv_below,(key0,node1)),0).
fval(3,(comp_smaller_inv_below,(node1,triangle)),0).
fval(3,(comp_smaller_inv_below,(node1,node2)),0).
fval(3,(comp_smaller_inv_below,(r,square)),0).
fval(3,(comp_smaller_inv_below,(node1,key1)),0).
fval(3,(comp_smaller_inv_below,(key0,triangle)),0).
fval(3,(comp_smaller_inv_below,(key0,node2)),0).
fval(3,(comp_smaller_inv_below,(r,node1)),0).
fval(3,(comp_smaller_inv_below,(triangle,node2)),0).
fval(3,(comp_smaller_inv_below,(triangle,key1)),0).
fval(3,(comp_smaller_inv_below,(key0,key1)),0).
fval(3,(comp_smaller_inv_below,(node1,key0)),0).
fval(3,(comp_smaller_inv_below,(node2,square)),0).
fval(3,(comp_smaller_inv_below,(square,node1)),0).
fval(3,(comp_smaller_inv_below,(r,node2)),0).
fval(3,(comp_smaller_inv_below,(node2,node1)),0).
fval(3,(comp_smaller_inv_below,(key1,r)),0).
fval(3,(comp_smaller_inv_below,(key1,key0)),0).
fval(3,(comp_smaller_inv_below,(r,triangle)),0).
fval(3,(comp_smaller_inv_below,(r,key1)),0).
fval(3,(comp_smaller_inv_below,(square,triangle)),0).
fval(3,(comp_smaller_inv_below,(node1,r)),0).
fval(3,(comp_smaller_inv_below,(square,node2)),0).
fval(3,(comp_smaller_inv_below,(square,key1)),0).
fval(3,(comp_overlap_inv_overlap,(key0,r)),0,1).
fval(3,(comp_overlap_inv_overlap,(key1,r)),0,1).
fval(3,(comp_overlap_inv_overlap,(key1,key0)),0,1).
fval(3,(comp_overlap_inv_overlap,(r,key1)),0,1).
fval(3,(comp_overlap_inv_overlap,(key0,key1)),0,1).
fval(3,(comp_overlap_inv_overlap,(r,key0)),0,1).
fval(3,(comp_overlap_inv_overlap,(node2,triangle)),0,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key0)),0,0).
fval(3,(comp_overlap_inv_overlap,(triangle,r)),0,0).
fval(3,(comp_overlap_inv_overlap,(node2,key1)),0,0).
fval(3,(comp_overlap_inv_overlap,(key1,square)),0,0).
fval(3,(comp_overlap_inv_overlap,(node1,square)),0,0).
fval(3,(comp_overlap_inv_overlap,(key1,node1)),0,0).
fval(3,(comp_overlap_inv_overlap,(triangle,square)),0,0).
fval(3,(comp_overlap_inv_overlap,(key0,square)),0,0).
fval(3,(comp_overlap_inv_overlap,(square,key0)),0,0).
fval(3,(comp_overlap_inv_overlap,(square,r)),0,0).
fval(3,(comp_overlap_inv_overlap,(key1,triangle)),0,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node1)),0,0).
fval(3,(comp_overlap_inv_overlap,(node2,key0)),0,0).
fval(3,(comp_overlap_inv_overlap,(key1,node2)),0,0).
fval(3,(comp_overlap_inv_overlap,(node2,r)),0,0).
fval(3,(comp_overlap_inv_overlap,(key0,node1)),0,0).
fval(3,(comp_overlap_inv_overlap,(node1,triangle)),0,0).
fval(3,(comp_overlap_inv_overlap,(r,square)),0,0).
fval(3,(comp_overlap_inv_overlap,(node1,key1)),0,0).
fval(3,(comp_overlap_inv_overlap,(node1,node2)),0,0).
fval(3,(comp_overlap_inv_overlap,(key0,triangle)),0,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node2)),0,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key1)),0,0).
fval(3,(comp_overlap_inv_overlap,(r,node1)),0,0).
fval(3,(comp_overlap_inv_overlap,(key0,node2)),0,0).
fval(3,(comp_overlap_inv_overlap,(node2,square)),0,0).
fval(3,(comp_overlap_inv_overlap,(node1,key0)),0,0).
fval(3,(comp_overlap_inv_overlap,(square,node1)),0,0).
fval(3,(comp_overlap_inv_overlap,(r,node2)),0,0).
fval(3,(comp_overlap_inv_overlap,(node2,node1)),0,0).
fval(3,(comp_overlap_inv_overlap,(r,triangle)),0,0).
fval(3,(comp_overlap_inv_overlap,(square,triangle)),0,0).
fval(3,(comp_overlap_inv_overlap,(node1,r)),0,0).
fval(3,(comp_overlap_inv_overlap,(square,node2)),0,0).
fval(3,(comp_overlap_inv_overlap,(square,key1)),0,0).
fval(3,(comp_overlap_inv_overlap,(r,key1)),1,1).
fval(3,(comp_overlap_inv_overlap,(key1,r)),1,1).
fval(3,(comp_overlap_inv_overlap,(node2,triangle)),1,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key0)),1,0).
fval(3,(comp_overlap_inv_overlap,(triangle,r)),1,0).
fval(3,(comp_overlap_inv_overlap,(node2,key1)),1,0).
fval(3,(comp_overlap_inv_overlap,(key0,r)),1,0).
fval(3,(comp_overlap_inv_overlap,(key1,square)),1,0).
fval(3,(comp_overlap_inv_overlap,(node1,square)),1,0).
fval(3,(comp_overlap_inv_overlap,(r,key0)),1,0).
fval(3,(comp_overlap_inv_overlap,(key1,node1)),1,0).
fval(3,(comp_overlap_inv_overlap,(triangle,square)),1,0).
fval(3,(comp_overlap_inv_overlap,(key0,square)),1,0).
fval(3,(comp_overlap_inv_overlap,(square,key0)),1,0).
fval(3,(comp_overlap_inv_overlap,(square,r)),1,0).
fval(3,(comp_overlap_inv_overlap,(key1,triangle)),1,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node1)),1,0).
fval(3,(comp_overlap_inv_overlap,(node2,key0)),1,0).
fval(3,(comp_overlap_inv_overlap,(key1,node2)),1,0).
fval(3,(comp_overlap_inv_overlap,(node2,r)),1,0).
fval(3,(comp_overlap_inv_overlap,(key0,node1)),1,0).
fval(3,(comp_overlap_inv_overlap,(node1,triangle)),1,0).
fval(3,(comp_overlap_inv_overlap,(r,square)),1,0).
fval(3,(comp_overlap_inv_overlap,(node1,key1)),1,0).
fval(3,(comp_overlap_inv_overlap,(node1,node2)),1,0).
fval(3,(comp_overlap_inv_overlap,(key0,triangle)),1,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node2)),1,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key1)),1,0).
fval(3,(comp_overlap_inv_overlap,(r,node1)),1,0).
fval(3,(comp_overlap_inv_overlap,(key0,node2)),1,0).
fval(3,(comp_overlap_inv_overlap,(key0,key1)),1,0).
fval(3,(comp_overlap_inv_overlap,(node2,square)),1,0).
fval(3,(comp_overlap_inv_overlap,(node1,key0)),1,0).
fval(3,(comp_overlap_inv_overlap,(square,node1)),1,0).
fval(3,(comp_overlap_inv_overlap,(r,node2)),1,0).
fval(3,(comp_overlap_inv_overlap,(key1,key0)),1,0).
fval(3,(comp_overlap_inv_overlap,(r,triangle)),1,0).
fval(3,(comp_overlap_inv_overlap,(node2,node1)),1,0).
fval(3,(comp_overlap_inv_overlap,(square,triangle)),1,0).
fval(3,(comp_overlap_inv_overlap,(node1,r)),1,0).
fval(3,(comp_overlap_inv_overlap,(square,node2)),1,0).
fval(3,(comp_overlap_inv_overlap,(square,key1)),1,0).
fval(3,(comp_overlap_inv_overlap,(key0,r)),2,1).
fval(3,(comp_overlap_inv_overlap,(r,key0)),2,1).
fval(3,(comp_overlap_inv_overlap,(node2,triangle)),2,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key0)),2,0).
fval(3,(comp_overlap_inv_overlap,(triangle,r)),2,0).
fval(3,(comp_overlap_inv_overlap,(node2,key1)),2,0).
fval(3,(comp_overlap_inv_overlap,(key1,square)),2,0).
fval(3,(comp_overlap_inv_overlap,(node1,square)),2,0).
fval(3,(comp_overlap_inv_overlap,(key1,node1)),2,0).
fval(3,(comp_overlap_inv_overlap,(triangle,square)),2,0).
fval(3,(comp_overlap_inv_overlap,(key0,square)),2,0).
fval(3,(comp_overlap_inv_overlap,(square,key0)),2,0).
fval(3,(comp_overlap_inv_overlap,(square,r)),2,0).
fval(3,(comp_overlap_inv_overlap,(key1,triangle)),2,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node1)),2,0).
fval(3,(comp_overlap_inv_overlap,(node2,key0)),2,0).
fval(3,(comp_overlap_inv_overlap,(key1,node2)),2,0).
fval(3,(comp_overlap_inv_overlap,(node2,r)),2,0).
fval(3,(comp_overlap_inv_overlap,(key0,node1)),2,0).
fval(3,(comp_overlap_inv_overlap,(node1,triangle)),2,0).
fval(3,(comp_overlap_inv_overlap,(r,square)),2,0).
fval(3,(comp_overlap_inv_overlap,(node1,key1)),2,0).
fval(3,(comp_overlap_inv_overlap,(node1,node2)),2,0).
fval(3,(comp_overlap_inv_overlap,(key0,triangle)),2,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node2)),2,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key1)),2,0).
fval(3,(comp_overlap_inv_overlap,(r,node1)),2,0).
fval(3,(comp_overlap_inv_overlap,(key0,node2)),2,0).
fval(3,(comp_overlap_inv_overlap,(key0,key1)),2,0).
fval(3,(comp_overlap_inv_overlap,(node2,square)),2,0).
fval(3,(comp_overlap_inv_overlap,(node1,key0)),2,0).
fval(3,(comp_overlap_inv_overlap,(square,node1)),2,0).
fval(3,(comp_overlap_inv_overlap,(r,node2)),2,0).
fval(3,(comp_overlap_inv_overlap,(key1,key0)),2,0).
fval(3,(comp_overlap_inv_overlap,(r,triangle)),2,0).
fval(3,(comp_overlap_inv_overlap,(node2,node1)),2,0).
fval(3,(comp_overlap_inv_overlap,(key1,r)),2,0).
fval(3,(comp_overlap_inv_overlap,(r,key1)),2,0).
fval(3,(comp_overlap_inv_overlap,(square,triangle)),2,0).
fval(3,(comp_overlap_inv_overlap,(node1,r)),2,0).
fval(3,(comp_overlap_inv_overlap,(square,node2)),2,0).
fval(3,(comp_overlap_inv_overlap,(square,key1)),2,0).
fval(3,(comp_overlap_inv_overlap,(key0,r)),3,1).
fval(3,(comp_overlap_inv_overlap,(r,key0)),3,1).
fval(3,(comp_overlap_inv_overlap,(node2,triangle)),3,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key0)),3,0).
fval(3,(comp_overlap_inv_overlap,(triangle,r)),3,0).
fval(3,(comp_overlap_inv_overlap,(node2,key1)),3,0).
fval(3,(comp_overlap_inv_overlap,(key1,square)),3,0).
fval(3,(comp_overlap_inv_overlap,(node1,square)),3,0).
fval(3,(comp_overlap_inv_overlap,(key1,node1)),3,0).
fval(3,(comp_overlap_inv_overlap,(triangle,square)),3,0).
fval(3,(comp_overlap_inv_overlap,(key0,square)),3,0).
fval(3,(comp_overlap_inv_overlap,(square,key0)),3,0).
fval(3,(comp_overlap_inv_overlap,(square,r)),3,0).
fval(3,(comp_overlap_inv_overlap,(key1,triangle)),3,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node1)),3,0).
fval(3,(comp_overlap_inv_overlap,(node2,key0)),3,0).
fval(3,(comp_overlap_inv_overlap,(key1,node2)),3,0).
fval(3,(comp_overlap_inv_overlap,(node2,r)),3,0).
fval(3,(comp_overlap_inv_overlap,(key0,node1)),3,0).
fval(3,(comp_overlap_inv_overlap,(node1,triangle)),3,0).
fval(3,(comp_overlap_inv_overlap,(r,square)),3,0).
fval(3,(comp_overlap_inv_overlap,(node1,key1)),3,0).
fval(3,(comp_overlap_inv_overlap,(node1,node2)),3,0).
fval(3,(comp_overlap_inv_overlap,(key0,triangle)),3,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node2)),3,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key1)),3,0).
fval(3,(comp_overlap_inv_overlap,(r,node1)),3,0).
fval(3,(comp_overlap_inv_overlap,(key0,node2)),3,0).
fval(3,(comp_overlap_inv_overlap,(key0,key1)),3,0).
fval(3,(comp_overlap_inv_overlap,(node2,square)),3,0).
fval(3,(comp_overlap_inv_overlap,(node1,key0)),3,0).
fval(3,(comp_overlap_inv_overlap,(square,node1)),3,0).
fval(3,(comp_overlap_inv_overlap,(r,node2)),3,0).
fval(3,(comp_overlap_inv_overlap,(key1,key0)),3,0).
fval(3,(comp_overlap_inv_overlap,(r,triangle)),3,0).
fval(3,(comp_overlap_inv_overlap,(node2,node1)),3,0).
fval(3,(comp_overlap_inv_overlap,(key1,r)),3,0).
fval(3,(comp_overlap_inv_overlap,(r,key1)),3,0).
fval(3,(comp_overlap_inv_overlap,(square,triangle)),3,0).
fval(3,(comp_overlap_inv_overlap,(node1,r)),3,0).
fval(3,(comp_overlap_inv_overlap,(square,node2)),3,0).
fval(3,(comp_overlap_inv_overlap,(square,key1)),3,0).
fval(3,(comp_overlap_inv_overlap,(node2,triangle)),4,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key0)),4,0).
fval(3,(comp_overlap_inv_overlap,(triangle,r)),4,0).
fval(3,(comp_overlap_inv_overlap,(key0,r)),4,0).
fval(3,(comp_overlap_inv_overlap,(node2,key1)),4,0).
fval(3,(comp_overlap_inv_overlap,(key1,square)),4,0).
fval(3,(comp_overlap_inv_overlap,(node1,square)),4,0).
fval(3,(comp_overlap_inv_overlap,(r,key0)),4,0).
fval(3,(comp_overlap_inv_overlap,(key1,node1)),4,0).
fval(3,(comp_overlap_inv_overlap,(triangle,square)),4,0).
fval(3,(comp_overlap_inv_overlap,(key0,square)),4,0).
fval(3,(comp_overlap_inv_overlap,(square,key0)),4,0).
fval(3,(comp_overlap_inv_overlap,(square,r)),4,0).
fval(3,(comp_overlap_inv_overlap,(key1,triangle)),4,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node1)),4,0).
fval(3,(comp_overlap_inv_overlap,(node2,key0)),4,0).
fval(3,(comp_overlap_inv_overlap,(key1,node2)),4,0).
fval(3,(comp_overlap_inv_overlap,(node2,r)),4,0).
fval(3,(comp_overlap_inv_overlap,(key0,node1)),4,0).
fval(3,(comp_overlap_inv_overlap,(node1,triangle)),4,0).
fval(3,(comp_overlap_inv_overlap,(r,square)),4,0).
fval(3,(comp_overlap_inv_overlap,(node1,key1)),4,0).
fval(3,(comp_overlap_inv_overlap,(node1,node2)),4,0).
fval(3,(comp_overlap_inv_overlap,(key0,triangle)),4,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node2)),4,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key1)),4,0).
fval(3,(comp_overlap_inv_overlap,(r,node1)),4,0).
fval(3,(comp_overlap_inv_overlap,(key0,node2)),4,0).
fval(3,(comp_overlap_inv_overlap,(key0,key1)),4,0).
fval(3,(comp_overlap_inv_overlap,(node2,square)),4,0).
fval(3,(comp_overlap_inv_overlap,(node1,key0)),4,0).
fval(3,(comp_overlap_inv_overlap,(square,node1)),4,0).
fval(3,(comp_overlap_inv_overlap,(r,node2)),4,0).
fval(3,(comp_overlap_inv_overlap,(key1,key0)),4,0).
fval(3,(comp_overlap_inv_overlap,(r,triangle)),4,0).
fval(3,(comp_overlap_inv_overlap,(node2,node1)),4,0).
fval(3,(comp_overlap_inv_overlap,(key1,r)),4,0).
fval(3,(comp_overlap_inv_overlap,(r,key1)),4,0).
fval(3,(comp_overlap_inv_overlap,(square,triangle)),4,0).
fval(3,(comp_overlap_inv_overlap,(node1,r)),4,0).
fval(3,(comp_overlap_inv_overlap,(square,node2)),4,0).
fval(3,(comp_overlap_inv_overlap,(square,key1)),4,0).
fval(3,(comp_overlap_inv_overlap,(key0,r)),5,1).
fval(3,(comp_overlap_inv_overlap,(key1,r)),5,1).
fval(3,(comp_overlap_inv_overlap,(key1,key0)),5,1).
fval(3,(comp_overlap_inv_overlap,(r,key1)),5,1).
fval(3,(comp_overlap_inv_overlap,(key0,key1)),5,1).
fval(3,(comp_overlap_inv_overlap,(r,key0)),5,1).
fval(3,(comp_overlap_inv_overlap,(node2,triangle)),5,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key0)),5,0).
fval(3,(comp_overlap_inv_overlap,(triangle,r)),5,0).
fval(3,(comp_overlap_inv_overlap,(node2,key1)),5,0).
fval(3,(comp_overlap_inv_overlap,(key1,square)),5,0).
fval(3,(comp_overlap_inv_overlap,(node1,square)),5,0).
fval(3,(comp_overlap_inv_overlap,(key1,node1)),5,0).
fval(3,(comp_overlap_inv_overlap,(triangle,square)),5,0).
fval(3,(comp_overlap_inv_overlap,(key0,square)),5,0).
fval(3,(comp_overlap_inv_overlap,(square,key0)),5,0).
fval(3,(comp_overlap_inv_overlap,(square,r)),5,0).
fval(3,(comp_overlap_inv_overlap,(key1,triangle)),5,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node1)),5,0).
fval(3,(comp_overlap_inv_overlap,(node2,key0)),5,0).
fval(3,(comp_overlap_inv_overlap,(key1,node2)),5,0).
fval(3,(comp_overlap_inv_overlap,(node2,r)),5,0).
fval(3,(comp_overlap_inv_overlap,(key0,node1)),5,0).
fval(3,(comp_overlap_inv_overlap,(node1,triangle)),5,0).
fval(3,(comp_overlap_inv_overlap,(r,square)),5,0).
fval(3,(comp_overlap_inv_overlap,(node1,key1)),5,0).
fval(3,(comp_overlap_inv_overlap,(node1,node2)),5,0).
fval(3,(comp_overlap_inv_overlap,(key0,triangle)),5,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node2)),5,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key1)),5,0).
fval(3,(comp_overlap_inv_overlap,(r,node1)),5,0).
fval(3,(comp_overlap_inv_overlap,(key0,node2)),5,0).
fval(3,(comp_overlap_inv_overlap,(node2,square)),5,0).
fval(3,(comp_overlap_inv_overlap,(node1,key0)),5,0).
fval(3,(comp_overlap_inv_overlap,(square,node1)),5,0).
fval(3,(comp_overlap_inv_overlap,(r,node2)),5,0).
fval(3,(comp_overlap_inv_overlap,(node2,node1)),5,0).
fval(3,(comp_overlap_inv_overlap,(r,triangle)),5,0).
fval(3,(comp_overlap_inv_overlap,(square,triangle)),5,0).
fval(3,(comp_overlap_inv_overlap,(node1,r)),5,0).
fval(3,(comp_overlap_inv_overlap,(square,node2)),5,0).
fval(3,(comp_overlap_inv_overlap,(square,key1)),5,0).
fval(3,(comp_overlap_inv_overlap,(r,key1)),6,1).
fval(3,(comp_overlap_inv_overlap,(key1,r)),6,1).
fval(3,(comp_overlap_inv_overlap,(node2,triangle)),6,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key0)),6,0).
fval(3,(comp_overlap_inv_overlap,(triangle,r)),6,0).
fval(3,(comp_overlap_inv_overlap,(key0,r)),6,0).
fval(3,(comp_overlap_inv_overlap,(node2,key1)),6,0).
fval(3,(comp_overlap_inv_overlap,(key1,square)),6,0).
fval(3,(comp_overlap_inv_overlap,(node1,square)),6,0).
fval(3,(comp_overlap_inv_overlap,(r,key0)),6,0).
fval(3,(comp_overlap_inv_overlap,(key1,node1)),6,0).
fval(3,(comp_overlap_inv_overlap,(triangle,square)),6,0).
fval(3,(comp_overlap_inv_overlap,(key0,square)),6,0).
fval(3,(comp_overlap_inv_overlap,(square,key0)),6,0).
fval(3,(comp_overlap_inv_overlap,(square,r)),6,0).
fval(3,(comp_overlap_inv_overlap,(key1,triangle)),6,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node1)),6,0).
fval(3,(comp_overlap_inv_overlap,(node2,key0)),6,0).
fval(3,(comp_overlap_inv_overlap,(key1,node2)),6,0).
fval(3,(comp_overlap_inv_overlap,(node2,r)),6,0).
fval(3,(comp_overlap_inv_overlap,(key0,node1)),6,0).
fval(3,(comp_overlap_inv_overlap,(node1,triangle)),6,0).
fval(3,(comp_overlap_inv_overlap,(r,square)),6,0).
fval(3,(comp_overlap_inv_overlap,(node1,key1)),6,0).
fval(3,(comp_overlap_inv_overlap,(node1,node2)),6,0).
fval(3,(comp_overlap_inv_overlap,(key0,triangle)),6,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node2)),6,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key1)),6,0).
fval(3,(comp_overlap_inv_overlap,(r,node1)),6,0).
fval(3,(comp_overlap_inv_overlap,(key0,node2)),6,0).
fval(3,(comp_overlap_inv_overlap,(key0,key1)),6,0).
fval(3,(comp_overlap_inv_overlap,(node2,square)),6,0).
fval(3,(comp_overlap_inv_overlap,(node1,key0)),6,0).
fval(3,(comp_overlap_inv_overlap,(square,node1)),6,0).
fval(3,(comp_overlap_inv_overlap,(r,node2)),6,0).
fval(3,(comp_overlap_inv_overlap,(key1,key0)),6,0).
fval(3,(comp_overlap_inv_overlap,(r,triangle)),6,0).
fval(3,(comp_overlap_inv_overlap,(node2,node1)),6,0).
fval(3,(comp_overlap_inv_overlap,(square,triangle)),6,0).
fval(3,(comp_overlap_inv_overlap,(node1,r)),6,0).
fval(3,(comp_overlap_inv_overlap,(square,node2)),6,0).
fval(3,(comp_overlap_inv_overlap,(square,key1)),6,0).
fval(3,(comp_overlap_inv_overlap,(key0,key1)),7,1).
fval(3,(comp_overlap_inv_overlap,(key1,key0)),7,1).
fval(3,(comp_overlap_inv_overlap,(node2,triangle)),7,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key0)),7,0).
fval(3,(comp_overlap_inv_overlap,(triangle,r)),7,0).
fval(3,(comp_overlap_inv_overlap,(key0,r)),7,0).
fval(3,(comp_overlap_inv_overlap,(node2,key1)),7,0).
fval(3,(comp_overlap_inv_overlap,(key1,square)),7,0).
fval(3,(comp_overlap_inv_overlap,(node1,square)),7,0).
fval(3,(comp_overlap_inv_overlap,(r,key0)),7,0).
fval(3,(comp_overlap_inv_overlap,(key1,node1)),7,0).
fval(3,(comp_overlap_inv_overlap,(triangle,square)),7,0).
fval(3,(comp_overlap_inv_overlap,(key0,square)),7,0).
fval(3,(comp_overlap_inv_overlap,(square,key0)),7,0).
fval(3,(comp_overlap_inv_overlap,(square,r)),7,0).
fval(3,(comp_overlap_inv_overlap,(key1,triangle)),7,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node1)),7,0).
fval(3,(comp_overlap_inv_overlap,(node2,key0)),7,0).
fval(3,(comp_overlap_inv_overlap,(key1,node2)),7,0).
fval(3,(comp_overlap_inv_overlap,(node2,r)),7,0).
fval(3,(comp_overlap_inv_overlap,(key0,node1)),7,0).
fval(3,(comp_overlap_inv_overlap,(node1,triangle)),7,0).
fval(3,(comp_overlap_inv_overlap,(r,square)),7,0).
fval(3,(comp_overlap_inv_overlap,(node1,key1)),7,0).
fval(3,(comp_overlap_inv_overlap,(node1,node2)),7,0).
fval(3,(comp_overlap_inv_overlap,(key0,triangle)),7,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node2)),7,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key1)),7,0).
fval(3,(comp_overlap_inv_overlap,(r,node1)),7,0).
fval(3,(comp_overlap_inv_overlap,(key0,node2)),7,0).
fval(3,(comp_overlap_inv_overlap,(node2,square)),7,0).
fval(3,(comp_overlap_inv_overlap,(node1,key0)),7,0).
fval(3,(comp_overlap_inv_overlap,(square,node1)),7,0).
fval(3,(comp_overlap_inv_overlap,(r,node2)),7,0).
fval(3,(comp_overlap_inv_overlap,(node2,node1)),7,0).
fval(3,(comp_overlap_inv_overlap,(r,triangle)),7,0).
fval(3,(comp_overlap_inv_overlap,(key1,r)),7,0).
fval(3,(comp_overlap_inv_overlap,(r,key1)),7,0).
fval(3,(comp_overlap_inv_overlap,(square,triangle)),7,0).
fval(3,(comp_overlap_inv_overlap,(node1,r)),7,0).
fval(3,(comp_overlap_inv_overlap,(square,node2)),7,0).
fval(3,(comp_overlap_inv_overlap,(square,key1)),7,0).
fval(3,(comp_overlap_inv_overlap,(r,key1)),8,1).
fval(3,(comp_overlap_inv_overlap,(key1,r)),8,1).
fval(3,(comp_overlap_inv_overlap,(node2,triangle)),8,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key0)),8,0).
fval(3,(comp_overlap_inv_overlap,(triangle,r)),8,0).
fval(3,(comp_overlap_inv_overlap,(node2,key1)),8,0).
fval(3,(comp_overlap_inv_overlap,(key0,r)),8,0).
fval(3,(comp_overlap_inv_overlap,(key1,square)),8,0).
fval(3,(comp_overlap_inv_overlap,(node1,square)),8,0).
fval(3,(comp_overlap_inv_overlap,(r,key0)),8,0).
fval(3,(comp_overlap_inv_overlap,(key1,node1)),8,0).
fval(3,(comp_overlap_inv_overlap,(triangle,square)),8,0).
fval(3,(comp_overlap_inv_overlap,(key0,square)),8,0).
fval(3,(comp_overlap_inv_overlap,(square,key0)),8,0).
fval(3,(comp_overlap_inv_overlap,(square,r)),8,0).
fval(3,(comp_overlap_inv_overlap,(key1,triangle)),8,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node1)),8,0).
fval(3,(comp_overlap_inv_overlap,(node2,key0)),8,0).
fval(3,(comp_overlap_inv_overlap,(key1,node2)),8,0).
fval(3,(comp_overlap_inv_overlap,(node2,r)),8,0).
fval(3,(comp_overlap_inv_overlap,(key0,node1)),8,0).
fval(3,(comp_overlap_inv_overlap,(node1,triangle)),8,0).
fval(3,(comp_overlap_inv_overlap,(r,square)),8,0).
fval(3,(comp_overlap_inv_overlap,(node1,key1)),8,0).
fval(3,(comp_overlap_inv_overlap,(node1,node2)),8,0).
fval(3,(comp_overlap_inv_overlap,(key0,triangle)),8,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node2)),8,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key1)),8,0).
fval(3,(comp_overlap_inv_overlap,(r,node1)),8,0).
fval(3,(comp_overlap_inv_overlap,(key0,node2)),8,0).
fval(3,(comp_overlap_inv_overlap,(key0,key1)),8,0).
fval(3,(comp_overlap_inv_overlap,(node2,square)),8,0).
fval(3,(comp_overlap_inv_overlap,(node1,key0)),8,0).
fval(3,(comp_overlap_inv_overlap,(square,node1)),8,0).
fval(3,(comp_overlap_inv_overlap,(r,node2)),8,0).
fval(3,(comp_overlap_inv_overlap,(key1,key0)),8,0).
fval(3,(comp_overlap_inv_overlap,(r,triangle)),8,0).
fval(3,(comp_overlap_inv_overlap,(node2,node1)),8,0).
fval(3,(comp_overlap_inv_overlap,(square,triangle)),8,0).
fval(3,(comp_overlap_inv_overlap,(node1,r)),8,0).
fval(3,(comp_overlap_inv_overlap,(square,node2)),8,0).
fval(3,(comp_overlap_inv_overlap,(square,key1)),8,0).
fval(3,(comp_overlap_inv_overlap,(key0,r)),9,1).
fval(3,(comp_overlap_inv_overlap,(r,key0)),9,1).
fval(3,(comp_overlap_inv_overlap,(node2,triangle)),9,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key0)),9,0).
fval(3,(comp_overlap_inv_overlap,(triangle,r)),9,0).
fval(3,(comp_overlap_inv_overlap,(node2,key1)),9,0).
fval(3,(comp_overlap_inv_overlap,(key1,square)),9,0).
fval(3,(comp_overlap_inv_overlap,(node1,square)),9,0).
fval(3,(comp_overlap_inv_overlap,(key1,node1)),9,0).
fval(3,(comp_overlap_inv_overlap,(triangle,square)),9,0).
fval(3,(comp_overlap_inv_overlap,(key0,square)),9,0).
fval(3,(comp_overlap_inv_overlap,(square,key0)),9,0).
fval(3,(comp_overlap_inv_overlap,(square,r)),9,0).
fval(3,(comp_overlap_inv_overlap,(key1,triangle)),9,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node1)),9,0).
fval(3,(comp_overlap_inv_overlap,(node2,key0)),9,0).
fval(3,(comp_overlap_inv_overlap,(key1,node2)),9,0).
fval(3,(comp_overlap_inv_overlap,(node2,r)),9,0).
fval(3,(comp_overlap_inv_overlap,(key0,node1)),9,0).
fval(3,(comp_overlap_inv_overlap,(node1,triangle)),9,0).
fval(3,(comp_overlap_inv_overlap,(r,square)),9,0).
fval(3,(comp_overlap_inv_overlap,(node1,key1)),9,0).
fval(3,(comp_overlap_inv_overlap,(node1,node2)),9,0).
fval(3,(comp_overlap_inv_overlap,(key0,triangle)),9,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node2)),9,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key1)),9,0).
fval(3,(comp_overlap_inv_overlap,(r,node1)),9,0).
fval(3,(comp_overlap_inv_overlap,(key0,node2)),9,0).
fval(3,(comp_overlap_inv_overlap,(key0,key1)),9,0).
fval(3,(comp_overlap_inv_overlap,(node2,square)),9,0).
fval(3,(comp_overlap_inv_overlap,(node1,key0)),9,0).
fval(3,(comp_overlap_inv_overlap,(square,node1)),9,0).
fval(3,(comp_overlap_inv_overlap,(r,node2)),9,0).
fval(3,(comp_overlap_inv_overlap,(key1,key0)),9,0).
fval(3,(comp_overlap_inv_overlap,(r,triangle)),9,0).
fval(3,(comp_overlap_inv_overlap,(node2,node1)),9,0).
fval(3,(comp_overlap_inv_overlap,(key1,r)),9,0).
fval(3,(comp_overlap_inv_overlap,(r,key1)),9,0).
fval(3,(comp_overlap_inv_overlap,(square,triangle)),9,0).
fval(3,(comp_overlap_inv_overlap,(node1,r)),9,0).
fval(3,(comp_overlap_inv_overlap,(square,node2)),9,0).
fval(3,(comp_overlap_inv_overlap,(square,key1)),9,0).
fval(3,(comp_overlap_inv_overlap,(node2,triangle)),10,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key0)),10,0).
fval(3,(comp_overlap_inv_overlap,(triangle,r)),10,0).
fval(3,(comp_overlap_inv_overlap,(node2,key1)),10,0).
fval(3,(comp_overlap_inv_overlap,(key0,r)),10,0).
fval(3,(comp_overlap_inv_overlap,(key1,square)),10,0).
fval(3,(comp_overlap_inv_overlap,(node1,square)),10,0).
fval(3,(comp_overlap_inv_overlap,(r,key0)),10,0).
fval(3,(comp_overlap_inv_overlap,(key1,node1)),10,0).
fval(3,(comp_overlap_inv_overlap,(triangle,square)),10,0).
fval(3,(comp_overlap_inv_overlap,(key0,square)),10,0).
fval(3,(comp_overlap_inv_overlap,(square,key0)),10,0).
fval(3,(comp_overlap_inv_overlap,(square,r)),10,0).
fval(3,(comp_overlap_inv_overlap,(key1,triangle)),10,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node1)),10,0).
fval(3,(comp_overlap_inv_overlap,(node2,key0)),10,0).
fval(3,(comp_overlap_inv_overlap,(key1,node2)),10,0).
fval(3,(comp_overlap_inv_overlap,(node2,r)),10,0).
fval(3,(comp_overlap_inv_overlap,(key0,node1)),10,0).
fval(3,(comp_overlap_inv_overlap,(node1,triangle)),10,0).
fval(3,(comp_overlap_inv_overlap,(r,square)),10,0).
fval(3,(comp_overlap_inv_overlap,(node1,key1)),10,0).
fval(3,(comp_overlap_inv_overlap,(node1,node2)),10,0).
fval(3,(comp_overlap_inv_overlap,(key0,triangle)),10,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node2)),10,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key1)),10,0).
fval(3,(comp_overlap_inv_overlap,(r,node1)),10,0).
fval(3,(comp_overlap_inv_overlap,(key0,node2)),10,0).
fval(3,(comp_overlap_inv_overlap,(key0,key1)),10,0).
fval(3,(comp_overlap_inv_overlap,(node2,square)),10,0).
fval(3,(comp_overlap_inv_overlap,(node1,key0)),10,0).
fval(3,(comp_overlap_inv_overlap,(square,node1)),10,0).
fval(3,(comp_overlap_inv_overlap,(r,node2)),10,0).
fval(3,(comp_overlap_inv_overlap,(key1,key0)),10,0).
fval(3,(comp_overlap_inv_overlap,(r,triangle)),10,0).
fval(3,(comp_overlap_inv_overlap,(node2,node1)),10,0).
fval(3,(comp_overlap_inv_overlap,(key1,r)),10,0).
fval(3,(comp_overlap_inv_overlap,(r,key1)),10,0).
fval(3,(comp_overlap_inv_overlap,(square,triangle)),10,0).
fval(3,(comp_overlap_inv_overlap,(node1,r)),10,0).
fval(3,(comp_overlap_inv_overlap,(square,node2)),10,0).
fval(3,(comp_overlap_inv_overlap,(square,key1)),10,0).
fval(3,(comp_overlap_inv_overlap,(node2,triangle)),11,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key0)),11,0).
fval(3,(comp_overlap_inv_overlap,(triangle,r)),11,0).
fval(3,(comp_overlap_inv_overlap,(node2,key1)),11,0).
fval(3,(comp_overlap_inv_overlap,(key0,r)),11,0).
fval(3,(comp_overlap_inv_overlap,(key1,square)),11,0).
fval(3,(comp_overlap_inv_overlap,(node1,square)),11,0).
fval(3,(comp_overlap_inv_overlap,(r,key0)),11,0).
fval(3,(comp_overlap_inv_overlap,(key1,node1)),11,0).
fval(3,(comp_overlap_inv_overlap,(triangle,square)),11,0).
fval(3,(comp_overlap_inv_overlap,(key0,square)),11,0).
fval(3,(comp_overlap_inv_overlap,(square,key0)),11,0).
fval(3,(comp_overlap_inv_overlap,(square,r)),11,0).
fval(3,(comp_overlap_inv_overlap,(key1,triangle)),11,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node1)),11,0).
fval(3,(comp_overlap_inv_overlap,(node2,key0)),11,0).
fval(3,(comp_overlap_inv_overlap,(key1,node2)),11,0).
fval(3,(comp_overlap_inv_overlap,(node2,r)),11,0).
fval(3,(comp_overlap_inv_overlap,(key0,node1)),11,0).
fval(3,(comp_overlap_inv_overlap,(node1,triangle)),11,0).
fval(3,(comp_overlap_inv_overlap,(r,square)),11,0).
fval(3,(comp_overlap_inv_overlap,(node1,key1)),11,0).
fval(3,(comp_overlap_inv_overlap,(node1,node2)),11,0).
fval(3,(comp_overlap_inv_overlap,(key0,triangle)),11,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node2)),11,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key1)),11,0).
fval(3,(comp_overlap_inv_overlap,(r,node1)),11,0).
fval(3,(comp_overlap_inv_overlap,(key0,node2)),11,0).
fval(3,(comp_overlap_inv_overlap,(key0,key1)),11,0).
fval(3,(comp_overlap_inv_overlap,(node2,square)),11,0).
fval(3,(comp_overlap_inv_overlap,(node1,key0)),11,0).
fval(3,(comp_overlap_inv_overlap,(square,node1)),11,0).
fval(3,(comp_overlap_inv_overlap,(r,node2)),11,0).
fval(3,(comp_overlap_inv_overlap,(key1,key0)),11,0).
fval(3,(comp_overlap_inv_overlap,(r,triangle)),11,0).
fval(3,(comp_overlap_inv_overlap,(node2,node1)),11,0).
fval(3,(comp_overlap_inv_overlap,(key1,r)),11,0).
fval(3,(comp_overlap_inv_overlap,(r,key1)),11,0).
fval(3,(comp_overlap_inv_overlap,(square,triangle)),11,0).
fval(3,(comp_overlap_inv_overlap,(node1,r)),11,0).
fval(3,(comp_overlap_inv_overlap,(square,node2)),11,0).
fval(3,(comp_overlap_inv_overlap,(square,key1)),11,0).
fval(3,(comp_overlap_inv_overlap,(key0,r)),12,1).
fval(3,(comp_overlap_inv_overlap,(r,key0)),12,1).
fval(3,(comp_overlap_inv_overlap,(node2,triangle)),12,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key0)),12,0).
fval(3,(comp_overlap_inv_overlap,(triangle,r)),12,0).
fval(3,(comp_overlap_inv_overlap,(node2,key1)),12,0).
fval(3,(comp_overlap_inv_overlap,(key1,square)),12,0).
fval(3,(comp_overlap_inv_overlap,(node1,square)),12,0).
fval(3,(comp_overlap_inv_overlap,(key1,node1)),12,0).
fval(3,(comp_overlap_inv_overlap,(triangle,square)),12,0).
fval(3,(comp_overlap_inv_overlap,(key0,square)),12,0).
fval(3,(comp_overlap_inv_overlap,(square,key0)),12,0).
fval(3,(comp_overlap_inv_overlap,(square,r)),12,0).
fval(3,(comp_overlap_inv_overlap,(key1,triangle)),12,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node1)),12,0).
fval(3,(comp_overlap_inv_overlap,(node2,key0)),12,0).
fval(3,(comp_overlap_inv_overlap,(key1,node2)),12,0).
fval(3,(comp_overlap_inv_overlap,(node2,r)),12,0).
fval(3,(comp_overlap_inv_overlap,(key0,node1)),12,0).
fval(3,(comp_overlap_inv_overlap,(node1,triangle)),12,0).
fval(3,(comp_overlap_inv_overlap,(r,square)),12,0).
fval(3,(comp_overlap_inv_overlap,(node1,key1)),12,0).
fval(3,(comp_overlap_inv_overlap,(node1,node2)),12,0).
fval(3,(comp_overlap_inv_overlap,(key0,triangle)),12,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node2)),12,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key1)),12,0).
fval(3,(comp_overlap_inv_overlap,(r,node1)),12,0).
fval(3,(comp_overlap_inv_overlap,(key0,node2)),12,0).
fval(3,(comp_overlap_inv_overlap,(key0,key1)),12,0).
fval(3,(comp_overlap_inv_overlap,(node2,square)),12,0).
fval(3,(comp_overlap_inv_overlap,(node1,key0)),12,0).
fval(3,(comp_overlap_inv_overlap,(square,node1)),12,0).
fval(3,(comp_overlap_inv_overlap,(r,node2)),12,0).
fval(3,(comp_overlap_inv_overlap,(key1,key0)),12,0).
fval(3,(comp_overlap_inv_overlap,(r,triangle)),12,0).
fval(3,(comp_overlap_inv_overlap,(node2,node1)),12,0).
fval(3,(comp_overlap_inv_overlap,(key1,r)),12,0).
fval(3,(comp_overlap_inv_overlap,(r,key1)),12,0).
fval(3,(comp_overlap_inv_overlap,(square,triangle)),12,0).
fval(3,(comp_overlap_inv_overlap,(node1,r)),12,0).
fval(3,(comp_overlap_inv_overlap,(square,node2)),12,0).
fval(3,(comp_overlap_inv_overlap,(square,key1)),12,0).
fval(3,(comp_overlap_inv_overlap,(r,key1)),13,1).
fval(3,(comp_overlap_inv_overlap,(key1,r)),13,1).
fval(3,(comp_overlap_inv_overlap,(node2,triangle)),13,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key0)),13,0).
fval(3,(comp_overlap_inv_overlap,(triangle,r)),13,0).
fval(3,(comp_overlap_inv_overlap,(node2,key1)),13,0).
fval(3,(comp_overlap_inv_overlap,(key0,r)),13,0).
fval(3,(comp_overlap_inv_overlap,(key1,square)),13,0).
fval(3,(comp_overlap_inv_overlap,(node1,square)),13,0).
fval(3,(comp_overlap_inv_overlap,(r,key0)),13,0).
fval(3,(comp_overlap_inv_overlap,(key1,node1)),13,0).
fval(3,(comp_overlap_inv_overlap,(triangle,square)),13,0).
fval(3,(comp_overlap_inv_overlap,(key0,square)),13,0).
fval(3,(comp_overlap_inv_overlap,(square,key0)),13,0).
fval(3,(comp_overlap_inv_overlap,(square,r)),13,0).
fval(3,(comp_overlap_inv_overlap,(key1,triangle)),13,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node1)),13,0).
fval(3,(comp_overlap_inv_overlap,(node2,key0)),13,0).
fval(3,(comp_overlap_inv_overlap,(key1,node2)),13,0).
fval(3,(comp_overlap_inv_overlap,(node2,r)),13,0).
fval(3,(comp_overlap_inv_overlap,(key0,node1)),13,0).
fval(3,(comp_overlap_inv_overlap,(node1,triangle)),13,0).
fval(3,(comp_overlap_inv_overlap,(r,square)),13,0).
fval(3,(comp_overlap_inv_overlap,(node1,key1)),13,0).
fval(3,(comp_overlap_inv_overlap,(node1,node2)),13,0).
fval(3,(comp_overlap_inv_overlap,(key0,triangle)),13,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node2)),13,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key1)),13,0).
fval(3,(comp_overlap_inv_overlap,(r,node1)),13,0).
fval(3,(comp_overlap_inv_overlap,(key0,node2)),13,0).
fval(3,(comp_overlap_inv_overlap,(key0,key1)),13,0).
fval(3,(comp_overlap_inv_overlap,(node2,square)),13,0).
fval(3,(comp_overlap_inv_overlap,(node1,key0)),13,0).
fval(3,(comp_overlap_inv_overlap,(square,node1)),13,0).
fval(3,(comp_overlap_inv_overlap,(r,node2)),13,0).
fval(3,(comp_overlap_inv_overlap,(key1,key0)),13,0).
fval(3,(comp_overlap_inv_overlap,(r,triangle)),13,0).
fval(3,(comp_overlap_inv_overlap,(node2,node1)),13,0).
fval(3,(comp_overlap_inv_overlap,(square,triangle)),13,0).
fval(3,(comp_overlap_inv_overlap,(node1,r)),13,0).
fval(3,(comp_overlap_inv_overlap,(square,node2)),13,0).
fval(3,(comp_overlap_inv_overlap,(square,key1)),13,0).
fval(3,(comp_overlap_inv_overlap,(r,key1)),14,1).
fval(3,(comp_overlap_inv_overlap,(key1,r)),14,1).
fval(3,(comp_overlap_inv_overlap,(node2,triangle)),14,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key0)),14,0).
fval(3,(comp_overlap_inv_overlap,(triangle,r)),14,0).
fval(3,(comp_overlap_inv_overlap,(key0,r)),14,0).
fval(3,(comp_overlap_inv_overlap,(node2,key1)),14,0).
fval(3,(comp_overlap_inv_overlap,(key1,square)),14,0).
fval(3,(comp_overlap_inv_overlap,(node1,square)),14,0).
fval(3,(comp_overlap_inv_overlap,(r,key0)),14,0).
fval(3,(comp_overlap_inv_overlap,(key1,node1)),14,0).
fval(3,(comp_overlap_inv_overlap,(triangle,square)),14,0).
fval(3,(comp_overlap_inv_overlap,(key0,square)),14,0).
fval(3,(comp_overlap_inv_overlap,(square,key0)),14,0).
fval(3,(comp_overlap_inv_overlap,(square,r)),14,0).
fval(3,(comp_overlap_inv_overlap,(key1,triangle)),14,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node1)),14,0).
fval(3,(comp_overlap_inv_overlap,(node2,key0)),14,0).
fval(3,(comp_overlap_inv_overlap,(key1,node2)),14,0).
fval(3,(comp_overlap_inv_overlap,(node2,r)),14,0).
fval(3,(comp_overlap_inv_overlap,(key0,node1)),14,0).
fval(3,(comp_overlap_inv_overlap,(node1,triangle)),14,0).
fval(3,(comp_overlap_inv_overlap,(r,square)),14,0).
fval(3,(comp_overlap_inv_overlap,(node1,key1)),14,0).
fval(3,(comp_overlap_inv_overlap,(node1,node2)),14,0).
fval(3,(comp_overlap_inv_overlap,(key0,triangle)),14,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node2)),14,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key1)),14,0).
fval(3,(comp_overlap_inv_overlap,(r,node1)),14,0).
fval(3,(comp_overlap_inv_overlap,(key0,node2)),14,0).
fval(3,(comp_overlap_inv_overlap,(key0,key1)),14,0).
fval(3,(comp_overlap_inv_overlap,(node2,square)),14,0).
fval(3,(comp_overlap_inv_overlap,(node1,key0)),14,0).
fval(3,(comp_overlap_inv_overlap,(square,node1)),14,0).
fval(3,(comp_overlap_inv_overlap,(r,node2)),14,0).
fval(3,(comp_overlap_inv_overlap,(key1,key0)),14,0).
fval(3,(comp_overlap_inv_overlap,(r,triangle)),14,0).
fval(3,(comp_overlap_inv_overlap,(node2,node1)),14,0).
fval(3,(comp_overlap_inv_overlap,(square,triangle)),14,0).
fval(3,(comp_overlap_inv_overlap,(node1,r)),14,0).
fval(3,(comp_overlap_inv_overlap,(square,node2)),14,0).
fval(3,(comp_overlap_inv_overlap,(square,key1)),14,0).
fval(3,(comp_overlap_inv_overlap,(key0,r)),15,1).
fval(3,(comp_overlap_inv_overlap,(key1,r)),15,1).
fval(3,(comp_overlap_inv_overlap,(key1,key0)),15,1).
fval(3,(comp_overlap_inv_overlap,(r,key1)),15,1).
fval(3,(comp_overlap_inv_overlap,(key0,key1)),15,1).
fval(3,(comp_overlap_inv_overlap,(r,key0)),15,1).
fval(3,(comp_overlap_inv_overlap,(node2,triangle)),15,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key0)),15,0).
fval(3,(comp_overlap_inv_overlap,(triangle,r)),15,0).
fval(3,(comp_overlap_inv_overlap,(node2,key1)),15,0).
fval(3,(comp_overlap_inv_overlap,(key1,square)),15,0).
fval(3,(comp_overlap_inv_overlap,(node1,square)),15,0).
fval(3,(comp_overlap_inv_overlap,(key1,node1)),15,0).
fval(3,(comp_overlap_inv_overlap,(triangle,square)),15,0).
fval(3,(comp_overlap_inv_overlap,(key0,square)),15,0).
fval(3,(comp_overlap_inv_overlap,(square,key0)),15,0).
fval(3,(comp_overlap_inv_overlap,(square,r)),15,0).
fval(3,(comp_overlap_inv_overlap,(key1,triangle)),15,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node1)),15,0).
fval(3,(comp_overlap_inv_overlap,(node2,key0)),15,0).
fval(3,(comp_overlap_inv_overlap,(key1,node2)),15,0).
fval(3,(comp_overlap_inv_overlap,(node2,r)),15,0).
fval(3,(comp_overlap_inv_overlap,(key0,node1)),15,0).
fval(3,(comp_overlap_inv_overlap,(node1,triangle)),15,0).
fval(3,(comp_overlap_inv_overlap,(r,square)),15,0).
fval(3,(comp_overlap_inv_overlap,(node1,key1)),15,0).
fval(3,(comp_overlap_inv_overlap,(node1,node2)),15,0).
fval(3,(comp_overlap_inv_overlap,(key0,triangle)),15,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node2)),15,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key1)),15,0).
fval(3,(comp_overlap_inv_overlap,(r,node1)),15,0).
fval(3,(comp_overlap_inv_overlap,(key0,node2)),15,0).
fval(3,(comp_overlap_inv_overlap,(node2,square)),15,0).
fval(3,(comp_overlap_inv_overlap,(node1,key0)),15,0).
fval(3,(comp_overlap_inv_overlap,(square,node1)),15,0).
fval(3,(comp_overlap_inv_overlap,(r,node2)),15,0).
fval(3,(comp_overlap_inv_overlap,(node2,node1)),15,0).
fval(3,(comp_overlap_inv_overlap,(r,triangle)),15,0).
fval(3,(comp_overlap_inv_overlap,(square,triangle)),15,0).
fval(3,(comp_overlap_inv_overlap,(node1,r)),15,0).
fval(3,(comp_overlap_inv_overlap,(square,node2)),15,0).
fval(3,(comp_overlap_inv_overlap,(square,key1)),15,0).
fval(3,(comp_overlap_inv_overlap,(node2,triangle)),16,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key0)),16,0).
fval(3,(comp_overlap_inv_overlap,(triangle,r)),16,0).
fval(3,(comp_overlap_inv_overlap,(key0,r)),16,0).
fval(3,(comp_overlap_inv_overlap,(node2,key1)),16,0).
fval(3,(comp_overlap_inv_overlap,(key1,square)),16,0).
fval(3,(comp_overlap_inv_overlap,(node1,square)),16,0).
fval(3,(comp_overlap_inv_overlap,(r,key0)),16,0).
fval(3,(comp_overlap_inv_overlap,(key1,node1)),16,0).
fval(3,(comp_overlap_inv_overlap,(triangle,square)),16,0).
fval(3,(comp_overlap_inv_overlap,(key0,square)),16,0).
fval(3,(comp_overlap_inv_overlap,(square,key0)),16,0).
fval(3,(comp_overlap_inv_overlap,(square,r)),16,0).
fval(3,(comp_overlap_inv_overlap,(key1,triangle)),16,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node1)),16,0).
fval(3,(comp_overlap_inv_overlap,(node2,key0)),16,0).
fval(3,(comp_overlap_inv_overlap,(key1,node2)),16,0).
fval(3,(comp_overlap_inv_overlap,(node2,r)),16,0).
fval(3,(comp_overlap_inv_overlap,(key0,node1)),16,0).
fval(3,(comp_overlap_inv_overlap,(node1,triangle)),16,0).
fval(3,(comp_overlap_inv_overlap,(r,square)),16,0).
fval(3,(comp_overlap_inv_overlap,(node1,key1)),16,0).
fval(3,(comp_overlap_inv_overlap,(node1,node2)),16,0).
fval(3,(comp_overlap_inv_overlap,(key0,triangle)),16,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node2)),16,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key1)),16,0).
fval(3,(comp_overlap_inv_overlap,(r,node1)),16,0).
fval(3,(comp_overlap_inv_overlap,(key0,node2)),16,0).
fval(3,(comp_overlap_inv_overlap,(key0,key1)),16,0).
fval(3,(comp_overlap_inv_overlap,(node2,square)),16,0).
fval(3,(comp_overlap_inv_overlap,(node1,key0)),16,0).
fval(3,(comp_overlap_inv_overlap,(square,node1)),16,0).
fval(3,(comp_overlap_inv_overlap,(r,node2)),16,0).
fval(3,(comp_overlap_inv_overlap,(key1,key0)),16,0).
fval(3,(comp_overlap_inv_overlap,(r,triangle)),16,0).
fval(3,(comp_overlap_inv_overlap,(node2,node1)),16,0).
fval(3,(comp_overlap_inv_overlap,(key1,r)),16,0).
fval(3,(comp_overlap_inv_overlap,(r,key1)),16,0).
fval(3,(comp_overlap_inv_overlap,(square,triangle)),16,0).
fval(3,(comp_overlap_inv_overlap,(node1,r)),16,0).
fval(3,(comp_overlap_inv_overlap,(square,node2)),16,0).
fval(3,(comp_overlap_inv_overlap,(square,key1)),16,0).
fval(3,(comp_overlap_inv_overlap,(key0,key1)),17,1).
fval(3,(comp_overlap_inv_overlap,(key1,key0)),17,1).
fval(3,(comp_overlap_inv_overlap,(node2,triangle)),17,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key0)),17,0).
fval(3,(comp_overlap_inv_overlap,(triangle,r)),17,0).
fval(3,(comp_overlap_inv_overlap,(key0,r)),17,0).
fval(3,(comp_overlap_inv_overlap,(node2,key1)),17,0).
fval(3,(comp_overlap_inv_overlap,(key1,square)),17,0).
fval(3,(comp_overlap_inv_overlap,(node1,square)),17,0).
fval(3,(comp_overlap_inv_overlap,(r,key0)),17,0).
fval(3,(comp_overlap_inv_overlap,(key1,node1)),17,0).
fval(3,(comp_overlap_inv_overlap,(triangle,square)),17,0).
fval(3,(comp_overlap_inv_overlap,(key0,square)),17,0).
fval(3,(comp_overlap_inv_overlap,(square,key0)),17,0).
fval(3,(comp_overlap_inv_overlap,(square,r)),17,0).
fval(3,(comp_overlap_inv_overlap,(key1,triangle)),17,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node1)),17,0).
fval(3,(comp_overlap_inv_overlap,(node2,key0)),17,0).
fval(3,(comp_overlap_inv_overlap,(key1,node2)),17,0).
fval(3,(comp_overlap_inv_overlap,(node2,r)),17,0).
fval(3,(comp_overlap_inv_overlap,(key0,node1)),17,0).
fval(3,(comp_overlap_inv_overlap,(node1,triangle)),17,0).
fval(3,(comp_overlap_inv_overlap,(r,square)),17,0).
fval(3,(comp_overlap_inv_overlap,(node1,key1)),17,0).
fval(3,(comp_overlap_inv_overlap,(node1,node2)),17,0).
fval(3,(comp_overlap_inv_overlap,(key0,triangle)),17,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node2)),17,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key1)),17,0).
fval(3,(comp_overlap_inv_overlap,(r,node1)),17,0).
fval(3,(comp_overlap_inv_overlap,(key0,node2)),17,0).
fval(3,(comp_overlap_inv_overlap,(node2,square)),17,0).
fval(3,(comp_overlap_inv_overlap,(node1,key0)),17,0).
fval(3,(comp_overlap_inv_overlap,(square,node1)),17,0).
fval(3,(comp_overlap_inv_overlap,(r,node2)),17,0).
fval(3,(comp_overlap_inv_overlap,(node2,node1)),17,0).
fval(3,(comp_overlap_inv_overlap,(r,triangle)),17,0).
fval(3,(comp_overlap_inv_overlap,(key1,r)),17,0).
fval(3,(comp_overlap_inv_overlap,(r,key1)),17,0).
fval(3,(comp_overlap_inv_overlap,(square,triangle)),17,0).
fval(3,(comp_overlap_inv_overlap,(node1,r)),17,0).
fval(3,(comp_overlap_inv_overlap,(square,node2)),17,0).
fval(3,(comp_overlap_inv_overlap,(square,key1)),17,0).
fval(3,(comp_overlap_inv_overlap,(key0,r)),18,1).
fval(3,(comp_overlap_inv_overlap,(r,key0)),18,1).
fval(3,(comp_overlap_inv_overlap,(node2,triangle)),18,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key0)),18,0).
fval(3,(comp_overlap_inv_overlap,(triangle,r)),18,0).
fval(3,(comp_overlap_inv_overlap,(node2,key1)),18,0).
fval(3,(comp_overlap_inv_overlap,(key1,square)),18,0).
fval(3,(comp_overlap_inv_overlap,(node1,square)),18,0).
fval(3,(comp_overlap_inv_overlap,(key1,node1)),18,0).
fval(3,(comp_overlap_inv_overlap,(triangle,square)),18,0).
fval(3,(comp_overlap_inv_overlap,(key0,square)),18,0).
fval(3,(comp_overlap_inv_overlap,(square,key0)),18,0).
fval(3,(comp_overlap_inv_overlap,(square,r)),18,0).
fval(3,(comp_overlap_inv_overlap,(key1,triangle)),18,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node1)),18,0).
fval(3,(comp_overlap_inv_overlap,(node2,key0)),18,0).
fval(3,(comp_overlap_inv_overlap,(key1,node2)),18,0).
fval(3,(comp_overlap_inv_overlap,(node2,r)),18,0).
fval(3,(comp_overlap_inv_overlap,(key0,node1)),18,0).
fval(3,(comp_overlap_inv_overlap,(node1,triangle)),18,0).
fval(3,(comp_overlap_inv_overlap,(r,square)),18,0).
fval(3,(comp_overlap_inv_overlap,(node1,key1)),18,0).
fval(3,(comp_overlap_inv_overlap,(node1,node2)),18,0).
fval(3,(comp_overlap_inv_overlap,(key0,triangle)),18,0).
fval(3,(comp_overlap_inv_overlap,(triangle,node2)),18,0).
fval(3,(comp_overlap_inv_overlap,(triangle,key1)),18,0).
fval(3,(comp_overlap_inv_overlap,(r,node1)),18,0).
fval(3,(comp_overlap_inv_overlap,(key0,node2)),18,0).
fval(3,(comp_overlap_inv_overlap,(key0,key1)),18,0).
fval(3,(comp_overlap_inv_overlap,(node2,square)),18,0).
fval(3,(comp_overlap_inv_overlap,(node1,key0)),18,0).
fval(3,(comp_overlap_inv_overlap,(square,node1)),18,0).
fval(3,(comp_overlap_inv_overlap,(r,node2)),18,0).
fval(3,(comp_overlap_inv_overlap,(key1,key0)),18,0).
fval(3,(comp_overlap_inv_overlap,(r,triangle)),18,0).
fval(3,(comp_overlap_inv_overlap,(node2,node1)),18,0).
fval(3,(comp_overlap_inv_overlap,(key1,r)),18,0).
fval(3,(comp_overlap_inv_overlap,(r,key1)),18,0).
fval(3,(comp_overlap_inv_overlap,(square,triangle)),18,0).
fval(3,(comp_overlap_inv_overlap,(node1,r)),18,0).
fval(3,(comp_overlap_inv_overlap,(square,node2)),18,0).
fval(3,(comp_overlap_inv_overlap,(square,key1)),18,0).
fval(3,(er_below_lockedcell,(node1,)),0).
fval(3,(er_below_lockedcell,(triangle,)),0).
fval(3,(er_below_lockedcell,(node2,)),0).
fval(3,(er_below_lockedcell,(key1,)),0).
fval(3,(er_below_lockedcell,(r,)),0).
fval(3,(er_below_lockedcell,(key0,)),0).
fval(3,(er_below_lockedcell,(square,)),0).
fval(3,(comp_below_overlap,(node2,triangle)),0).
fval(3,(comp_below_overlap,(triangle,key0)),0).
fval(3,(comp_below_overlap,(triangle,r)),0).
fval(3,(comp_below_overlap,(key0,r)),0).
fval(3,(comp_below_overlap,(node2,key1)),0).
fval(3,(comp_below_overlap,(key1,square)),0).
fval(3,(comp_below_overlap,(node1,square)),0).
fval(3,(comp_below_overlap,(r,key0)),0).
fval(3,(comp_below_overlap,(key1,node1)),0).
fval(3,(comp_below_overlap,(triangle,square)),0).
fval(3,(comp_below_overlap,(key0,square)),0).
fval(3,(comp_below_overlap,(square,key0)),0).
fval(3,(comp_below_overlap,(square,r)),0).
fval(3,(comp_below_overlap,(key1,triangle)),0).
fval(3,(comp_below_overlap,(triangle,node1)),0).
fval(3,(comp_below_overlap,(node2,key0)),0).
fval(3,(comp_below_overlap,(key1,node2)),0).
fval(3,(comp_below_overlap,(node2,r)),0).
fval(3,(comp_below_overlap,(key0,node1)),0).
fval(3,(comp_below_overlap,(node1,triangle)),0).
fval(3,(comp_below_overlap,(r,square)),0).
fval(3,(comp_below_overlap,(node1,key1)),0).
fval(3,(comp_below_overlap,(node1,node2)),0).
fval(3,(comp_below_overlap,(key0,triangle)),0).
fval(3,(comp_below_overlap,(triangle,node2)),0).
fval(3,(comp_below_overlap,(triangle,key1)),0).
fval(3,(comp_below_overlap,(r,node1)),0).
fval(3,(comp_below_overlap,(key0,node2)),0).
fval(3,(comp_below_overlap,(key0,key1)),0).
fval(3,(comp_below_overlap,(node2,square)),0).
fval(3,(comp_below_overlap,(node1,key0)),0).
fval(3,(comp_below_overlap,(square,node1)),0).
fval(3,(comp_below_overlap,(r,node2)),0).
fval(3,(comp_below_overlap,(key1,key0)),0).
fval(3,(comp_below_overlap,(r,triangle)),0).
fval(3,(comp_below_overlap,(node2,node1)),0).
fval(3,(comp_below_overlap,(key1,r)),0).
fval(3,(comp_below_overlap,(r,key1)),0).
fval(3,(comp_below_overlap,(square,triangle)),0).
fval(3,(comp_below_overlap,(node1,r)),0).
fval(3,(comp_below_overlap,(square,node2)),0).
fval(3,(comp_below_overlap,(square,key1)),0).
fval(3,(subset_key_verum,(0,)),1).
fval(3,(inter_er_overlap_verum_er_left_lockedcell,(node1,)),0).
fval(3,(inter_er_overlap_verum_er_left_lockedcell,(triangle,)),0).
fval(3,(inter_er_overlap_verum_er_left_lockedcell,(node2,)),0).
fval(3,(inter_er_overlap_verum_er_left_lockedcell,(key1,)),0).
fval(3,(inter_er_overlap_verum_er_left_lockedcell,(key0,)),0).
fval(3,(inter_er_overlap_verum_er_left_lockedcell,(r,)),0).
fval(3,(inter_er_overlap_verum_er_left_lockedcell,(square,)),0).
fval(3,(inter_er_overlap_robot_er_below_opencell,(node1,)),0).
fval(3,(inter_er_overlap_robot_er_below_opencell,(triangle,)),0).
fval(3,(inter_er_overlap_robot_er_below_opencell,(node2,)),0).
fval(3,(inter_er_overlap_robot_er_below_opencell,(key1,)),0).
fval(3,(inter_er_overlap_robot_er_below_opencell,(r,)),0).
fval(3,(inter_er_overlap_robot_er_below_opencell,(key0,)),0).
fval(3,(inter_er_overlap_robot_er_below_opencell,(square,)),0).
fval(3,(lockedcell,(node2,)),0,1).
fval(3,(lockedcell,(node1,)),0,0).
fval(3,(lockedcell,(triangle,)),0,0).
fval(3,(lockedcell,(key1,)),0,0).
fval(3,(lockedcell,(r,)),0,0).
fval(3,(lockedcell,(key0,)),0,0).
fval(3,(lockedcell,(square,)),0,0).
fval(3,(lockedcell,(node2,)),1,1).
fval(3,(lockedcell,(node1,)),1,0).
fval(3,(lockedcell,(triangle,)),1,0).
fval(3,(lockedcell,(key1,)),1,0).
fval(3,(lockedcell,(r,)),1,0).
fval(3,(lockedcell,(key0,)),1,0).
fval(3,(lockedcell,(square,)),1,0).
fval(3,(lockedcell,(node2,)),2,1).
fval(3,(lockedcell,(node1,)),2,0).
fval(3,(lockedcell,(triangle,)),2,0).
fval(3,(lockedcell,(key1,)),2,0).
fval(3,(lockedcell,(r,)),2,0).
fval(3,(lockedcell,(key0,)),2,0).
fval(3,(lockedcell,(square,)),2,0).
fval(3,(lockedcell,(node1,)),3,0).
fval(3,(lockedcell,(triangle,)),3,0).
fval(3,(lockedcell,(node2,)),3,0).
fval(3,(lockedcell,(key1,)),3,0).
fval(3,(lockedcell,(r,)),3,0).
fval(3,(lockedcell,(key0,)),3,0).
fval(3,(lockedcell,(square,)),3,0).
fval(3,(lockedcell,(node1,)),4,0).
fval(3,(lockedcell,(triangle,)),4,0).
fval(3,(lockedcell,(node2,)),4,0).
fval(3,(lockedcell,(key1,)),4,0).
fval(3,(lockedcell,(r,)),4,0).
fval(3,(lockedcell,(key0,)),4,0).
fval(3,(lockedcell,(square,)),4,0).
fval(3,(lockedcell,(node1,)),5,0).
fval(3,(lockedcell,(triangle,)),5,0).
fval(3,(lockedcell,(node2,)),5,0).
fval(3,(lockedcell,(key1,)),5,0).
fval(3,(lockedcell,(r,)),5,0).
fval(3,(lockedcell,(key0,)),5,0).
fval(3,(lockedcell,(square,)),5,0).
fval(3,(lockedcell,(node1,)),6,0).
fval(3,(lockedcell,(triangle,)),6,0).
fval(3,(lockedcell,(node2,)),6,0).
fval(3,(lockedcell,(key1,)),6,0).
fval(3,(lockedcell,(r,)),6,0).
fval(3,(lockedcell,(key0,)),6,0).
fval(3,(lockedcell,(square,)),6,0).
fval(3,(lockedcell,(node1,)),7,0).
fval(3,(lockedcell,(triangle,)),7,0).
fval(3,(lockedcell,(node2,)),7,0).
fval(3,(lockedcell,(key1,)),7,0).
fval(3,(lockedcell,(r,)),7,0).
fval(3,(lockedcell,(key0,)),7,0).
fval(3,(lockedcell,(square,)),7,0).
fval(3,(lockedcell,(node1,)),8,0).
fval(3,(lockedcell,(triangle,)),8,0).
fval(3,(lockedcell,(node2,)),8,0).
fval(3,(lockedcell,(key1,)),8,0).
fval(3,(lockedcell,(r,)),8,0).
fval(3,(lockedcell,(key0,)),8,0).
fval(3,(lockedcell,(square,)),8,0).
fval(3,(lockedcell,(node1,)),9,0).
fval(3,(lockedcell,(triangle,)),9,0).
fval(3,(lockedcell,(node2,)),9,0).
fval(3,(lockedcell,(key1,)),9,0).
fval(3,(lockedcell,(r,)),9,0).
fval(3,(lockedcell,(key0,)),9,0).
fval(3,(lockedcell,(square,)),9,0).
fval(3,(lockedcell,(node1,)),10,0).
fval(3,(lockedcell,(triangle,)),10,0).
fval(3,(lockedcell,(node2,)),10,0).
fval(3,(lockedcell,(key1,)),10,0).
fval(3,(lockedcell,(r,)),10,0).
fval(3,(lockedcell,(key0,)),10,0).
fval(3,(lockedcell,(square,)),10,0).
fval(3,(lockedcell,(node1,)),11,0).
fval(3,(lockedcell,(triangle,)),11,0).
fval(3,(lockedcell,(node2,)),11,0).
fval(3,(lockedcell,(key1,)),11,0).
fval(3,(lockedcell,(r,)),11,0).
fval(3,(lockedcell,(key0,)),11,0).
fval(3,(lockedcell,(square,)),11,0).
fval(3,(lockedcell,(node1,)),12,0).
fval(3,(lockedcell,(triangle,)),12,0).
fval(3,(lockedcell,(node2,)),12,0).
fval(3,(lockedcell,(key1,)),12,0).
fval(3,(lockedcell,(r,)),12,0).
fval(3,(lockedcell,(key0,)),12,0).
fval(3,(lockedcell,(square,)),12,0).
fval(3,(lockedcell,(node1,)),13,0).
fval(3,(lockedcell,(triangle,)),13,0).
fval(3,(lockedcell,(node2,)),13,0).
fval(3,(lockedcell,(key1,)),13,0).
fval(3,(lockedcell,(r,)),13,0).
fval(3,(lockedcell,(key0,)),13,0).
fval(3,(lockedcell,(square,)),13,0).
fval(3,(lockedcell,(node1,)),14,0).
fval(3,(lockedcell,(triangle,)),14,0).
fval(3,(lockedcell,(node2,)),14,0).
fval(3,(lockedcell,(key1,)),14,0).
fval(3,(lockedcell,(r,)),14,0).
fval(3,(lockedcell,(key0,)),14,0).
fval(3,(lockedcell,(square,)),14,0).
fval(3,(lockedcell,(node1,)),15,0).
fval(3,(lockedcell,(triangle,)),15,0).
fval(3,(lockedcell,(node2,)),15,0).
fval(3,(lockedcell,(key1,)),15,0).
fval(3,(lockedcell,(r,)),15,0).
fval(3,(lockedcell,(key0,)),15,0).
fval(3,(lockedcell,(square,)),15,0).
fval(3,(lockedcell,(node1,)),16,0).
fval(3,(lockedcell,(triangle,)),16,0).
fval(3,(lockedcell,(node2,)),16,0).
fval(3,(lockedcell,(key1,)),16,0).
fval(3,(lockedcell,(r,)),16,0).
fval(3,(lockedcell,(key0,)),16,0).
fval(3,(lockedcell,(square,)),16,0).
fval(3,(lockedcell,(node1,)),17,0).
fval(3,(lockedcell,(triangle,)),17,0).
fval(3,(lockedcell,(node2,)),17,0).
fval(3,(lockedcell,(key1,)),17,0).
fval(3,(lockedcell,(r,)),17,0).
fval(3,(lockedcell,(key0,)),17,0).
fval(3,(lockedcell,(square,)),17,0).
fval(3,(lockedcell,(node1,)),18,0).
fval(3,(lockedcell,(triangle,)),18,0).
fval(3,(lockedcell,(node2,)),18,0).
fval(3,(lockedcell,(key1,)),18,0).
fval(3,(lockedcell,(r,)),18,0).
fval(3,(lockedcell,(key0,)),18,0).
fval(3,(lockedcell,(square,)),18,0).
fval(3,(er_left_opencell,(node2,)),1).
fval(3,(er_left_opencell,(node1,)),0).
fval(3,(er_left_opencell,(triangle,)),0).
fval(3,(er_left_opencell,(key1,)),0).
fval(3,(er_left_opencell,(r,)),0).
fval(3,(er_left_opencell,(key0,)),0).
fval(3,(er_left_opencell,(square,)),0).
fval(3,(inter_er_below_opencell_er_overlap_key,(node1,)),0).
fval(3,(inter_er_below_opencell_er_overlap_key,(triangle,)),0).
fval(3,(inter_er_below_opencell_er_overlap_key,(node2,)),0).
fval(3,(inter_er_below_opencell_er_overlap_key,(key1,)),0).
fval(3,(inter_er_below_opencell_er_overlap_key,(r,)),0).
fval(3,(inter_er_below_opencell_er_overlap_key,(key0,)),0).
fval(3,(inter_er_below_opencell_er_overlap_key,(square,)),0).
fval(3,(comp_smaller_shape,(key0,triangle)),1).
fval(3,(comp_smaller_shape,(r,triangle)),1).
fval(3,(comp_smaller_shape,(key1,triangle)),1).
fval(3,(comp_smaller_shape,(node2,triangle)),0).
fval(3,(comp_smaller_shape,(triangle,key0)),0).
fval(3,(comp_smaller_shape,(triangle,r)),0).
fval(3,(comp_smaller_shape,(node2,key1)),0).
fval(3,(comp_smaller_shape,(key0,r)),0).
fval(3,(comp_smaller_shape,(key1,square)),0).
fval(3,(comp_smaller_shape,(node1,square)),0).
fval(3,(comp_smaller_shape,(r,key0)),0).
fval(3,(comp_smaller_shape,(key1,node1)),0).
fval(3,(comp_smaller_shape,(triangle,square)),0).
fval(3,(comp_smaller_shape,(key0,square)),0).
fval(3,(comp_smaller_shape,(square,r)),0).
fval(3,(comp_smaller_shape,(square,key0)),0).
fval(3,(comp_smaller_shape,(node2,key0)),0).
fval(3,(comp_smaller_shape,(triangle,node1)),0).
fval(3,(comp_smaller_shape,(key1,node2)),0).
fval(3,(comp_smaller_shape,(node2,r)),0).
fval(3,(comp_smaller_shape,(key0,node1)),0).
fval(3,(comp_smaller_shape,(node1,triangle)),0).
fval(3,(comp_smaller_shape,(r,square)),0).
fval(3,(comp_smaller_shape,(node1,key1)),0).
fval(3,(comp_smaller_shape,(node1,node2)),0).
fval(3,(comp_smaller_shape,(key0,node2)),0).
fval(3,(comp_smaller_shape,(triangle,node2)),0).
fval(3,(comp_smaller_shape,(triangle,key1)),0).
fval(3,(comp_smaller_shape,(r,node1)),0).
fval(3,(comp_smaller_shape,(key0,key1)),0).
fval(3,(comp_smaller_shape,(node2,square)),0).
fval(3,(comp_smaller_shape,(square,node1)),0).
fval(3,(comp_smaller_shape,(r,node2)),0).
fval(3,(comp_smaller_shape,(key1,key0)),0).
fval(3,(comp_smaller_shape,(node2,node1)),0).
fval(3,(comp_smaller_shape,(key1,r)),0).
fval(3,(comp_smaller_shape,(r,key1)),0).
fval(3,(comp_smaller_shape,(square,triangle)),0).
fval(3,(comp_smaller_shape,(node1,key0)),0).
fval(3,(comp_smaller_shape,(square,node2)),0).
fval(3,(comp_smaller_shape,(square,key1)),0).
fval(3,(comp_smaller_shape,(node1,r)),0).
fval(3,(comp_overlap_shape,(node1,triangle)),0,1).
fval(3,(comp_overlap_shape,(node1,square)),0,1).
fval(3,(comp_overlap_shape,(node2,triangle)),0,0).
fval(3,(comp_overlap_shape,(triangle,key0)),0,0).
fval(3,(comp_overlap_shape,(triangle,r)),0,0).
fval(3,(comp_overlap_shape,(key0,r)),0,0).
fval(3,(comp_overlap_shape,(node2,key1)),0,0).
fval(3,(comp_overlap_shape,(key1,square)),0,0).
fval(3,(comp_overlap_shape,(r,key0)),0,0).
fval(3,(comp_overlap_shape,(key1,node1)),0,0).
fval(3,(comp_overlap_shape,(triangle,square)),0,0).
fval(3,(comp_overlap_shape,(key0,square)),0,0).
fval(3,(comp_overlap_shape,(square,r)),0,0).
fval(3,(comp_overlap_shape,(square,key0)),0,0).
fval(3,(comp_overlap_shape,(node2,key0)),0,0).
fval(3,(comp_overlap_shape,(triangle,node1)),0,0).
fval(3,(comp_overlap_shape,(key1,triangle)),0,0).
fval(3,(comp_overlap_shape,(key1,node2)),0,0).
fval(3,(comp_overlap_shape,(node2,r)),0,0).
fval(3,(comp_overlap_shape,(key0,node1)),0,0).
fval(3,(comp_overlap_shape,(node1,node2)),0,0).
fval(3,(comp_overlap_shape,(r,square)),0,0).
fval(3,(comp_overlap_shape,(node1,key1)),0,0).
fval(3,(comp_overlap_shape,(key0,triangle)),0,0).
fval(3,(comp_overlap_shape,(key0,node2)),0,0).
fval(3,(comp_overlap_shape,(r,node1)),0,0).
fval(3,(comp_overlap_shape,(triangle,node2)),0,0).
fval(3,(comp_overlap_shape,(triangle,key1)),0,0).
fval(3,(comp_overlap_shape,(key0,key1)),0,0).
fval(3,(comp_overlap_shape,(node1,key0)),0,0).
fval(3,(comp_overlap_shape,(node2,square)),0,0).
fval(3,(comp_overlap_shape,(square,node1)),0,0).
fval(3,(comp_overlap_shape,(r,node2)),0,0).
fval(3,(comp_overlap_shape,(node2,node1)),0,0).
fval(3,(comp_overlap_shape,(r,triangle)),0,0).
fval(3,(comp_overlap_shape,(key1,r)),0,0).
fval(3,(comp_overlap_shape,(key1,key0)),0,0).
fval(3,(comp_overlap_shape,(r,key1)),0,0).
fval(3,(comp_overlap_shape,(square,triangle)),0,0).
fval(3,(comp_overlap_shape,(node1,r)),0,0).
fval(3,(comp_overlap_shape,(square,node2)),0,0).
fval(3,(comp_overlap_shape,(square,key1)),0,0).
fval(3,(comp_overlap_shape,(node1,triangle)),1,1).
fval(3,(comp_overlap_shape,(node2,triangle)),1,0).
fval(3,(comp_overlap_shape,(triangle,key0)),1,0).
fval(3,(comp_overlap_shape,(triangle,r)),1,0).
fval(3,(comp_overlap_shape,(key0,r)),1,0).
fval(3,(comp_overlap_shape,(node2,key1)),1,0).
fval(3,(comp_overlap_shape,(key1,square)),1,0).
fval(3,(comp_overlap_shape,(node1,square)),1,0).
fval(3,(comp_overlap_shape,(r,key0)),1,0).
fval(3,(comp_overlap_shape,(key1,node1)),1,0).
fval(3,(comp_overlap_shape,(triangle,square)),1,0).
fval(3,(comp_overlap_shape,(key0,square)),1,0).
fval(3,(comp_overlap_shape,(square,r)),1,0).
fval(3,(comp_overlap_shape,(square,key0)),1,0).
fval(3,(comp_overlap_shape,(node2,key0)),1,0).
fval(3,(comp_overlap_shape,(triangle,node1)),1,0).
fval(3,(comp_overlap_shape,(key1,triangle)),1,0).
fval(3,(comp_overlap_shape,(key1,node2)),1,0).
fval(3,(comp_overlap_shape,(node2,r)),1,0).
fval(3,(comp_overlap_shape,(key0,node1)),1,0).
fval(3,(comp_overlap_shape,(node1,node2)),1,0).
fval(3,(comp_overlap_shape,(r,square)),1,0).
fval(3,(comp_overlap_shape,(node1,key1)),1,0).
fval(3,(comp_overlap_shape,(key0,triangle)),1,0).
fval(3,(comp_overlap_shape,(key0,node2)),1,0).
fval(3,(comp_overlap_shape,(r,node1)),1,0).
fval(3,(comp_overlap_shape,(triangle,node2)),1,0).
fval(3,(comp_overlap_shape,(triangle,key1)),1,0).
fval(3,(comp_overlap_shape,(key0,key1)),1,0).
fval(3,(comp_overlap_shape,(node1,key0)),1,0).
fval(3,(comp_overlap_shape,(node2,square)),1,0).
fval(3,(comp_overlap_shape,(square,node1)),1,0).
fval(3,(comp_overlap_shape,(r,node2)),1,0).
fval(3,(comp_overlap_shape,(node2,node1)),1,0).
fval(3,(comp_overlap_shape,(r,triangle)),1,0).
fval(3,(comp_overlap_shape,(key1,r)),1,0).
fval(3,(comp_overlap_shape,(key1,key0)),1,0).
fval(3,(comp_overlap_shape,(r,key1)),1,0).
fval(3,(comp_overlap_shape,(square,triangle)),1,0).
fval(3,(comp_overlap_shape,(node1,r)),1,0).
fval(3,(comp_overlap_shape,(square,node2)),1,0).
fval(3,(comp_overlap_shape,(square,key1)),1,0).
fval(3,(comp_overlap_shape,(node1,square)),2,1).
fval(3,(comp_overlap_shape,(node2,triangle)),2,0).
fval(3,(comp_overlap_shape,(triangle,key0)),2,0).
fval(3,(comp_overlap_shape,(triangle,r)),2,0).
fval(3,(comp_overlap_shape,(key0,r)),2,0).
fval(3,(comp_overlap_shape,(node2,key1)),2,0).
fval(3,(comp_overlap_shape,(key1,square)),2,0).
fval(3,(comp_overlap_shape,(r,key0)),2,0).
fval(3,(comp_overlap_shape,(key1,node1)),2,0).
fval(3,(comp_overlap_shape,(triangle,square)),2,0).
fval(3,(comp_overlap_shape,(key0,square)),2,0).
fval(3,(comp_overlap_shape,(square,r)),2,0).
fval(3,(comp_overlap_shape,(square,key0)),2,0).
fval(3,(comp_overlap_shape,(node2,key0)),2,0).
fval(3,(comp_overlap_shape,(triangle,node1)),2,0).
fval(3,(comp_overlap_shape,(key1,triangle)),2,0).
fval(3,(comp_overlap_shape,(key1,node2)),2,0).
fval(3,(comp_overlap_shape,(node2,r)),2,0).
fval(3,(comp_overlap_shape,(key0,node1)),2,0).
fval(3,(comp_overlap_shape,(node1,triangle)),2,0).
fval(3,(comp_overlap_shape,(node1,node2)),2,0).
fval(3,(comp_overlap_shape,(r,square)),2,0).
fval(3,(comp_overlap_shape,(node1,key1)),2,0).
fval(3,(comp_overlap_shape,(key0,triangle)),2,0).
fval(3,(comp_overlap_shape,(key0,node2)),2,0).
fval(3,(comp_overlap_shape,(r,node1)),2,0).
fval(3,(comp_overlap_shape,(triangle,node2)),2,0).
fval(3,(comp_overlap_shape,(triangle,key1)),2,0).
fval(3,(comp_overlap_shape,(key0,key1)),2,0).
fval(3,(comp_overlap_shape,(node1,key0)),2,0).
fval(3,(comp_overlap_shape,(node2,square)),2,0).
fval(3,(comp_overlap_shape,(square,node1)),2,0).
fval(3,(comp_overlap_shape,(r,node2)),2,0).
fval(3,(comp_overlap_shape,(node2,node1)),2,0).
fval(3,(comp_overlap_shape,(r,triangle)),2,0).
fval(3,(comp_overlap_shape,(key1,r)),2,0).
fval(3,(comp_overlap_shape,(key1,key0)),2,0).
fval(3,(comp_overlap_shape,(r,key1)),2,0).
fval(3,(comp_overlap_shape,(square,triangle)),2,0).
fval(3,(comp_overlap_shape,(node1,r)),2,0).
fval(3,(comp_overlap_shape,(square,node2)),2,0).
fval(3,(comp_overlap_shape,(square,key1)),2,0).
fval(3,(comp_overlap_shape,(node1,square)),3,1).
fval(3,(comp_overlap_shape,(node2,triangle)),3,0).
fval(3,(comp_overlap_shape,(triangle,key0)),3,0).
fval(3,(comp_overlap_shape,(triangle,r)),3,0).
fval(3,(comp_overlap_shape,(key0,r)),3,0).
fval(3,(comp_overlap_shape,(node2,key1)),3,0).
fval(3,(comp_overlap_shape,(key1,square)),3,0).
fval(3,(comp_overlap_shape,(r,key0)),3,0).
fval(3,(comp_overlap_shape,(key1,node1)),3,0).
fval(3,(comp_overlap_shape,(triangle,square)),3,0).
fval(3,(comp_overlap_shape,(key0,square)),3,0).
fval(3,(comp_overlap_shape,(square,r)),3,0).
fval(3,(comp_overlap_shape,(square,key0)),3,0).
fval(3,(comp_overlap_shape,(node2,key0)),3,0).
fval(3,(comp_overlap_shape,(triangle,node1)),3,0).
fval(3,(comp_overlap_shape,(key1,triangle)),3,0).
fval(3,(comp_overlap_shape,(key1,node2)),3,0).
fval(3,(comp_overlap_shape,(node2,r)),3,0).
fval(3,(comp_overlap_shape,(key0,node1)),3,0).
fval(3,(comp_overlap_shape,(node1,triangle)),3,0).
fval(3,(comp_overlap_shape,(node1,node2)),3,0).
fval(3,(comp_overlap_shape,(r,square)),3,0).
fval(3,(comp_overlap_shape,(node1,key1)),3,0).
fval(3,(comp_overlap_shape,(key0,triangle)),3,0).
fval(3,(comp_overlap_shape,(key0,node2)),3,0).
fval(3,(comp_overlap_shape,(r,node1)),3,0).
fval(3,(comp_overlap_shape,(triangle,node2)),3,0).
fval(3,(comp_overlap_shape,(triangle,key1)),3,0).
fval(3,(comp_overlap_shape,(key0,key1)),3,0).
fval(3,(comp_overlap_shape,(node1,key0)),3,0).
fval(3,(comp_overlap_shape,(node2,square)),3,0).
fval(3,(comp_overlap_shape,(square,node1)),3,0).
fval(3,(comp_overlap_shape,(r,node2)),3,0).
fval(3,(comp_overlap_shape,(node2,node1)),3,0).
fval(3,(comp_overlap_shape,(r,triangle)),3,0).
fval(3,(comp_overlap_shape,(key1,r)),3,0).
fval(3,(comp_overlap_shape,(key1,key0)),3,0).
fval(3,(comp_overlap_shape,(r,key1)),3,0).
fval(3,(comp_overlap_shape,(square,triangle)),3,0).
fval(3,(comp_overlap_shape,(node1,r)),3,0).
fval(3,(comp_overlap_shape,(square,node2)),3,0).
fval(3,(comp_overlap_shape,(square,key1)),3,0).
fval(3,(comp_overlap_shape,(node1,square)),4,1).
fval(3,(comp_overlap_shape,(r,triangle)),4,1).
fval(3,(comp_overlap_shape,(node2,triangle)),4,0).
fval(3,(comp_overlap_shape,(triangle,key0)),4,0).
fval(3,(comp_overlap_shape,(triangle,r)),4,0).
fval(3,(comp_overlap_shape,(key0,r)),4,0).
fval(3,(comp_overlap_shape,(node2,key1)),4,0).
fval(3,(comp_overlap_shape,(key1,square)),4,0).
fval(3,(comp_overlap_shape,(r,key0)),4,0).
fval(3,(comp_overlap_shape,(key1,node1)),4,0).
fval(3,(comp_overlap_shape,(triangle,square)),4,0).
fval(3,(comp_overlap_shape,(key0,square)),4,0).
fval(3,(comp_overlap_shape,(square,r)),4,0).
fval(3,(comp_overlap_shape,(square,key0)),4,0).
fval(3,(comp_overlap_shape,(node2,key0)),4,0).
fval(3,(comp_overlap_shape,(triangle,node1)),4,0).
fval(3,(comp_overlap_shape,(key1,triangle)),4,0).
fval(3,(comp_overlap_shape,(key1,node2)),4,0).
fval(3,(comp_overlap_shape,(node2,r)),4,0).
fval(3,(comp_overlap_shape,(key0,node1)),4,0).
fval(3,(comp_overlap_shape,(node1,triangle)),4,0).
fval(3,(comp_overlap_shape,(node1,node2)),4,0).
fval(3,(comp_overlap_shape,(r,square)),4,0).
fval(3,(comp_overlap_shape,(node1,key1)),4,0).
fval(3,(comp_overlap_shape,(key0,triangle)),4,0).
fval(3,(comp_overlap_shape,(key0,node2)),4,0).
fval(3,(comp_overlap_shape,(r,node1)),4,0).
fval(3,(comp_overlap_shape,(triangle,node2)),4,0).
fval(3,(comp_overlap_shape,(triangle,key1)),4,0).
fval(3,(comp_overlap_shape,(key0,key1)),4,0).
fval(3,(comp_overlap_shape,(node1,key0)),4,0).
fval(3,(comp_overlap_shape,(node2,square)),4,0).
fval(3,(comp_overlap_shape,(square,node1)),4,0).
fval(3,(comp_overlap_shape,(r,node2)),4,0).
fval(3,(comp_overlap_shape,(node2,node1)),4,0).
fval(3,(comp_overlap_shape,(key1,r)),4,0).
fval(3,(comp_overlap_shape,(key1,key0)),4,0).
fval(3,(comp_overlap_shape,(r,key1)),4,0).
fval(3,(comp_overlap_shape,(square,triangle)),4,0).
fval(3,(comp_overlap_shape,(node1,r)),4,0).
fval(3,(comp_overlap_shape,(square,node2)),4,0).
fval(3,(comp_overlap_shape,(square,key1)),4,0).
fval(3,(comp_overlap_shape,(node1,triangle)),5,1).
fval(3,(comp_overlap_shape,(node1,square)),5,1).
fval(3,(comp_overlap_shape,(node2,triangle)),5,0).
fval(3,(comp_overlap_shape,(triangle,key0)),5,0).
fval(3,(comp_overlap_shape,(triangle,r)),5,0).
fval(3,(comp_overlap_shape,(key0,r)),5,0).
fval(3,(comp_overlap_shape,(node2,key1)),5,0).
fval(3,(comp_overlap_shape,(key1,square)),5,0).
fval(3,(comp_overlap_shape,(r,key0)),5,0).
fval(3,(comp_overlap_shape,(key1,node1)),5,0).
fval(3,(comp_overlap_shape,(triangle,square)),5,0).
fval(3,(comp_overlap_shape,(key0,square)),5,0).
fval(3,(comp_overlap_shape,(square,r)),5,0).
fval(3,(comp_overlap_shape,(square,key0)),5,0).
fval(3,(comp_overlap_shape,(node2,key0)),5,0).
fval(3,(comp_overlap_shape,(triangle,node1)),5,0).
fval(3,(comp_overlap_shape,(key1,triangle)),5,0).
fval(3,(comp_overlap_shape,(key1,node2)),5,0).
fval(3,(comp_overlap_shape,(node2,r)),5,0).
fval(3,(comp_overlap_shape,(key0,node1)),5,0).
fval(3,(comp_overlap_shape,(node1,node2)),5,0).
fval(3,(comp_overlap_shape,(r,square)),5,0).
fval(3,(comp_overlap_shape,(node1,key1)),5,0).
fval(3,(comp_overlap_shape,(key0,triangle)),5,0).
fval(3,(comp_overlap_shape,(key0,node2)),5,0).
fval(3,(comp_overlap_shape,(r,node1)),5,0).
fval(3,(comp_overlap_shape,(triangle,node2)),5,0).
fval(3,(comp_overlap_shape,(triangle,key1)),5,0).
fval(3,(comp_overlap_shape,(key0,key1)),5,0).
fval(3,(comp_overlap_shape,(node1,key0)),5,0).
fval(3,(comp_overlap_shape,(node2,square)),5,0).
fval(3,(comp_overlap_shape,(square,node1)),5,0).
fval(3,(comp_overlap_shape,(r,node2)),5,0).
fval(3,(comp_overlap_shape,(node2,node1)),5,0).
fval(3,(comp_overlap_shape,(r,triangle)),5,0).
fval(3,(comp_overlap_shape,(key1,r)),5,0).
fval(3,(comp_overlap_shape,(key1,key0)),5,0).
fval(3,(comp_overlap_shape,(r,key1)),5,0).
fval(3,(comp_overlap_shape,(square,triangle)),5,0).
fval(3,(comp_overlap_shape,(node1,r)),5,0).
fval(3,(comp_overlap_shape,(square,node2)),5,0).
fval(3,(comp_overlap_shape,(square,key1)),5,0).
fval(3,(comp_overlap_shape,(key1,triangle)),6,1).
fval(3,(comp_overlap_shape,(r,triangle)),6,1).
fval(3,(comp_overlap_shape,(node1,square)),6,1).
fval(3,(comp_overlap_shape,(node2,triangle)),6,1).
fval(3,(comp_overlap_shape,(triangle,r)),6,0).
fval(3,(comp_overlap_shape,(triangle,key0)),6,0).
fval(3,(comp_overlap_shape,(key0,r)),6,0).
fval(3,(comp_overlap_shape,(node2,key1)),6,0).
fval(3,(comp_overlap_shape,(key1,square)),6,0).
fval(3,(comp_overlap_shape,(r,key0)),6,0).
fval(3,(comp_overlap_shape,(key1,node1)),6,0).
fval(3,(comp_overlap_shape,(triangle,square)),6,0).
fval(3,(comp_overlap_shape,(key0,square)),6,0).
fval(3,(comp_overlap_shape,(square,r)),6,0).
fval(3,(comp_overlap_shape,(square,key0)),6,0).
fval(3,(comp_overlap_shape,(node2,key0)),6,0).
fval(3,(comp_overlap_shape,(triangle,node1)),6,0).
fval(3,(comp_overlap_shape,(key1,node2)),6,0).
fval(3,(comp_overlap_shape,(node2,r)),6,0).
fval(3,(comp_overlap_shape,(key0,node1)),6,0).
fval(3,(comp_overlap_shape,(node1,triangle)),6,0).
fval(3,(comp_overlap_shape,(node1,node2)),6,0).
fval(3,(comp_overlap_shape,(r,square)),6,0).
fval(3,(comp_overlap_shape,(node1,key1)),6,0).
fval(3,(comp_overlap_shape,(key0,triangle)),6,0).
fval(3,(comp_overlap_shape,(key0,node2)),6,0).
fval(3,(comp_overlap_shape,(r,node1)),6,0).
fval(3,(comp_overlap_shape,(triangle,node2)),6,0).
fval(3,(comp_overlap_shape,(triangle,key1)),6,0).
fval(3,(comp_overlap_shape,(key0,key1)),6,0).
fval(3,(comp_overlap_shape,(node1,key0)),6,0).
fval(3,(comp_overlap_shape,(node2,square)),6,0).
fval(3,(comp_overlap_shape,(square,node1)),6,0).
fval(3,(comp_overlap_shape,(r,node2)),6,0).
fval(3,(comp_overlap_shape,(node2,node1)),6,0).
fval(3,(comp_overlap_shape,(key1,r)),6,0).
fval(3,(comp_overlap_shape,(key1,key0)),6,0).
fval(3,(comp_overlap_shape,(r,key1)),6,0).
fval(3,(comp_overlap_shape,(square,triangle)),6,0).
fval(3,(comp_overlap_shape,(node1,r)),6,0).
fval(3,(comp_overlap_shape,(square,node2)),6,0).
fval(3,(comp_overlap_shape,(square,key1)),6,0).
fval(3,(comp_overlap_shape,(node1,triangle)),7,1).
fval(3,(comp_overlap_shape,(node1,square)),7,1).
fval(3,(comp_overlap_shape,(r,triangle)),7,1).
fval(3,(comp_overlap_shape,(node2,triangle)),7,0).
fval(3,(comp_overlap_shape,(triangle,key0)),7,0).
fval(3,(comp_overlap_shape,(triangle,r)),7,0).
fval(3,(comp_overlap_shape,(key0,r)),7,0).
fval(3,(comp_overlap_shape,(node2,key1)),7,0).
fval(3,(comp_overlap_shape,(key1,square)),7,0).
fval(3,(comp_overlap_shape,(r,key0)),7,0).
fval(3,(comp_overlap_shape,(key1,node1)),7,0).
fval(3,(comp_overlap_shape,(triangle,square)),7,0).
fval(3,(comp_overlap_shape,(key0,square)),7,0).
fval(3,(comp_overlap_shape,(square,r)),7,0).
fval(3,(comp_overlap_shape,(square,key0)),7,0).
fval(3,(comp_overlap_shape,(node2,key0)),7,0).
fval(3,(comp_overlap_shape,(triangle,node1)),7,0).
fval(3,(comp_overlap_shape,(key1,triangle)),7,0).
fval(3,(comp_overlap_shape,(key1,node2)),7,0).
fval(3,(comp_overlap_shape,(node2,r)),7,0).
fval(3,(comp_overlap_shape,(key0,node1)),7,0).
fval(3,(comp_overlap_shape,(node1,node2)),7,0).
fval(3,(comp_overlap_shape,(r,square)),7,0).
fval(3,(comp_overlap_shape,(node1,key1)),7,0).
fval(3,(comp_overlap_shape,(key0,triangle)),7,0).
fval(3,(comp_overlap_shape,(key0,node2)),7,0).
fval(3,(comp_overlap_shape,(r,node1)),7,0).
fval(3,(comp_overlap_shape,(triangle,node2)),7,0).
fval(3,(comp_overlap_shape,(triangle,key1)),7,0).
fval(3,(comp_overlap_shape,(key0,key1)),7,0).
fval(3,(comp_overlap_shape,(node1,key0)),7,0).
fval(3,(comp_overlap_shape,(node2,square)),7,0).
fval(3,(comp_overlap_shape,(square,node1)),7,0).
fval(3,(comp_overlap_shape,(r,node2)),7,0).
fval(3,(comp_overlap_shape,(node2,node1)),7,0).
fval(3,(comp_overlap_shape,(key1,r)),7,0).
fval(3,(comp_overlap_shape,(key1,key0)),7,0).
fval(3,(comp_overlap_shape,(r,key1)),7,0).
fval(3,(comp_overlap_shape,(square,triangle)),7,0).
fval(3,(comp_overlap_shape,(node1,r)),7,0).
fval(3,(comp_overlap_shape,(square,node2)),7,0).
fval(3,(comp_overlap_shape,(square,key1)),7,0).
fval(3,(comp_overlap_shape,(node1,triangle)),8,1).
fval(3,(comp_overlap_shape,(node2,triangle)),8,0).
fval(3,(comp_overlap_shape,(triangle,key0)),8,0).
fval(3,(comp_overlap_shape,(triangle,r)),8,0).
fval(3,(comp_overlap_shape,(key0,r)),8,0).
fval(3,(comp_overlap_shape,(node2,key1)),8,0).
fval(3,(comp_overlap_shape,(key1,square)),8,0).
fval(3,(comp_overlap_shape,(node1,square)),8,0).
fval(3,(comp_overlap_shape,(r,key0)),8,0).
fval(3,(comp_overlap_shape,(key1,node1)),8,0).
fval(3,(comp_overlap_shape,(triangle,square)),8,0).
fval(3,(comp_overlap_shape,(key0,square)),8,0).
fval(3,(comp_overlap_shape,(square,r)),8,0).
fval(3,(comp_overlap_shape,(square,key0)),8,0).
fval(3,(comp_overlap_shape,(node2,key0)),8,0).
fval(3,(comp_overlap_shape,(triangle,node1)),8,0).
fval(3,(comp_overlap_shape,(key1,triangle)),8,0).
fval(3,(comp_overlap_shape,(key1,node2)),8,0).
fval(3,(comp_overlap_shape,(node2,r)),8,0).
fval(3,(comp_overlap_shape,(key0,node1)),8,0).
fval(3,(comp_overlap_shape,(node1,node2)),8,0).
fval(3,(comp_overlap_shape,(r,square)),8,0).
fval(3,(comp_overlap_shape,(node1,key1)),8,0).
fval(3,(comp_overlap_shape,(key0,triangle)),8,0).
fval(3,(comp_overlap_shape,(key0,node2)),8,0).
fval(3,(comp_overlap_shape,(r,node1)),8,0).
fval(3,(comp_overlap_shape,(triangle,node2)),8,0).
fval(3,(comp_overlap_shape,(triangle,key1)),8,0).
fval(3,(comp_overlap_shape,(key0,key1)),8,0).
fval(3,(comp_overlap_shape,(node1,key0)),8,0).
fval(3,(comp_overlap_shape,(node2,square)),8,0).
fval(3,(comp_overlap_shape,(square,node1)),8,0).
fval(3,(comp_overlap_shape,(r,node2)),8,0).
fval(3,(comp_overlap_shape,(node2,node1)),8,0).
fval(3,(comp_overlap_shape,(r,triangle)),8,0).
fval(3,(comp_overlap_shape,(key1,r)),8,0).
fval(3,(comp_overlap_shape,(key1,key0)),8,0).
fval(3,(comp_overlap_shape,(r,key1)),8,0).
fval(3,(comp_overlap_shape,(square,triangle)),8,0).
fval(3,(comp_overlap_shape,(node1,r)),8,0).
fval(3,(comp_overlap_shape,(square,node2)),8,0).
fval(3,(comp_overlap_shape,(square,key1)),8,0).
fval(3,(comp_overlap_shape,(key1,triangle)),9,1).
fval(3,(comp_overlap_shape,(node1,square)),9,1).
fval(3,(comp_overlap_shape,(node2,triangle)),9,1).
fval(3,(comp_overlap_shape,(triangle,key0)),9,0).
fval(3,(comp_overlap_shape,(triangle,r)),9,0).
fval(3,(comp_overlap_shape,(key0,r)),9,0).
fval(3,(comp_overlap_shape,(node2,key1)),9,0).
fval(3,(comp_overlap_shape,(key1,square)),9,0).
fval(3,(comp_overlap_shape,(r,key0)),9,0).
fval(3,(comp_overlap_shape,(key1,node1)),9,0).
fval(3,(comp_overlap_shape,(triangle,square)),9,0).
fval(3,(comp_overlap_shape,(key0,square)),9,0).
fval(3,(comp_overlap_shape,(square,r)),9,0).
fval(3,(comp_overlap_shape,(square,key0)),9,0).
fval(3,(comp_overlap_shape,(node2,key0)),9,0).
fval(3,(comp_overlap_shape,(triangle,node1)),9,0).
fval(3,(comp_overlap_shape,(key1,node2)),9,0).
fval(3,(comp_overlap_shape,(node2,r)),9,0).
fval(3,(comp_overlap_shape,(key0,node1)),9,0).
fval(3,(comp_overlap_shape,(node1,triangle)),9,0).
fval(3,(comp_overlap_shape,(node1,node2)),9,0).
fval(3,(comp_overlap_shape,(r,square)),9,0).
fval(3,(comp_overlap_shape,(node1,key1)),9,0).
fval(3,(comp_overlap_shape,(key0,triangle)),9,0).
fval(3,(comp_overlap_shape,(key0,node2)),9,0).
fval(3,(comp_overlap_shape,(r,node1)),9,0).
fval(3,(comp_overlap_shape,(triangle,node2)),9,0).
fval(3,(comp_overlap_shape,(triangle,key1)),9,0).
fval(3,(comp_overlap_shape,(key0,key1)),9,0).
fval(3,(comp_overlap_shape,(node1,key0)),9,0).
fval(3,(comp_overlap_shape,(node2,square)),9,0).
fval(3,(comp_overlap_shape,(square,node1)),9,0).
fval(3,(comp_overlap_shape,(r,node2)),9,0).
fval(3,(comp_overlap_shape,(node2,node1)),9,0).
fval(3,(comp_overlap_shape,(r,triangle)),9,0).
fval(3,(comp_overlap_shape,(key1,r)),9,0).
fval(3,(comp_overlap_shape,(key1,key0)),9,0).
fval(3,(comp_overlap_shape,(r,key1)),9,0).
fval(3,(comp_overlap_shape,(square,triangle)),9,0).
fval(3,(comp_overlap_shape,(node1,r)),9,0).
fval(3,(comp_overlap_shape,(square,node2)),9,0).
fval(3,(comp_overlap_shape,(square,key1)),9,0).
fval(3,(comp_overlap_shape,(node1,triangle)),10,1).
fval(3,(comp_overlap_shape,(r,triangle)),10,1).
fval(3,(comp_overlap_shape,(node2,triangle)),10,0).
fval(3,(comp_overlap_shape,(triangle,key0)),10,0).
fval(3,(comp_overlap_shape,(triangle,r)),10,0).
fval(3,(comp_overlap_shape,(key0,r)),10,0).
fval(3,(comp_overlap_shape,(node2,key1)),10,0).
fval(3,(comp_overlap_shape,(key1,square)),10,0).
fval(3,(comp_overlap_shape,(node1,square)),10,0).
fval(3,(comp_overlap_shape,(r,key0)),10,0).
fval(3,(comp_overlap_shape,(key1,node1)),10,0).
fval(3,(comp_overlap_shape,(triangle,square)),10,0).
fval(3,(comp_overlap_shape,(key0,square)),10,0).
fval(3,(comp_overlap_shape,(square,r)),10,0).
fval(3,(comp_overlap_shape,(square,key0)),10,0).
fval(3,(comp_overlap_shape,(node2,key0)),10,0).
fval(3,(comp_overlap_shape,(triangle,node1)),10,0).
fval(3,(comp_overlap_shape,(key1,triangle)),10,0).
fval(3,(comp_overlap_shape,(key1,node2)),10,0).
fval(3,(comp_overlap_shape,(node2,r)),10,0).
fval(3,(comp_overlap_shape,(key0,node1)),10,0).
fval(3,(comp_overlap_shape,(node1,node2)),10,0).
fval(3,(comp_overlap_shape,(r,square)),10,0).
fval(3,(comp_overlap_shape,(node1,key1)),10,0).
fval(3,(comp_overlap_shape,(key0,triangle)),10,0).
fval(3,(comp_overlap_shape,(key0,node2)),10,0).
fval(3,(comp_overlap_shape,(r,node1)),10,0).
fval(3,(comp_overlap_shape,(triangle,node2)),10,0).
fval(3,(comp_overlap_shape,(triangle,key1)),10,0).
fval(3,(comp_overlap_shape,(key0,key1)),10,0).
fval(3,(comp_overlap_shape,(node1,key0)),10,0).
fval(3,(comp_overlap_shape,(node2,square)),10,0).
fval(3,(comp_overlap_shape,(square,node1)),10,0).
fval(3,(comp_overlap_shape,(r,node2)),10,0).
fval(3,(comp_overlap_shape,(node2,node1)),10,0).
fval(3,(comp_overlap_shape,(key1,r)),10,0).
fval(3,(comp_overlap_shape,(key1,key0)),10,0).
fval(3,(comp_overlap_shape,(r,key1)),10,0).
fval(3,(comp_overlap_shape,(square,triangle)),10,0).
fval(3,(comp_overlap_shape,(node1,r)),10,0).
fval(3,(comp_overlap_shape,(square,node2)),10,0).
fval(3,(comp_overlap_shape,(square,key1)),10,0).
fval(3,(comp_overlap_shape,(key1,triangle)),11,1).
fval(3,(comp_overlap_shape,(node2,triangle)),11,1).
fval(3,(comp_overlap_shape,(triangle,key0)),11,0).
fval(3,(comp_overlap_shape,(triangle,r)),11,0).
fval(3,(comp_overlap_shape,(key0,r)),11,0).
fval(3,(comp_overlap_shape,(node2,key1)),11,0).
fval(3,(comp_overlap_shape,(key1,square)),11,0).
fval(3,(comp_overlap_shape,(node1,square)),11,0).
fval(3,(comp_overlap_shape,(r,key0)),11,0).
fval(3,(comp_overlap_shape,(key1,node1)),11,0).
fval(3,(comp_overlap_shape,(triangle,square)),11,0).
fval(3,(comp_overlap_shape,(key0,square)),11,0).
fval(3,(comp_overlap_shape,(square,r)),11,0).
fval(3,(comp_overlap_shape,(square,key0)),11,0).
fval(3,(comp_overlap_shape,(node2,key0)),11,0).
fval(3,(comp_overlap_shape,(triangle,node1)),11,0).
fval(3,(comp_overlap_shape,(key1,node2)),11,0).
fval(3,(comp_overlap_shape,(node2,r)),11,0).
fval(3,(comp_overlap_shape,(key0,node1)),11,0).
fval(3,(comp_overlap_shape,(node1,triangle)),11,0).
fval(3,(comp_overlap_shape,(node1,node2)),11,0).
fval(3,(comp_overlap_shape,(r,square)),11,0).
fval(3,(comp_overlap_shape,(node1,key1)),11,0).
fval(3,(comp_overlap_shape,(key0,triangle)),11,0).
fval(3,(comp_overlap_shape,(key0,node2)),11,0).
fval(3,(comp_overlap_shape,(r,node1)),11,0).
fval(3,(comp_overlap_shape,(triangle,node2)),11,0).
fval(3,(comp_overlap_shape,(triangle,key1)),11,0).
fval(3,(comp_overlap_shape,(key0,key1)),11,0).
fval(3,(comp_overlap_shape,(node1,key0)),11,0).
fval(3,(comp_overlap_shape,(node2,square)),11,0).
fval(3,(comp_overlap_shape,(square,node1)),11,0).
fval(3,(comp_overlap_shape,(r,node2)),11,0).
fval(3,(comp_overlap_shape,(node2,node1)),11,0).
fval(3,(comp_overlap_shape,(r,triangle)),11,0).
fval(3,(comp_overlap_shape,(key1,r)),11,0).
fval(3,(comp_overlap_shape,(key1,key0)),11,0).
fval(3,(comp_overlap_shape,(r,key1)),11,0).
fval(3,(comp_overlap_shape,(square,triangle)),11,0).
fval(3,(comp_overlap_shape,(node1,r)),11,0).
fval(3,(comp_overlap_shape,(square,node2)),11,0).
fval(3,(comp_overlap_shape,(square,key1)),11,0).
fval(3,(comp_overlap_shape,(key0,triangle)),12,1).
fval(3,(comp_overlap_shape,(node1,triangle)),12,1).
fval(3,(comp_overlap_shape,(r,triangle)),12,1).
fval(3,(comp_overlap_shape,(node2,square)),12,1).
fval(3,(comp_overlap_shape,(node2,triangle)),12,0).
fval(3,(comp_overlap_shape,(triangle,key0)),12,0).
fval(3,(comp_overlap_shape,(triangle,r)),12,0).
fval(3,(comp_overlap_shape,(key0,r)),12,0).
fval(3,(comp_overlap_shape,(node2,key1)),12,0).
fval(3,(comp_overlap_shape,(key1,square)),12,0).
fval(3,(comp_overlap_shape,(node1,square)),12,0).
fval(3,(comp_overlap_shape,(r,key0)),12,0).
fval(3,(comp_overlap_shape,(key1,node1)),12,0).
fval(3,(comp_overlap_shape,(triangle,square)),12,0).
fval(3,(comp_overlap_shape,(key0,square)),12,0).
fval(3,(comp_overlap_shape,(square,r)),12,0).
fval(3,(comp_overlap_shape,(square,key0)),12,0).
fval(3,(comp_overlap_shape,(node2,key0)),12,0).
fval(3,(comp_overlap_shape,(triangle,node1)),12,0).
fval(3,(comp_overlap_shape,(key1,triangle)),12,0).
fval(3,(comp_overlap_shape,(key1,node2)),12,0).
fval(3,(comp_overlap_shape,(node2,r)),12,0).
fval(3,(comp_overlap_shape,(key0,node1)),12,0).
fval(3,(comp_overlap_shape,(node1,node2)),12,0).
fval(3,(comp_overlap_shape,(r,square)),12,0).
fval(3,(comp_overlap_shape,(node1,key1)),12,0).
fval(3,(comp_overlap_shape,(key0,node2)),12,0).
fval(3,(comp_overlap_shape,(r,node1)),12,0).
fval(3,(comp_overlap_shape,(triangle,node2)),12,0).
fval(3,(comp_overlap_shape,(triangle,key1)),12,0).
fval(3,(comp_overlap_shape,(key0,key1)),12,0).
fval(3,(comp_overlap_shape,(node1,key0)),12,0).
fval(3,(comp_overlap_shape,(square,node1)),12,0).
fval(3,(comp_overlap_shape,(r,node2)),12,0).
fval(3,(comp_overlap_shape,(node2,node1)),12,0).
fval(3,(comp_overlap_shape,(key1,r)),12,0).
fval(3,(comp_overlap_shape,(key1,key0)),12,0).
fval(3,(comp_overlap_shape,(r,key1)),12,0).
fval(3,(comp_overlap_shape,(square,triangle)),12,0).
fval(3,(comp_overlap_shape,(node1,r)),12,0).
fval(3,(comp_overlap_shape,(square,node2)),12,0).
fval(3,(comp_overlap_shape,(square,key1)),12,0).
fval(3,(comp_overlap_shape,(key1,triangle)),13,1).
fval(3,(comp_overlap_shape,(r,triangle)),13,1).
fval(3,(comp_overlap_shape,(node2,triangle)),13,1).
fval(3,(comp_overlap_shape,(triangle,r)),13,0).
fval(3,(comp_overlap_shape,(triangle,key0)),13,0).
fval(3,(comp_overlap_shape,(key0,r)),13,0).
fval(3,(comp_overlap_shape,(node2,key1)),13,0).
fval(3,(comp_overlap_shape,(key1,square)),13,0).
fval(3,(comp_overlap_shape,(node1,square)),13,0).
fval(3,(comp_overlap_shape,(r,key0)),13,0).
fval(3,(comp_overlap_shape,(key1,node1)),13,0).
fval(3,(comp_overlap_shape,(triangle,square)),13,0).
fval(3,(comp_overlap_shape,(key0,square)),13,0).
fval(3,(comp_overlap_shape,(square,r)),13,0).
fval(3,(comp_overlap_shape,(square,key0)),13,0).
fval(3,(comp_overlap_shape,(node2,key0)),13,0).
fval(3,(comp_overlap_shape,(triangle,node1)),13,0).
fval(3,(comp_overlap_shape,(key1,node2)),13,0).
fval(3,(comp_overlap_shape,(node2,r)),13,0).
fval(3,(comp_overlap_shape,(key0,node1)),13,0).
fval(3,(comp_overlap_shape,(node1,triangle)),13,0).
fval(3,(comp_overlap_shape,(node1,node2)),13,0).
fval(3,(comp_overlap_shape,(r,square)),13,0).
fval(3,(comp_overlap_shape,(node1,key1)),13,0).
fval(3,(comp_overlap_shape,(key0,triangle)),13,0).
fval(3,(comp_overlap_shape,(key0,node2)),13,0).
fval(3,(comp_overlap_shape,(r,node1)),13,0).
fval(3,(comp_overlap_shape,(triangle,node2)),13,0).
fval(3,(comp_overlap_shape,(triangle,key1)),13,0).
fval(3,(comp_overlap_shape,(key0,key1)),13,0).
fval(3,(comp_overlap_shape,(node1,key0)),13,0).
fval(3,(comp_overlap_shape,(node2,square)),13,0).
fval(3,(comp_overlap_shape,(square,node1)),13,0).
fval(3,(comp_overlap_shape,(r,node2)),13,0).
fval(3,(comp_overlap_shape,(node2,node1)),13,0).
fval(3,(comp_overlap_shape,(key1,r)),13,0).
fval(3,(comp_overlap_shape,(key1,key0)),13,0).
fval(3,(comp_overlap_shape,(r,key1)),13,0).
fval(3,(comp_overlap_shape,(square,triangle)),13,0).
fval(3,(comp_overlap_shape,(node1,r)),13,0).
fval(3,(comp_overlap_shape,(square,node2)),13,0).
fval(3,(comp_overlap_shape,(square,key1)),13,0).
fval(3,(comp_overlap_shape,(key0,triangle)),14,1).
fval(3,(comp_overlap_shape,(node1,triangle)),14,1).
fval(3,(comp_overlap_shape,(node2,square)),14,1).
fval(3,(comp_overlap_shape,(node2,triangle)),14,0).
fval(3,(comp_overlap_shape,(triangle,key0)),14,0).
fval(3,(comp_overlap_shape,(triangle,r)),14,0).
fval(3,(comp_overlap_shape,(key0,r)),14,0).
fval(3,(comp_overlap_shape,(node2,key1)),14,0).
fval(3,(comp_overlap_shape,(key1,square)),14,0).
fval(3,(comp_overlap_shape,(node1,square)),14,0).
fval(3,(comp_overlap_shape,(r,key0)),14,0).
fval(3,(comp_overlap_shape,(key1,node1)),14,0).
fval(3,(comp_overlap_shape,(triangle,square)),14,0).
fval(3,(comp_overlap_shape,(key0,square)),14,0).
fval(3,(comp_overlap_shape,(square,r)),14,0).
fval(3,(comp_overlap_shape,(square,key0)),14,0).
fval(3,(comp_overlap_shape,(node2,key0)),14,0).
fval(3,(comp_overlap_shape,(triangle,node1)),14,0).
fval(3,(comp_overlap_shape,(key1,triangle)),14,0).
fval(3,(comp_overlap_shape,(key1,node2)),14,0).
fval(3,(comp_overlap_shape,(node2,r)),14,0).
fval(3,(comp_overlap_shape,(key0,node1)),14,0).
fval(3,(comp_overlap_shape,(node1,node2)),14,0).
fval(3,(comp_overlap_shape,(r,square)),14,0).
fval(3,(comp_overlap_shape,(node1,key1)),14,0).
fval(3,(comp_overlap_shape,(key0,node2)),14,0).
fval(3,(comp_overlap_shape,(r,node1)),14,0).
fval(3,(comp_overlap_shape,(triangle,node2)),14,0).
fval(3,(comp_overlap_shape,(triangle,key1)),14,0).
fval(3,(comp_overlap_shape,(key0,key1)),14,0).
fval(3,(comp_overlap_shape,(node1,key0)),14,0).
fval(3,(comp_overlap_shape,(square,node1)),14,0).
fval(3,(comp_overlap_shape,(r,node2)),14,0).
fval(3,(comp_overlap_shape,(node2,node1)),14,0).
fval(3,(comp_overlap_shape,(r,triangle)),14,0).
fval(3,(comp_overlap_shape,(key1,r)),14,0).
fval(3,(comp_overlap_shape,(key1,key0)),14,0).
fval(3,(comp_overlap_shape,(r,key1)),14,0).
fval(3,(comp_overlap_shape,(square,triangle)),14,0).
fval(3,(comp_overlap_shape,(node1,r)),14,0).
fval(3,(comp_overlap_shape,(square,node2)),14,0).
fval(3,(comp_overlap_shape,(square,key1)),14,0).
fval(3,(comp_overlap_shape,(key0,triangle)),15,1).
fval(3,(comp_overlap_shape,(node2,triangle)),15,1).
fval(3,(comp_overlap_shape,(key1,triangle)),15,1).
fval(3,(comp_overlap_shape,(r,triangle)),15,1).
fval(3,(comp_overlap_shape,(node2,square)),15,1).
fval(3,(comp_overlap_shape,(triangle,r)),15,0).
fval(3,(comp_overlap_shape,(triangle,key0)),15,0).
fval(3,(comp_overlap_shape,(key0,r)),15,0).
fval(3,(comp_overlap_shape,(node2,key1)),15,0).
fval(3,(comp_overlap_shape,(key1,square)),15,0).
fval(3,(comp_overlap_shape,(node1,square)),15,0).
fval(3,(comp_overlap_shape,(r,key0)),15,0).
fval(3,(comp_overlap_shape,(key1,node1)),15,0).
fval(3,(comp_overlap_shape,(triangle,square)),15,0).
fval(3,(comp_overlap_shape,(key0,square)),15,0).
fval(3,(comp_overlap_shape,(square,r)),15,0).
fval(3,(comp_overlap_shape,(square,key0)),15,0).
fval(3,(comp_overlap_shape,(node2,key0)),15,0).
fval(3,(comp_overlap_shape,(triangle,node1)),15,0).
fval(3,(comp_overlap_shape,(key1,node2)),15,0).
fval(3,(comp_overlap_shape,(node2,r)),15,0).
fval(3,(comp_overlap_shape,(key0,node1)),15,0).
fval(3,(comp_overlap_shape,(node1,triangle)),15,0).
fval(3,(comp_overlap_shape,(node1,node2)),15,0).
fval(3,(comp_overlap_shape,(r,square)),15,0).
fval(3,(comp_overlap_shape,(node1,key1)),15,0).
fval(3,(comp_overlap_shape,(key0,node2)),15,0).
fval(3,(comp_overlap_shape,(r,node1)),15,0).
fval(3,(comp_overlap_shape,(triangle,node2)),15,0).
fval(3,(comp_overlap_shape,(triangle,key1)),15,0).
fval(3,(comp_overlap_shape,(key0,key1)),15,0).
fval(3,(comp_overlap_shape,(node1,key0)),15,0).
fval(3,(comp_overlap_shape,(square,node1)),15,0).
fval(3,(comp_overlap_shape,(r,node2)),15,0).
fval(3,(comp_overlap_shape,(node2,node1)),15,0).
fval(3,(comp_overlap_shape,(key1,r)),15,0).
fval(3,(comp_overlap_shape,(key1,key0)),15,0).
fval(3,(comp_overlap_shape,(r,key1)),15,0).
fval(3,(comp_overlap_shape,(square,triangle)),15,0).
fval(3,(comp_overlap_shape,(node1,r)),15,0).
fval(3,(comp_overlap_shape,(square,node2)),15,0).
fval(3,(comp_overlap_shape,(square,key1)),15,0).
fval(3,(comp_overlap_shape,(key0,triangle)),16,1).
fval(3,(comp_overlap_shape,(node2,square)),16,1).
fval(3,(comp_overlap_shape,(node2,triangle)),16,0).
fval(3,(comp_overlap_shape,(triangle,key0)),16,0).
fval(3,(comp_overlap_shape,(triangle,r)),16,0).
fval(3,(comp_overlap_shape,(key0,r)),16,0).
fval(3,(comp_overlap_shape,(node2,key1)),16,0).
fval(3,(comp_overlap_shape,(key1,square)),16,0).
fval(3,(comp_overlap_shape,(node1,square)),16,0).
fval(3,(comp_overlap_shape,(r,key0)),16,0).
fval(3,(comp_overlap_shape,(key1,node1)),16,0).
fval(3,(comp_overlap_shape,(triangle,square)),16,0).
fval(3,(comp_overlap_shape,(key0,square)),16,0).
fval(3,(comp_overlap_shape,(square,r)),16,0).
fval(3,(comp_overlap_shape,(square,key0)),16,0).
fval(3,(comp_overlap_shape,(node2,key0)),16,0).
fval(3,(comp_overlap_shape,(triangle,node1)),16,0).
fval(3,(comp_overlap_shape,(key1,triangle)),16,0).
fval(3,(comp_overlap_shape,(key1,node2)),16,0).
fval(3,(comp_overlap_shape,(node2,r)),16,0).
fval(3,(comp_overlap_shape,(key0,node1)),16,0).
fval(3,(comp_overlap_shape,(node1,triangle)),16,0).
fval(3,(comp_overlap_shape,(node1,node2)),16,0).
fval(3,(comp_overlap_shape,(r,square)),16,0).
fval(3,(comp_overlap_shape,(node1,key1)),16,0).
fval(3,(comp_overlap_shape,(key0,node2)),16,0).
fval(3,(comp_overlap_shape,(r,node1)),16,0).
fval(3,(comp_overlap_shape,(triangle,node2)),16,0).
fval(3,(comp_overlap_shape,(triangle,key1)),16,0).
fval(3,(comp_overlap_shape,(key0,key1)),16,0).
fval(3,(comp_overlap_shape,(node1,key0)),16,0).
fval(3,(comp_overlap_shape,(square,node1)),16,0).
fval(3,(comp_overlap_shape,(r,node2)),16,0).
fval(3,(comp_overlap_shape,(node2,node1)),16,0).
fval(3,(comp_overlap_shape,(r,triangle)),16,0).
fval(3,(comp_overlap_shape,(key1,r)),16,0).
fval(3,(comp_overlap_shape,(key1,key0)),16,0).
fval(3,(comp_overlap_shape,(r,key1)),16,0).
fval(3,(comp_overlap_shape,(square,triangle)),16,0).
fval(3,(comp_overlap_shape,(node1,r)),16,0).
fval(3,(comp_overlap_shape,(square,node2)),16,0).
fval(3,(comp_overlap_shape,(square,key1)),16,0).
fval(3,(comp_overlap_shape,(key0,triangle)),17,1).
fval(3,(comp_overlap_shape,(key1,triangle)),17,1).
fval(3,(comp_overlap_shape,(node2,triangle)),17,1).
fval(3,(comp_overlap_shape,(node2,square)),17,1).
fval(3,(comp_overlap_shape,(triangle,key0)),17,0).
fval(3,(comp_overlap_shape,(triangle,r)),17,0).
fval(3,(comp_overlap_shape,(key0,r)),17,0).
fval(3,(comp_overlap_shape,(node2,key1)),17,0).
fval(3,(comp_overlap_shape,(key1,square)),17,0).
fval(3,(comp_overlap_shape,(node1,square)),17,0).
fval(3,(comp_overlap_shape,(r,key0)),17,0).
fval(3,(comp_overlap_shape,(key1,node1)),17,0).
fval(3,(comp_overlap_shape,(triangle,square)),17,0).
fval(3,(comp_overlap_shape,(key0,square)),17,0).
fval(3,(comp_overlap_shape,(square,r)),17,0).
fval(3,(comp_overlap_shape,(square,key0)),17,0).
fval(3,(comp_overlap_shape,(node2,key0)),17,0).
fval(3,(comp_overlap_shape,(triangle,node1)),17,0).
fval(3,(comp_overlap_shape,(key1,node2)),17,0).
fval(3,(comp_overlap_shape,(node2,r)),17,0).
fval(3,(comp_overlap_shape,(key0,node1)),17,0).
fval(3,(comp_overlap_shape,(node1,triangle)),17,0).
fval(3,(comp_overlap_shape,(node1,node2)),17,0).
fval(3,(comp_overlap_shape,(r,square)),17,0).
fval(3,(comp_overlap_shape,(node1,key1)),17,0).
fval(3,(comp_overlap_shape,(key0,node2)),17,0).
fval(3,(comp_overlap_shape,(r,node1)),17,0).
fval(3,(comp_overlap_shape,(triangle,node2)),17,0).
fval(3,(comp_overlap_shape,(triangle,key1)),17,0).
fval(3,(comp_overlap_shape,(key0,key1)),17,0).
fval(3,(comp_overlap_shape,(node1,key0)),17,0).
fval(3,(comp_overlap_shape,(square,node1)),17,0).
fval(3,(comp_overlap_shape,(r,node2)),17,0).
fval(3,(comp_overlap_shape,(node2,node1)),17,0).
fval(3,(comp_overlap_shape,(r,triangle)),17,0).
fval(3,(comp_overlap_shape,(key1,r)),17,0).
fval(3,(comp_overlap_shape,(key1,key0)),17,0).
fval(3,(comp_overlap_shape,(r,key1)),17,0).
fval(3,(comp_overlap_shape,(square,triangle)),17,0).
fval(3,(comp_overlap_shape,(node1,r)),17,0).
fval(3,(comp_overlap_shape,(square,node2)),17,0).
fval(3,(comp_overlap_shape,(square,key1)),17,0).
fval(3,(comp_overlap_shape,(key0,triangle)),18,1).
fval(3,(comp_overlap_shape,(r,triangle)),18,1).
fval(3,(comp_overlap_shape,(node2,square)),18,1).
fval(3,(comp_overlap_shape,(node2,triangle)),18,0).
fval(3,(comp_overlap_shape,(triangle,key0)),18,0).
fval(3,(comp_overlap_shape,(triangle,r)),18,0).
fval(3,(comp_overlap_shape,(key0,r)),18,0).
fval(3,(comp_overlap_shape,(node2,key1)),18,0).
fval(3,(comp_overlap_shape,(key1,square)),18,0).
fval(3,(comp_overlap_shape,(node1,square)),18,0).
fval(3,(comp_overlap_shape,(r,key0)),18,0).
fval(3,(comp_overlap_shape,(key1,node1)),18,0).
fval(3,(comp_overlap_shape,(triangle,square)),18,0).
fval(3,(comp_overlap_shape,(key0,square)),18,0).
fval(3,(comp_overlap_shape,(square,r)),18,0).
fval(3,(comp_overlap_shape,(square,key0)),18,0).
fval(3,(comp_overlap_shape,(node2,key0)),18,0).
fval(3,(comp_overlap_shape,(triangle,node1)),18,0).
fval(3,(comp_overlap_shape,(key1,triangle)),18,0).
fval(3,(comp_overlap_shape,(key1,node2)),18,0).
fval(3,(comp_overlap_shape,(node2,r)),18,0).
fval(3,(comp_overlap_shape,(key0,node1)),18,0).
fval(3,(comp_overlap_shape,(node1,triangle)),18,0).
fval(3,(comp_overlap_shape,(node1,node2)),18,0).
fval(3,(comp_overlap_shape,(r,square)),18,0).
fval(3,(comp_overlap_shape,(node1,key1)),18,0).
fval(3,(comp_overlap_shape,(key0,node2)),18,0).
fval(3,(comp_overlap_shape,(r,node1)),18,0).
fval(3,(comp_overlap_shape,(triangle,node2)),18,0).
fval(3,(comp_overlap_shape,(triangle,key1)),18,0).
fval(3,(comp_overlap_shape,(key0,key1)),18,0).
fval(3,(comp_overlap_shape,(node1,key0)),18,0).
fval(3,(comp_overlap_shape,(square,node1)),18,0).
fval(3,(comp_overlap_shape,(r,node2)),18,0).
fval(3,(comp_overlap_shape,(node2,node1)),18,0).
fval(3,(comp_overlap_shape,(key1,r)),18,0).
fval(3,(comp_overlap_shape,(key1,key0)),18,0).
fval(3,(comp_overlap_shape,(r,key1)),18,0).
fval(3,(comp_overlap_shape,(square,triangle)),18,0).
fval(3,(comp_overlap_shape,(node1,r)),18,0).
fval(3,(comp_overlap_shape,(square,node2)),18,0).
fval(3,(comp_overlap_shape,(square,key1)),18,0).
fval(3,(comp_below_inv_smaller,(node2,triangle)),0).
fval(3,(comp_below_inv_smaller,(key0,r)),0).
fval(3,(comp_below_inv_smaller,(node2,key1)),0).
fval(3,(comp_below_inv_smaller,(triangle,key0)),0).
fval(3,(comp_below_inv_smaller,(triangle,r)),0).
fval(3,(comp_below_inv_smaller,(key1,square)),0).
fval(3,(comp_below_inv_smaller,(node1,square)),0).
fval(3,(comp_below_inv_smaller,(r,key0)),0).
fval(3,(comp_below_inv_smaller,(key1,node1)),0).
fval(3,(comp_below_inv_smaller,(triangle,square)),0).
fval(3,(comp_below_inv_smaller,(key0,square)),0).
fval(3,(comp_below_inv_smaller,(square,r)),0).
fval(3,(comp_below_inv_smaller,(square,key0)),0).
fval(3,(comp_below_inv_smaller,(key1,triangle)),0).
fval(3,(comp_below_inv_smaller,(triangle,node1)),0).
fval(3,(comp_below_inv_smaller,(node2,key0)),0).
fval(3,(comp_below_inv_smaller,(key1,node2)),0).
fval(3,(comp_below_inv_smaller,(node2,r)),0).
fval(3,(comp_below_inv_smaller,(key0,node1)),0).
fval(3,(comp_below_inv_smaller,(node1,triangle)),0).
fval(3,(comp_below_inv_smaller,(r,square)),0).
fval(3,(comp_below_inv_smaller,(node1,key1)),0).
fval(3,(comp_below_inv_smaller,(node1,node2)),0).
fval(3,(comp_below_inv_smaller,(key0,triangle)),0).
fval(3,(comp_below_inv_smaller,(key0,node2)),0).
fval(3,(comp_below_inv_smaller,(triangle,node2)),0).
fval(3,(comp_below_inv_smaller,(triangle,key1)),0).
fval(3,(comp_below_inv_smaller,(r,node1)),0).
fval(3,(comp_below_inv_smaller,(key0,key1)),0).
fval(3,(comp_below_inv_smaller,(node2,square)),0).
fval(3,(comp_below_inv_smaller,(square,node1)),0).
fval(3,(comp_below_inv_smaller,(r,node2)),0).
fval(3,(comp_below_inv_smaller,(key1,r)),0).
fval(3,(comp_below_inv_smaller,(key1,key0)),0).
fval(3,(comp_below_inv_smaller,(r,triangle)),0).
fval(3,(comp_below_inv_smaller,(node2,node1)),0).
fval(3,(comp_below_inv_smaller,(r,key1)),0).
fval(3,(comp_below_inv_smaller,(square,triangle)),0).
fval(3,(comp_below_inv_smaller,(node1,key0)),0).
fval(3,(comp_below_inv_smaller,(square,node2)),0).
fval(3,(comp_below_inv_smaller,(square,key1)),0).
fval(3,(comp_below_inv_smaller,(node1,r)),0).
fval(3,(inter_er_overlap_verum_er_below_lockedcell,(node1,)),0).
fval(3,(inter_er_overlap_verum_er_below_lockedcell,(triangle,)),0).
fval(3,(inter_er_overlap_verum_er_below_lockedcell,(node2,)),0).
fval(3,(inter_er_overlap_verum_er_below_lockedcell,(key1,)),0).
fval(3,(inter_er_overlap_verum_er_below_lockedcell,(key0,)),0).
fval(3,(inter_er_overlap_verum_er_below_lockedcell,(r,)),0).
fval(3,(inter_er_overlap_verum_er_below_lockedcell,(square,)),0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key1,)),0,1).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key0,)),0,1).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(r,)),0,1).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node1,)),0,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(triangle,)),0,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(square,)),0,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node2,)),0,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key1,)),1,1).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(r,)),1,1).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node1,)),1,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(triangle,)),1,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node2,)),1,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key0,)),1,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(square,)),1,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key0,)),2,1).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(r,)),2,1).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node1,)),2,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(triangle,)),2,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node2,)),2,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key1,)),2,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(square,)),2,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node1,)),3,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(triangle,)),3,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node2,)),3,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key1,)),3,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(r,)),3,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key0,)),3,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(square,)),3,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node1,)),4,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(triangle,)),4,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node2,)),4,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key1,)),4,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(r,)),4,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key0,)),4,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(square,)),4,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node1,)),5,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(triangle,)),5,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node2,)),5,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key1,)),5,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(r,)),5,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key0,)),5,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(square,)),5,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node1,)),6,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(triangle,)),6,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node2,)),6,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key1,)),6,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(r,)),6,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key0,)),6,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(square,)),6,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node1,)),7,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(triangle,)),7,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node2,)),7,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key1,)),7,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(r,)),7,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key0,)),7,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(square,)),7,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node1,)),8,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(triangle,)),8,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node2,)),8,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key1,)),8,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(r,)),8,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key0,)),8,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(square,)),8,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node1,)),9,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(triangle,)),9,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node2,)),9,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key1,)),9,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(r,)),9,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key0,)),9,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(square,)),9,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node1,)),10,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(triangle,)),10,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node2,)),10,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key1,)),10,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(r,)),10,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key0,)),10,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(square,)),10,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node1,)),11,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(triangle,)),11,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node2,)),11,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key1,)),11,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(r,)),11,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key0,)),11,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(square,)),11,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node1,)),12,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(triangle,)),12,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node2,)),12,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key1,)),12,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(r,)),12,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key0,)),12,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(square,)),12,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node1,)),13,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(triangle,)),13,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node2,)),13,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key1,)),13,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(r,)),13,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key0,)),13,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(square,)),13,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node1,)),14,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(triangle,)),14,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node2,)),14,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key1,)),14,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(r,)),14,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key0,)),14,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(square,)),14,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node1,)),15,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(triangle,)),15,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node2,)),15,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key1,)),15,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(r,)),15,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key0,)),15,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(square,)),15,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node1,)),16,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(triangle,)),16,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node2,)),16,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key1,)),16,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(r,)),16,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key0,)),16,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(square,)),16,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node1,)),17,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(triangle,)),17,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node2,)),17,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key1,)),17,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(r,)),17,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key0,)),17,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(square,)),17,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node1,)),18,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(triangle,)),18,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(node2,)),18,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key1,)),18,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(r,)),18,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(key0,)),18,0).
fval(3,(inter_er_overlap_verum_er_smaller_lockedcell,(square,)),18,0).
fval(3,(overlap,(key1,node1)),0,1).
fval(3,(overlap,(r,node1)),0,1).
fval(3,(overlap,(node1,key1)),0,1).
fval(3,(overlap,(node1,r)),0,1).
fval(3,(overlap,(key0,node1)),0,1).
fval(3,(overlap,(node1,key0)),0,1).
fval(3,(overlap,(node2,triangle)),0,0).
fval(3,(overlap,(key0,r)),0,0).
fval(3,(overlap,(node2,key1)),0,0).
fval(3,(overlap,(triangle,key0)),0,0).
fval(3,(overlap,(triangle,r)),0,0).
fval(3,(overlap,(key1,square)),0,0).
fval(3,(overlap,(node1,square)),0,0).
fval(3,(overlap,(r,key0)),0,0).
fval(3,(overlap,(triangle,square)),0,0).
fval(3,(overlap,(key0,square)),0,0).
fval(3,(overlap,(square,r)),0,0).
fval(3,(overlap,(square,key0)),0,0).
fval(3,(overlap,(key1,triangle)),0,0).
fval(3,(overlap,(triangle,node1)),0,0).
fval(3,(overlap,(node2,key0)),0,0).
fval(3,(overlap,(key1,node2)),0,0).
fval(3,(overlap,(node2,r)),0,0).
fval(3,(overlap,(node1,triangle)),0,0).
fval(3,(overlap,(node1,node2)),0,0).
fval(3,(overlap,(r,square)),0,0).
fval(3,(overlap,(key0,triangle)),0,0).
fval(3,(overlap,(key0,node2)),0,0).
fval(3,(overlap,(triangle,node2)),0,0).
fval(3,(overlap,(triangle,key1)),0,0).
fval(3,(overlap,(key0,key1)),0,0).
fval(3,(overlap,(node2,square)),0,0).
fval(3,(overlap,(square,node1)),0,0).
fval(3,(overlap,(r,node2)),0,0).
fval(3,(overlap,(node2,node1)),0,0).
fval(3,(overlap,(key1,r)),0,0).
fval(3,(overlap,(key1,key0)),0,0).
fval(3,(overlap,(r,triangle)),0,0).
fval(3,(overlap,(r,key1)),0,0).
fval(3,(overlap,(square,triangle)),0,0).
fval(3,(overlap,(square,node2)),0,0).
fval(3,(overlap,(square,key1)),0,0).
fval(3,(overlap,(node1,key1)),1,1).
fval(3,(overlap,(node1,r)),1,1).
fval(3,(overlap,(key1,node1)),1,1).
fval(3,(overlap,(r,node1)),1,1).
fval(3,(overlap,(node2,triangle)),1,0).
fval(3,(overlap,(key0,r)),1,0).
fval(3,(overlap,(node2,key1)),1,0).
fval(3,(overlap,(triangle,key0)),1,0).
fval(3,(overlap,(triangle,r)),1,0).
fval(3,(overlap,(key1,square)),1,0).
fval(3,(overlap,(node1,square)),1,0).
fval(3,(overlap,(r,key0)),1,0).
fval(3,(overlap,(triangle,square)),1,0).
fval(3,(overlap,(key0,square)),1,0).
fval(3,(overlap,(square,r)),1,0).
fval(3,(overlap,(square,key0)),1,0).
fval(3,(overlap,(key1,triangle)),1,0).
fval(3,(overlap,(triangle,node1)),1,0).
fval(3,(overlap,(node2,key0)),1,0).
fval(3,(overlap,(key1,node2)),1,0).
fval(3,(overlap,(node2,r)),1,0).
fval(3,(overlap,(key0,node1)),1,0).
fval(3,(overlap,(node1,triangle)),1,0).
fval(3,(overlap,(node1,node2)),1,0).
fval(3,(overlap,(r,square)),1,0).
fval(3,(overlap,(key0,triangle)),1,0).
fval(3,(overlap,(key0,node2)),1,0).
fval(3,(overlap,(triangle,node2)),1,0).
fval(3,(overlap,(triangle,key1)),1,0).
fval(3,(overlap,(key0,key1)),1,0).
fval(3,(overlap,(node2,square)),1,0).
fval(3,(overlap,(square,node1)),1,0).
fval(3,(overlap,(r,node2)),1,0).
fval(3,(overlap,(node2,node1)),1,0).
fval(3,(overlap,(key1,r)),1,0).
fval(3,(overlap,(key1,key0)),1,0).
fval(3,(overlap,(r,triangle)),1,0).
fval(3,(overlap,(r,key1)),1,0).
fval(3,(overlap,(square,triangle)),1,0).
fval(3,(overlap,(node1,key0)),1,0).
fval(3,(overlap,(square,node2)),1,0).
fval(3,(overlap,(square,key1)),1,0).
fval(3,(overlap,(node1,r)),2,1).
fval(3,(overlap,(r,node1)),2,1).
fval(3,(overlap,(key0,node1)),2,1).
fval(3,(overlap,(node1,key0)),2,1).
fval(3,(overlap,(node2,triangle)),2,0).
fval(3,(overlap,(key0,r)),2,0).
fval(3,(overlap,(node2,key1)),2,0).
fval(3,(overlap,(triangle,key0)),2,0).
fval(3,(overlap,(triangle,r)),2,0).
fval(3,(overlap,(key1,square)),2,0).
fval(3,(overlap,(node1,square)),2,0).
fval(3,(overlap,(r,key0)),2,0).
fval(3,(overlap,(key1,node1)),2,0).
fval(3,(overlap,(triangle,square)),2,0).
fval(3,(overlap,(key0,square)),2,0).
fval(3,(overlap,(square,r)),2,0).
fval(3,(overlap,(square,key0)),2,0).
fval(3,(overlap,(key1,triangle)),2,0).
fval(3,(overlap,(triangle,node1)),2,0).
fval(3,(overlap,(node2,key0)),2,0).
fval(3,(overlap,(key1,node2)),2,0).
fval(3,(overlap,(node2,r)),2,0).
fval(3,(overlap,(node1,triangle)),2,0).
fval(3,(overlap,(node1,node2)),2,0).
fval(3,(overlap,(r,square)),2,0).
fval(3,(overlap,(node1,key1)),2,0).
fval(3,(overlap,(key0,triangle)),2,0).
fval(3,(overlap,(key0,node2)),2,0).
fval(3,(overlap,(triangle,node2)),2,0).
fval(3,(overlap,(triangle,key1)),2,0).
fval(3,(overlap,(key0,key1)),2,0).
fval(3,(overlap,(node2,square)),2,0).
fval(3,(overlap,(square,node1)),2,0).
fval(3,(overlap,(r,node2)),2,0).
fval(3,(overlap,(node2,node1)),2,0).
fval(3,(overlap,(key1,r)),2,0).
fval(3,(overlap,(key1,key0)),2,0).
fval(3,(overlap,(r,triangle)),2,0).
fval(3,(overlap,(r,key1)),2,0).
fval(3,(overlap,(square,triangle)),2,0).
fval(3,(overlap,(square,node2)),2,0).
fval(3,(overlap,(square,key1)),2,0).
fval(3,(overlap,(node1,r)),3,1).
fval(3,(overlap,(r,node1)),3,1).
fval(3,(overlap,(key0,node1)),3,1).
fval(3,(overlap,(node1,key0)),3,1).
fval(3,(overlap,(node2,triangle)),3,0).
fval(3,(overlap,(key0,r)),3,0).
fval(3,(overlap,(node2,key1)),3,0).
fval(3,(overlap,(triangle,key0)),3,0).
fval(3,(overlap,(triangle,r)),3,0).
fval(3,(overlap,(key1,square)),3,0).
fval(3,(overlap,(node1,square)),3,0).
fval(3,(overlap,(r,key0)),3,0).
fval(3,(overlap,(key1,node1)),3,0).
fval(3,(overlap,(triangle,square)),3,0).
fval(3,(overlap,(key0,square)),3,0).
fval(3,(overlap,(square,r)),3,0).
fval(3,(overlap,(square,key0)),3,0).
fval(3,(overlap,(key1,triangle)),3,0).
fval(3,(overlap,(triangle,node1)),3,0).
fval(3,(overlap,(node2,key0)),3,0).
fval(3,(overlap,(key1,node2)),3,0).
fval(3,(overlap,(node2,r)),3,0).
fval(3,(overlap,(node1,triangle)),3,0).
fval(3,(overlap,(node1,node2)),3,0).
fval(3,(overlap,(r,square)),3,0).
fval(3,(overlap,(node1,key1)),3,0).
fval(3,(overlap,(key0,triangle)),3,0).
fval(3,(overlap,(key0,node2)),3,0).
fval(3,(overlap,(triangle,node2)),3,0).
fval(3,(overlap,(triangle,key1)),3,0).
fval(3,(overlap,(key0,key1)),3,0).
fval(3,(overlap,(node2,square)),3,0).
fval(3,(overlap,(square,node1)),3,0).
fval(3,(overlap,(r,node2)),3,0).
fval(3,(overlap,(node2,node1)),3,0).
fval(3,(overlap,(key1,r)),3,0).
fval(3,(overlap,(key1,key0)),3,0).
fval(3,(overlap,(r,triangle)),3,0).
fval(3,(overlap,(r,key1)),3,0).
fval(3,(overlap,(square,triangle)),3,0).
fval(3,(overlap,(square,node2)),3,0).
fval(3,(overlap,(square,key1)),3,0).
fval(3,(overlap,(r,node2)),4,1).
fval(3,(overlap,(node1,key0)),4,1).
fval(3,(overlap,(node2,r)),4,1).
fval(3,(overlap,(key0,node1)),4,1).
fval(3,(overlap,(node2,triangle)),4,0).
fval(3,(overlap,(key0,r)),4,0).
fval(3,(overlap,(node2,key1)),4,0).
fval(3,(overlap,(triangle,key0)),4,0).
fval(3,(overlap,(triangle,r)),4,0).
fval(3,(overlap,(key1,square)),4,0).
fval(3,(overlap,(node1,square)),4,0).
fval(3,(overlap,(r,key0)),4,0).
fval(3,(overlap,(key1,node1)),4,0).
fval(3,(overlap,(triangle,square)),4,0).
fval(3,(overlap,(key0,square)),4,0).
fval(3,(overlap,(square,r)),4,0).
fval(3,(overlap,(square,key0)),4,0).
fval(3,(overlap,(key1,triangle)),4,0).
fval(3,(overlap,(triangle,node1)),4,0).
fval(3,(overlap,(node2,key0)),4,0).
fval(3,(overlap,(key1,node2)),4,0).
fval(3,(overlap,(node1,triangle)),4,0).
fval(3,(overlap,(node1,node2)),4,0).
fval(3,(overlap,(r,square)),4,0).
fval(3,(overlap,(node1,key1)),4,0).
fval(3,(overlap,(key0,triangle)),4,0).
fval(3,(overlap,(key0,node2)),4,0).
fval(3,(overlap,(r,node1)),4,0).
fval(3,(overlap,(triangle,node2)),4,0).
fval(3,(overlap,(triangle,key1)),4,0).
fval(3,(overlap,(key0,key1)),4,0).
fval(3,(overlap,(node2,square)),4,0).
fval(3,(overlap,(square,node1)),4,0).
fval(3,(overlap,(node2,node1)),4,0).
fval(3,(overlap,(key1,r)),4,0).
fval(3,(overlap,(key1,key0)),4,0).
fval(3,(overlap,(r,triangle)),4,0).
fval(3,(overlap,(r,key1)),4,0).
fval(3,(overlap,(square,triangle)),4,0).
fval(3,(overlap,(node1,r)),4,0).
fval(3,(overlap,(square,node2)),4,0).
fval(3,(overlap,(square,key1)),4,0).
fval(3,(overlap,(key1,node1)),5,1).
fval(3,(overlap,(r,node1)),5,1).
fval(3,(overlap,(node1,key1)),5,1).
fval(3,(overlap,(node1,r)),5,1).
fval(3,(overlap,(key0,node1)),5,1).
fval(3,(overlap,(node1,key0)),5,1).
fval(3,(overlap,(node2,triangle)),5,0).
fval(3,(overlap,(key0,r)),5,0).
fval(3,(overlap,(node2,key1)),5,0).
fval(3,(overlap,(triangle,key0)),5,0).
fval(3,(overlap,(triangle,r)),5,0).
fval(3,(overlap,(key1,square)),5,0).
fval(3,(overlap,(node1,square)),5,0).
fval(3,(overlap,(r,key0)),5,0).
fval(3,(overlap,(triangle,square)),5,0).
fval(3,(overlap,(key0,square)),5,0).
fval(3,(overlap,(square,r)),5,0).
fval(3,(overlap,(square,key0)),5,0).
fval(3,(overlap,(key1,triangle)),5,0).
fval(3,(overlap,(triangle,node1)),5,0).
fval(3,(overlap,(node2,key0)),5,0).
fval(3,(overlap,(key1,node2)),5,0).
fval(3,(overlap,(node2,r)),5,0).
fval(3,(overlap,(node1,triangle)),5,0).
fval(3,(overlap,(node1,node2)),5,0).
fval(3,(overlap,(r,square)),5,0).
fval(3,(overlap,(key0,triangle)),5,0).
fval(3,(overlap,(key0,node2)),5,0).
fval(3,(overlap,(triangle,node2)),5,0).
fval(3,(overlap,(triangle,key1)),5,0).
fval(3,(overlap,(key0,key1)),5,0).
fval(3,(overlap,(node2,square)),5,0).
fval(3,(overlap,(square,node1)),5,0).
fval(3,(overlap,(r,node2)),5,0).
fval(3,(overlap,(node2,node1)),5,0).
fval(3,(overlap,(key1,r)),5,0).
fval(3,(overlap,(key1,key0)),5,0).
fval(3,(overlap,(r,triangle)),5,0).
fval(3,(overlap,(r,key1)),5,0).
fval(3,(overlap,(square,triangle)),5,0).
fval(3,(overlap,(square,node2)),5,0).
fval(3,(overlap,(square,key1)),5,0).
fval(3,(overlap,(node2,key1)),6,1).
fval(3,(overlap,(key1,node2)),6,1).
fval(3,(overlap,(r,node2)),6,1).
fval(3,(overlap,(node1,key0)),6,1).
fval(3,(overlap,(node2,r)),6,1).
fval(3,(overlap,(key0,node1)),6,1).
fval(3,(overlap,(node2,triangle)),6,0).
fval(3,(overlap,(key0,r)),6,0).
fval(3,(overlap,(triangle,key0)),6,0).
fval(3,(overlap,(triangle,r)),6,0).
fval(3,(overlap,(key1,square)),6,0).
fval(3,(overlap,(node1,square)),6,0).
fval(3,(overlap,(r,key0)),6,0).
fval(3,(overlap,(key1,node1)),6,0).
fval(3,(overlap,(triangle,square)),6,0).
fval(3,(overlap,(key0,square)),6,0).
fval(3,(overlap,(square,r)),6,0).
fval(3,(overlap,(square,key0)),6,0).
fval(3,(overlap,(key1,triangle)),6,0).
fval(3,(overlap,(triangle,node1)),6,0).
fval(3,(overlap,(node2,key0)),6,0).
fval(3,(overlap,(node1,triangle)),6,0).
fval(3,(overlap,(node1,node2)),6,0).
fval(3,(overlap,(r,square)),6,0).
fval(3,(overlap,(node1,key1)),6,0).
fval(3,(overlap,(key0,triangle)),6,0).
fval(3,(overlap,(key0,node2)),6,0).
fval(3,(overlap,(r,node1)),6,0).
fval(3,(overlap,(triangle,node2)),6,0).
fval(3,(overlap,(triangle,key1)),6,0).
fval(3,(overlap,(key0,key1)),6,0).
fval(3,(overlap,(node2,square)),6,0).
fval(3,(overlap,(square,node1)),6,0).
fval(3,(overlap,(node2,node1)),6,0).
fval(3,(overlap,(key1,r)),6,0).
fval(3,(overlap,(key1,key0)),6,0).
fval(3,(overlap,(r,triangle)),6,0).
fval(3,(overlap,(r,key1)),6,0).
fval(3,(overlap,(square,triangle)),6,0).
fval(3,(overlap,(node1,r)),6,0).
fval(3,(overlap,(square,node2)),6,0).
fval(3,(overlap,(square,key1)),6,0).
fval(3,(overlap,(key1,node1)),7,1).
fval(3,(overlap,(node1,key1)),7,1).
fval(3,(overlap,(r,node2)),7,1).
fval(3,(overlap,(node1,key0)),7,1).
fval(3,(overlap,(node2,r)),7,1).
fval(3,(overlap,(key0,node1)),7,1).
fval(3,(overlap,(node2,triangle)),7,0).
fval(3,(overlap,(key0,r)),7,0).
fval(3,(overlap,(node2,key1)),7,0).
fval(3,(overlap,(triangle,key0)),7,0).
fval(3,(overlap,(triangle,r)),7,0).
fval(3,(overlap,(key1,square)),7,0).
fval(3,(overlap,(node1,square)),7,0).
fval(3,(overlap,(r,key0)),7,0).
fval(3,(overlap,(triangle,square)),7,0).
fval(3,(overlap,(key0,square)),7,0).
fval(3,(overlap,(square,r)),7,0).
fval(3,(overlap,(square,key0)),7,0).
fval(3,(overlap,(key1,triangle)),7,0).
fval(3,(overlap,(triangle,node1)),7,0).
fval(3,(overlap,(node2,key0)),7,0).
fval(3,(overlap,(key1,node2)),7,0).
fval(3,(overlap,(node1,triangle)),7,0).
fval(3,(overlap,(node1,node2)),7,0).
fval(3,(overlap,(r,square)),7,0).
fval(3,(overlap,(key0,triangle)),7,0).
fval(3,(overlap,(key0,node2)),7,0).
fval(3,(overlap,(r,node1)),7,0).
fval(3,(overlap,(triangle,node2)),7,0).
fval(3,(overlap,(triangle,key1)),7,0).
fval(3,(overlap,(key0,key1)),7,0).
fval(3,(overlap,(node2,square)),7,0).
fval(3,(overlap,(square,node1)),7,0).
fval(3,(overlap,(node2,node1)),7,0).
fval(3,(overlap,(key1,r)),7,0).
fval(3,(overlap,(key1,key0)),7,0).
fval(3,(overlap,(r,triangle)),7,0).
fval(3,(overlap,(r,key1)),7,0).
fval(3,(overlap,(square,triangle)),7,0).
fval(3,(overlap,(node1,r)),7,0).
fval(3,(overlap,(square,node2)),7,0).
fval(3,(overlap,(square,key1)),7,0).
fval(3,(overlap,(node1,key1)),8,1).
fval(3,(overlap,(node1,r)),8,1).
fval(3,(overlap,(key1,node1)),8,1).
fval(3,(overlap,(r,node1)),8,1).
fval(3,(overlap,(node2,triangle)),8,0).
fval(3,(overlap,(key0,r)),8,0).
fval(3,(overlap,(node2,key1)),8,0).
fval(3,(overlap,(triangle,key0)),8,0).
fval(3,(overlap,(triangle,r)),8,0).
fval(3,(overlap,(key1,square)),8,0).
fval(3,(overlap,(node1,square)),8,0).
fval(3,(overlap,(r,key0)),8,0).
fval(3,(overlap,(triangle,square)),8,0).
fval(3,(overlap,(key0,square)),8,0).
fval(3,(overlap,(square,r)),8,0).
fval(3,(overlap,(square,key0)),8,0).
fval(3,(overlap,(key1,triangle)),8,0).
fval(3,(overlap,(triangle,node1)),8,0).
fval(3,(overlap,(node2,key0)),8,0).
fval(3,(overlap,(key1,node2)),8,0).
fval(3,(overlap,(node2,r)),8,0).
fval(3,(overlap,(key0,node1)),8,0).
fval(3,(overlap,(node1,triangle)),8,0).
fval(3,(overlap,(node1,node2)),8,0).
fval(3,(overlap,(r,square)),8,0).
fval(3,(overlap,(key0,triangle)),8,0).
fval(3,(overlap,(key0,node2)),8,0).
fval(3,(overlap,(triangle,node2)),8,0).
fval(3,(overlap,(triangle,key1)),8,0).
fval(3,(overlap,(key0,key1)),8,0).
fval(3,(overlap,(node2,square)),8,0).
fval(3,(overlap,(square,node1)),8,0).
fval(3,(overlap,(r,node2)),8,0).
fval(3,(overlap,(node2,node1)),8,0).
fval(3,(overlap,(key1,r)),8,0).
fval(3,(overlap,(key1,key0)),8,0).
fval(3,(overlap,(r,triangle)),8,0).
fval(3,(overlap,(r,key1)),8,0).
fval(3,(overlap,(square,triangle)),8,0).
fval(3,(overlap,(node1,key0)),8,0).
fval(3,(overlap,(square,node2)),8,0).
fval(3,(overlap,(square,key1)),8,0).
fval(3,(overlap,(r,node1)),9,1).
fval(3,(overlap,(key1,node2)),9,1).
fval(3,(overlap,(node2,key1)),9,1).
fval(3,(overlap,(node1,r)),9,1).
fval(3,(overlap,(key0,node1)),9,1).
fval(3,(overlap,(node1,key0)),9,1).
fval(3,(overlap,(node2,triangle)),9,0).
fval(3,(overlap,(key0,r)),9,0).
fval(3,(overlap,(triangle,key0)),9,0).
fval(3,(overlap,(triangle,r)),9,0).
fval(3,(overlap,(key1,square)),9,0).
fval(3,(overlap,(node1,square)),9,0).
fval(3,(overlap,(r,key0)),9,0).
fval(3,(overlap,(key1,node1)),9,0).
fval(3,(overlap,(triangle,square)),9,0).
fval(3,(overlap,(key0,square)),9,0).
fval(3,(overlap,(square,r)),9,0).
fval(3,(overlap,(square,key0)),9,0).
fval(3,(overlap,(key1,triangle)),9,0).
fval(3,(overlap,(triangle,node1)),9,0).
fval(3,(overlap,(node2,key0)),9,0).
fval(3,(overlap,(node2,r)),9,0).
fval(3,(overlap,(node1,triangle)),9,0).
fval(3,(overlap,(node1,node2)),9,0).
fval(3,(overlap,(r,square)),9,0).
fval(3,(overlap,(node1,key1)),9,0).
fval(3,(overlap,(key0,triangle)),9,0).
fval(3,(overlap,(key0,node2)),9,0).
fval(3,(overlap,(triangle,node2)),9,0).
fval(3,(overlap,(triangle,key1)),9,0).
fval(3,(overlap,(key0,key1)),9,0).
fval(3,(overlap,(node2,square)),9,0).
fval(3,(overlap,(square,node1)),9,0).
fval(3,(overlap,(r,node2)),9,0).
fval(3,(overlap,(node2,node1)),9,0).
fval(3,(overlap,(key1,r)),9,0).
fval(3,(overlap,(key1,key0)),9,0).
fval(3,(overlap,(r,triangle)),9,0).
fval(3,(overlap,(r,key1)),9,0).
fval(3,(overlap,(square,triangle)),9,0).
fval(3,(overlap,(square,node2)),9,0).
fval(3,(overlap,(square,key1)),9,0).
fval(3,(overlap,(node1,key1)),10,1).
fval(3,(overlap,(r,node2)),10,1).
fval(3,(overlap,(key1,node1)),10,1).
fval(3,(overlap,(node2,r)),10,1).
fval(3,(overlap,(node2,triangle)),10,0).
fval(3,(overlap,(key0,r)),10,0).
fval(3,(overlap,(node2,key1)),10,0).
fval(3,(overlap,(triangle,key0)),10,0).
fval(3,(overlap,(triangle,r)),10,0).
fval(3,(overlap,(key1,square)),10,0).
fval(3,(overlap,(node1,square)),10,0).
fval(3,(overlap,(r,key0)),10,0).
fval(3,(overlap,(triangle,square)),10,0).
fval(3,(overlap,(key0,square)),10,0).
fval(3,(overlap,(square,r)),10,0).
fval(3,(overlap,(square,key0)),10,0).
fval(3,(overlap,(key1,triangle)),10,0).
fval(3,(overlap,(triangle,node1)),10,0).
fval(3,(overlap,(node2,key0)),10,0).
fval(3,(overlap,(key1,node2)),10,0).
fval(3,(overlap,(key0,node1)),10,0).
fval(3,(overlap,(node1,triangle)),10,0).
fval(3,(overlap,(node1,node2)),10,0).
fval(3,(overlap,(r,square)),10,0).
fval(3,(overlap,(key0,triangle)),10,0).
fval(3,(overlap,(key0,node2)),10,0).
fval(3,(overlap,(r,node1)),10,0).
fval(3,(overlap,(triangle,node2)),10,0).
fval(3,(overlap,(triangle,key1)),10,0).
fval(3,(overlap,(key0,key1)),10,0).
fval(3,(overlap,(node1,key0)),10,0).
fval(3,(overlap,(node2,square)),10,0).
fval(3,(overlap,(square,node1)),10,0).
fval(3,(overlap,(node2,node1)),10,0).
fval(3,(overlap,(key1,r)),10,0).
fval(3,(overlap,(key1,key0)),10,0).
fval(3,(overlap,(r,triangle)),10,0).
fval(3,(overlap,(r,key1)),10,0).
fval(3,(overlap,(square,triangle)),10,0).
fval(3,(overlap,(node1,r)),10,0).
fval(3,(overlap,(square,node2)),10,0).
fval(3,(overlap,(square,key1)),10,0).
fval(3,(overlap,(key1,node2)),11,1).
fval(3,(overlap,(node2,key1)),11,1).
fval(3,(overlap,(node1,r)),11,1).
fval(3,(overlap,(r,node1)),11,1).
fval(3,(overlap,(node2,triangle)),11,0).
fval(3,(overlap,(key0,r)),11,0).
fval(3,(overlap,(triangle,key0)),11,0).
fval(3,(overlap,(triangle,r)),11,0).
fval(3,(overlap,(key1,square)),11,0).
fval(3,(overlap,(node1,square)),11,0).
fval(3,(overlap,(r,key0)),11,0).
fval(3,(overlap,(key1,node1)),11,0).
fval(3,(overlap,(triangle,square)),11,0).
fval(3,(overlap,(key0,square)),11,0).
fval(3,(overlap,(square,r)),11,0).
fval(3,(overlap,(square,key0)),11,0).
fval(3,(overlap,(key1,triangle)),11,0).
fval(3,(overlap,(triangle,node1)),11,0).
fval(3,(overlap,(node2,key0)),11,0).
fval(3,(overlap,(node2,r)),11,0).
fval(3,(overlap,(key0,node1)),11,0).
fval(3,(overlap,(node1,triangle)),11,0).
fval(3,(overlap,(node1,node2)),11,0).
fval(3,(overlap,(r,square)),11,0).
fval(3,(overlap,(node1,key1)),11,0).
fval(3,(overlap,(key0,triangle)),11,0).
fval(3,(overlap,(key0,node2)),11,0).
fval(3,(overlap,(triangle,node2)),11,0).
fval(3,(overlap,(triangle,key1)),11,0).
fval(3,(overlap,(key0,key1)),11,0).
fval(3,(overlap,(node2,square)),11,0).
fval(3,(overlap,(square,node1)),11,0).
fval(3,(overlap,(r,node2)),11,0).
fval(3,(overlap,(node2,node1)),11,0).
fval(3,(overlap,(key1,r)),11,0).
fval(3,(overlap,(key1,key0)),11,0).
fval(3,(overlap,(r,triangle)),11,0).
fval(3,(overlap,(r,key1)),11,0).
fval(3,(overlap,(square,triangle)),11,0).
fval(3,(overlap,(node1,key0)),11,0).
fval(3,(overlap,(square,node2)),11,0).
fval(3,(overlap,(square,key1)),11,0).
fval(3,(overlap,(key0,node2)),12,1).
fval(3,(overlap,(key1,node1)),12,1).
fval(3,(overlap,(node2,key0)),12,1).
fval(3,(overlap,(node1,key1)),12,1).
fval(3,(overlap,(r,node2)),12,1).
fval(3,(overlap,(node2,r)),12,1).
fval(3,(overlap,(node2,triangle)),12,0).
fval(3,(overlap,(key0,r)),12,0).
fval(3,(overlap,(node2,key1)),12,0).
fval(3,(overlap,(triangle,key0)),12,0).
fval(3,(overlap,(triangle,r)),12,0).
fval(3,(overlap,(key1,square)),12,0).
fval(3,(overlap,(node1,square)),12,0).
fval(3,(overlap,(r,key0)),12,0).
fval(3,(overlap,(triangle,square)),12,0).
fval(3,(overlap,(key0,square)),12,0).
fval(3,(overlap,(square,r)),12,0).
fval(3,(overlap,(square,key0)),12,0).
fval(3,(overlap,(key1,triangle)),12,0).
fval(3,(overlap,(triangle,node1)),12,0).
fval(3,(overlap,(key1,node2)),12,0).
fval(3,(overlap,(key0,node1)),12,0).
fval(3,(overlap,(node1,triangle)),12,0).
fval(3,(overlap,(node1,node2)),12,0).
fval(3,(overlap,(r,square)),12,0).
fval(3,(overlap,(key0,triangle)),12,0).
fval(3,(overlap,(triangle,node2)),12,0).
fval(3,(overlap,(r,node1)),12,0).
fval(3,(overlap,(triangle,key1)),12,0).
fval(3,(overlap,(key0,key1)),12,0).
fval(3,(overlap,(node1,key0)),12,0).
fval(3,(overlap,(node2,square)),12,0).
fval(3,(overlap,(square,node1)),12,0).
fval(3,(overlap,(node2,node1)),12,0).
fval(3,(overlap,(key1,r)),12,0).
fval(3,(overlap,(key1,key0)),12,0).
fval(3,(overlap,(r,triangle)),12,0).
fval(3,(overlap,(r,key1)),12,0).
fval(3,(overlap,(square,triangle)),12,0).
fval(3,(overlap,(node1,r)),12,0).
fval(3,(overlap,(square,node2)),12,0).
fval(3,(overlap,(square,key1)),12,0).
fval(3,(overlap,(key1,node2)),13,1).
fval(3,(overlap,(r,node2)),13,1).
fval(3,(overlap,(node2,r)),13,1).
fval(3,(overlap,(node2,key1)),13,1).
fval(3,(overlap,(node2,triangle)),13,0).
fval(3,(overlap,(key0,r)),13,0).
fval(3,(overlap,(triangle,key0)),13,0).
fval(3,(overlap,(triangle,r)),13,0).
fval(3,(overlap,(key1,square)),13,0).
fval(3,(overlap,(node1,square)),13,0).
fval(3,(overlap,(r,key0)),13,0).
fval(3,(overlap,(key1,node1)),13,0).
fval(3,(overlap,(triangle,square)),13,0).
fval(3,(overlap,(key0,square)),13,0).
fval(3,(overlap,(square,r)),13,0).
fval(3,(overlap,(square,key0)),13,0).
fval(3,(overlap,(key1,triangle)),13,0).
fval(3,(overlap,(triangle,node1)),13,0).
fval(3,(overlap,(node2,key0)),13,0).
fval(3,(overlap,(key0,node1)),13,0).
fval(3,(overlap,(node1,triangle)),13,0).
fval(3,(overlap,(node1,node2)),13,0).
fval(3,(overlap,(r,square)),13,0).
fval(3,(overlap,(node1,key1)),13,0).
fval(3,(overlap,(key0,triangle)),13,0).
fval(3,(overlap,(key0,node2)),13,0).
fval(3,(overlap,(r,node1)),13,0).
fval(3,(overlap,(triangle,node2)),13,0).
fval(3,(overlap,(triangle,key1)),13,0).
fval(3,(overlap,(key0,key1)),13,0).
fval(3,(overlap,(node1,key0)),13,0).
fval(3,(overlap,(node2,square)),13,0).
fval(3,(overlap,(square,node1)),13,0).
fval(3,(overlap,(node2,node1)),13,0).
fval(3,(overlap,(key1,r)),13,0).
fval(3,(overlap,(key1,key0)),13,0).
fval(3,(overlap,(r,triangle)),13,0).
fval(3,(overlap,(r,key1)),13,0).
fval(3,(overlap,(square,triangle)),13,0).
fval(3,(overlap,(node1,r)),13,0).
fval(3,(overlap,(square,node2)),13,0).
fval(3,(overlap,(square,key1)),13,0).
fval(3,(overlap,(key0,node2)),14,1).
fval(3,(overlap,(key1,node1)),14,1).
fval(3,(overlap,(r,node1)),14,1).
fval(3,(overlap,(node2,key0)),14,1).
fval(3,(overlap,(node1,key1)),14,1).
fval(3,(overlap,(node1,r)),14,1).
fval(3,(overlap,(node2,triangle)),14,0).
fval(3,(overlap,(key0,r)),14,0).
fval(3,(overlap,(node2,key1)),14,0).
fval(3,(overlap,(triangle,key0)),14,0).
fval(3,(overlap,(triangle,r)),14,0).
fval(3,(overlap,(key1,square)),14,0).
fval(3,(overlap,(node1,square)),14,0).
fval(3,(overlap,(r,key0)),14,0).
fval(3,(overlap,(triangle,square)),14,0).
fval(3,(overlap,(key0,square)),14,0).
fval(3,(overlap,(square,r)),14,0).
fval(3,(overlap,(square,key0)),14,0).
fval(3,(overlap,(key1,triangle)),14,0).
fval(3,(overlap,(triangle,node1)),14,0).
fval(3,(overlap,(key1,node2)),14,0).
fval(3,(overlap,(node2,r)),14,0).
fval(3,(overlap,(key0,node1)),14,0).
fval(3,(overlap,(node1,triangle)),14,0).
fval(3,(overlap,(node1,node2)),14,0).
fval(3,(overlap,(r,square)),14,0).
fval(3,(overlap,(key0,triangle)),14,0).
fval(3,(overlap,(triangle,node2)),14,0).
fval(3,(overlap,(triangle,key1)),14,0).
fval(3,(overlap,(key0,key1)),14,0).
fval(3,(overlap,(node2,square)),14,0).
fval(3,(overlap,(square,node1)),14,0).
fval(3,(overlap,(r,node2)),14,0).
fval(3,(overlap,(node2,node1)),14,0).
fval(3,(overlap,(key1,r)),14,0).
fval(3,(overlap,(key1,key0)),14,0).
fval(3,(overlap,(r,triangle)),14,0).
fval(3,(overlap,(r,key1)),14,0).
fval(3,(overlap,(square,triangle)),14,0).
fval(3,(overlap,(node1,key0)),14,0).
fval(3,(overlap,(square,node2)),14,0).
fval(3,(overlap,(square,key1)),14,0).
fval(3,(overlap,(key0,node2)),15,1).
fval(3,(overlap,(node2,key0)),15,1).
fval(3,(overlap,(node2,key1)),15,1).
fval(3,(overlap,(key1,node2)),15,1).
fval(3,(overlap,(r,node2)),15,1).
fval(3,(overlap,(node2,r)),15,1).
fval(3,(overlap,(node2,triangle)),15,0).
fval(3,(overlap,(key0,r)),15,0).
fval(3,(overlap,(triangle,key0)),15,0).
fval(3,(overlap,(triangle,r)),15,0).
fval(3,(overlap,(key1,square)),15,0).
fval(3,(overlap,(node1,square)),15,0).
fval(3,(overlap,(r,key0)),15,0).
fval(3,(overlap,(key1,node1)),15,0).
fval(3,(overlap,(triangle,square)),15,0).
fval(3,(overlap,(key0,square)),15,0).
fval(3,(overlap,(square,r)),15,0).
fval(3,(overlap,(square,key0)),15,0).
fval(3,(overlap,(key1,triangle)),15,0).
fval(3,(overlap,(triangle,node1)),15,0).
fval(3,(overlap,(key0,node1)),15,0).
fval(3,(overlap,(node1,triangle)),15,0).
fval(3,(overlap,(node1,node2)),15,0).
fval(3,(overlap,(r,square)),15,0).
fval(3,(overlap,(node1,key1)),15,0).
fval(3,(overlap,(key0,triangle)),15,0).
fval(3,(overlap,(triangle,node2)),15,0).
fval(3,(overlap,(r,node1)),15,0).
fval(3,(overlap,(triangle,key1)),15,0).
fval(3,(overlap,(key0,key1)),15,0).
fval(3,(overlap,(node1,key0)),15,0).
fval(3,(overlap,(node2,square)),15,0).
fval(3,(overlap,(square,node1)),15,0).
fval(3,(overlap,(node2,node1)),15,0).
fval(3,(overlap,(key1,r)),15,0).
fval(3,(overlap,(key1,key0)),15,0).
fval(3,(overlap,(r,triangle)),15,0).
fval(3,(overlap,(r,key1)),15,0).
fval(3,(overlap,(square,triangle)),15,0).
fval(3,(overlap,(node1,r)),15,0).
fval(3,(overlap,(square,node2)),15,0).
fval(3,(overlap,(square,key1)),15,0).
fval(3,(overlap,(key0,node2)),16,1).
fval(3,(overlap,(node1,r)),16,1).
fval(3,(overlap,(r,node1)),16,1).
fval(3,(overlap,(node2,key0)),16,1).
fval(3,(overlap,(node2,triangle)),16,0).
fval(3,(overlap,(key0,r)),16,0).
fval(3,(overlap,(node2,key1)),16,0).
fval(3,(overlap,(triangle,key0)),16,0).
fval(3,(overlap,(triangle,r)),16,0).
fval(3,(overlap,(key1,square)),16,0).
fval(3,(overlap,(node1,square)),16,0).
fval(3,(overlap,(r,key0)),16,0).
fval(3,(overlap,(key1,node1)),16,0).
fval(3,(overlap,(triangle,square)),16,0).
fval(3,(overlap,(key0,square)),16,0).
fval(3,(overlap,(square,r)),16,0).
fval(3,(overlap,(square,key0)),16,0).
fval(3,(overlap,(key1,triangle)),16,0).
fval(3,(overlap,(triangle,node1)),16,0).
fval(3,(overlap,(key1,node2)),16,0).
fval(3,(overlap,(node2,r)),16,0).
fval(3,(overlap,(key0,node1)),16,0).
fval(3,(overlap,(node1,triangle)),16,0).
fval(3,(overlap,(node1,node2)),16,0).
fval(3,(overlap,(r,square)),16,0).
fval(3,(overlap,(node1,key1)),16,0).
fval(3,(overlap,(key0,triangle)),16,0).
fval(3,(overlap,(triangle,node2)),16,0).
fval(3,(overlap,(triangle,key1)),16,0).
fval(3,(overlap,(key0,key1)),16,0).
fval(3,(overlap,(node2,square)),16,0).
fval(3,(overlap,(square,node1)),16,0).
fval(3,(overlap,(r,node2)),16,0).
fval(3,(overlap,(node2,node1)),16,0).
fval(3,(overlap,(key1,r)),16,0).
fval(3,(overlap,(key1,key0)),16,0).
fval(3,(overlap,(r,triangle)),16,0).
fval(3,(overlap,(r,key1)),16,0).
fval(3,(overlap,(square,triangle)),16,0).
fval(3,(overlap,(node1,key0)),16,0).
fval(3,(overlap,(square,node2)),16,0).
fval(3,(overlap,(square,key1)),16,0).
fval(3,(overlap,(key0,node2)),17,1).
fval(3,(overlap,(r,node1)),17,1).
fval(3,(overlap,(node2,key0)),17,1).
fval(3,(overlap,(key1,node2)),17,1).
fval(3,(overlap,(node2,key1)),17,1).
fval(3,(overlap,(node1,r)),17,1).
fval(3,(overlap,(node2,triangle)),17,0).
fval(3,(overlap,(key0,r)),17,0).
fval(3,(overlap,(triangle,key0)),17,0).
fval(3,(overlap,(triangle,r)),17,0).
fval(3,(overlap,(key1,square)),17,0).
fval(3,(overlap,(node1,square)),17,0).
fval(3,(overlap,(r,key0)),17,0).
fval(3,(overlap,(key1,node1)),17,0).
fval(3,(overlap,(triangle,square)),17,0).
fval(3,(overlap,(key0,square)),17,0).
fval(3,(overlap,(square,r)),17,0).
fval(3,(overlap,(square,key0)),17,0).
fval(3,(overlap,(key1,triangle)),17,0).
fval(3,(overlap,(triangle,node1)),17,0).
fval(3,(overlap,(node2,r)),17,0).
fval(3,(overlap,(key0,node1)),17,0).
fval(3,(overlap,(node1,triangle)),17,0).
fval(3,(overlap,(node1,node2)),17,0).
fval(3,(overlap,(r,square)),17,0).
fval(3,(overlap,(node1,key1)),17,0).
fval(3,(overlap,(key0,triangle)),17,0).
fval(3,(overlap,(triangle,node2)),17,0).
fval(3,(overlap,(triangle,key1)),17,0).
fval(3,(overlap,(key0,key1)),17,0).
fval(3,(overlap,(node2,square)),17,0).
fval(3,(overlap,(square,node1)),17,0).
fval(3,(overlap,(r,node2)),17,0).
fval(3,(overlap,(node2,node1)),17,0).
fval(3,(overlap,(key1,r)),17,0).
fval(3,(overlap,(key1,key0)),17,0).
fval(3,(overlap,(r,triangle)),17,0).
fval(3,(overlap,(r,key1)),17,0).
fval(3,(overlap,(square,triangle)),17,0).
fval(3,(overlap,(node1,key0)),17,0).
fval(3,(overlap,(square,node2)),17,0).
fval(3,(overlap,(square,key1)),17,0).
fval(3,(overlap,(r,node2)),18,1).
fval(3,(overlap,(key0,node2)),18,1).
fval(3,(overlap,(node2,r)),18,1).
fval(3,(overlap,(node2,key0)),18,1).
fval(3,(overlap,(node2,triangle)),18,0).
fval(3,(overlap,(key0,r)),18,0).
fval(3,(overlap,(node2,key1)),18,0).
fval(3,(overlap,(triangle,key0)),18,0).
fval(3,(overlap,(triangle,r)),18,0).
fval(3,(overlap,(key1,square)),18,0).
fval(3,(overlap,(node1,square)),18,0).
fval(3,(overlap,(r,key0)),18,0).
fval(3,(overlap,(key1,node1)),18,0).
fval(3,(overlap,(triangle,square)),18,0).
fval(3,(overlap,(key0,square)),18,0).
fval(3,(overlap,(square,r)),18,0).
fval(3,(overlap,(square,key0)),18,0).
fval(3,(overlap,(key1,triangle)),18,0).
fval(3,(overlap,(triangle,node1)),18,0).
fval(3,(overlap,(key1,node2)),18,0).
fval(3,(overlap,(key0,node1)),18,0).
fval(3,(overlap,(node1,triangle)),18,0).
fval(3,(overlap,(node1,node2)),18,0).
fval(3,(overlap,(r,square)),18,0).
fval(3,(overlap,(node1,key1)),18,0).
fval(3,(overlap,(key0,triangle)),18,0).
fval(3,(overlap,(triangle,node2)),18,0).
fval(3,(overlap,(r,node1)),18,0).
fval(3,(overlap,(triangle,key1)),18,0).
fval(3,(overlap,(key0,key1)),18,0).
fval(3,(overlap,(node1,key0)),18,0).
fval(3,(overlap,(node2,square)),18,0).
fval(3,(overlap,(square,node1)),18,0).
fval(3,(overlap,(node2,node1)),18,0).
fval(3,(overlap,(key1,r)),18,0).
fval(3,(overlap,(key1,key0)),18,0).
fval(3,(overlap,(r,triangle)),18,0).
fval(3,(overlap,(r,key1)),18,0).
fval(3,(overlap,(square,triangle)),18,0).
fval(3,(overlap,(node1,r)),18,0).
fval(3,(overlap,(square,node2)),18,0).
fval(3,(overlap,(square,key1)),18,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node1,)),0,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(triangle,)),0,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node2,)),0,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key1,)),0,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(r,)),0,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key0,)),0,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(square,)),0,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node1,)),1,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(triangle,)),1,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node2,)),1,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key1,)),1,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(r,)),1,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key0,)),1,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(square,)),1,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node1,)),2,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(triangle,)),2,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node2,)),2,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key1,)),2,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(r,)),2,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key0,)),2,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(square,)),2,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node1,)),3,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(triangle,)),3,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node2,)),3,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key1,)),3,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(r,)),3,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key0,)),3,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(square,)),3,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node1,)),4,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(triangle,)),4,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node2,)),4,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key1,)),4,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(r,)),4,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key0,)),4,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(square,)),4,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node1,)),5,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(triangle,)),5,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node2,)),5,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key1,)),5,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(r,)),5,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key0,)),5,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(square,)),5,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node2,)),6,1).
fval(3,(inter_er_left_opencell_er_overlap_key,(node1,)),6,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(triangle,)),6,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key1,)),6,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(r,)),6,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key0,)),6,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(square,)),6,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node1,)),7,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(triangle,)),7,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node2,)),7,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key1,)),7,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(r,)),7,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key0,)),7,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(square,)),7,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node1,)),8,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(triangle,)),8,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node2,)),8,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key1,)),8,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(r,)),8,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key0,)),8,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(square,)),8,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node2,)),9,1).
fval(3,(inter_er_left_opencell_er_overlap_key,(node1,)),9,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(triangle,)),9,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key1,)),9,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(r,)),9,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key0,)),9,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(square,)),9,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node1,)),10,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(triangle,)),10,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node2,)),10,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key1,)),10,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(r,)),10,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key0,)),10,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(square,)),10,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node2,)),11,1).
fval(3,(inter_er_left_opencell_er_overlap_key,(node1,)),11,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(triangle,)),11,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key1,)),11,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(r,)),11,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key0,)),11,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(square,)),11,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node2,)),12,1).
fval(3,(inter_er_left_opencell_er_overlap_key,(node1,)),12,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(triangle,)),12,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key1,)),12,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(r,)),12,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key0,)),12,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(square,)),12,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node2,)),13,1).
fval(3,(inter_er_left_opencell_er_overlap_key,(node1,)),13,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(triangle,)),13,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key1,)),13,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(r,)),13,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key0,)),13,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(square,)),13,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node2,)),14,1).
fval(3,(inter_er_left_opencell_er_overlap_key,(node1,)),14,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(triangle,)),14,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key1,)),14,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(r,)),14,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key0,)),14,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(square,)),14,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node2,)),15,1).
fval(3,(inter_er_left_opencell_er_overlap_key,(node1,)),15,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(triangle,)),15,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key1,)),15,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(r,)),15,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key0,)),15,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(square,)),15,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node2,)),16,1).
fval(3,(inter_er_left_opencell_er_overlap_key,(node1,)),16,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(triangle,)),16,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key1,)),16,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(r,)),16,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key0,)),16,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(square,)),16,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node2,)),17,1).
fval(3,(inter_er_left_opencell_er_overlap_key,(node1,)),17,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(triangle,)),17,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key1,)),17,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(r,)),17,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key0,)),17,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(square,)),17,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(node2,)),18,1).
fval(3,(inter_er_left_opencell_er_overlap_key,(node1,)),18,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(triangle,)),18,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key1,)),18,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(r,)),18,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(key0,)),18,0).
fval(3,(inter_er_left_opencell_er_overlap_key,(square,)),18,0).
fval(3,(comp_inv_left_inv_overlap,(node2,triangle)),0,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,r)),0,0).
fval(3,(comp_inv_left_inv_overlap,(key0,r)),0,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key1)),0,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key0)),0,0).
fval(3,(comp_inv_left_inv_overlap,(key1,square)),0,0).
fval(3,(comp_inv_left_inv_overlap,(node1,square)),0,0).
fval(3,(comp_inv_left_inv_overlap,(r,key0)),0,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node1)),0,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,square)),0,0).
fval(3,(comp_inv_left_inv_overlap,(key0,square)),0,0).
fval(3,(comp_inv_left_inv_overlap,(square,r)),0,0).
fval(3,(comp_inv_left_inv_overlap,(square,key0)),0,0).
fval(3,(comp_inv_left_inv_overlap,(key1,triangle)),0,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node1)),0,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key0)),0,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node2)),0,0).
fval(3,(comp_inv_left_inv_overlap,(node2,r)),0,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node1)),0,0).
fval(3,(comp_inv_left_inv_overlap,(node1,triangle)),0,0).
fval(3,(comp_inv_left_inv_overlap,(node1,node2)),0,0).
fval(3,(comp_inv_left_inv_overlap,(r,square)),0,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key1)),0,0).
fval(3,(comp_inv_left_inv_overlap,(key0,triangle)),0,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node2)),0,0).
fval(3,(comp_inv_left_inv_overlap,(r,node1)),0,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node2)),0,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key1)),0,0).
fval(3,(comp_inv_left_inv_overlap,(key0,key1)),0,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key0)),0,0).
fval(3,(comp_inv_left_inv_overlap,(node2,square)),0,0).
fval(3,(comp_inv_left_inv_overlap,(square,node1)),0,0).
fval(3,(comp_inv_left_inv_overlap,(r,node2)),0,0).
fval(3,(comp_inv_left_inv_overlap,(node2,node1)),0,0).
fval(3,(comp_inv_left_inv_overlap,(key1,r)),0,0).
fval(3,(comp_inv_left_inv_overlap,(key1,key0)),0,0).
fval(3,(comp_inv_left_inv_overlap,(r,triangle)),0,0).
fval(3,(comp_inv_left_inv_overlap,(r,key1)),0,0).
fval(3,(comp_inv_left_inv_overlap,(square,triangle)),0,0).
fval(3,(comp_inv_left_inv_overlap,(node1,r)),0,0).
fval(3,(comp_inv_left_inv_overlap,(square,node2)),0,0).
fval(3,(comp_inv_left_inv_overlap,(square,key1)),0,0).
fval(3,(comp_inv_left_inv_overlap,(node2,triangle)),1,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,r)),1,0).
fval(3,(comp_inv_left_inv_overlap,(key0,r)),1,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key1)),1,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key0)),1,0).
fval(3,(comp_inv_left_inv_overlap,(key1,square)),1,0).
fval(3,(comp_inv_left_inv_overlap,(node1,square)),1,0).
fval(3,(comp_inv_left_inv_overlap,(r,key0)),1,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node1)),1,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,square)),1,0).
fval(3,(comp_inv_left_inv_overlap,(key0,square)),1,0).
fval(3,(comp_inv_left_inv_overlap,(square,r)),1,0).
fval(3,(comp_inv_left_inv_overlap,(square,key0)),1,0).
fval(3,(comp_inv_left_inv_overlap,(key1,triangle)),1,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node1)),1,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key0)),1,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node2)),1,0).
fval(3,(comp_inv_left_inv_overlap,(node2,r)),1,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node1)),1,0).
fval(3,(comp_inv_left_inv_overlap,(node1,triangle)),1,0).
fval(3,(comp_inv_left_inv_overlap,(node1,node2)),1,0).
fval(3,(comp_inv_left_inv_overlap,(r,square)),1,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key1)),1,0).
fval(3,(comp_inv_left_inv_overlap,(key0,triangle)),1,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node2)),1,0).
fval(3,(comp_inv_left_inv_overlap,(r,node1)),1,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node2)),1,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key1)),1,0).
fval(3,(comp_inv_left_inv_overlap,(key0,key1)),1,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key0)),1,0).
fval(3,(comp_inv_left_inv_overlap,(node2,square)),1,0).
fval(3,(comp_inv_left_inv_overlap,(square,node1)),1,0).
fval(3,(comp_inv_left_inv_overlap,(r,node2)),1,0).
fval(3,(comp_inv_left_inv_overlap,(node2,node1)),1,0).
fval(3,(comp_inv_left_inv_overlap,(key1,r)),1,0).
fval(3,(comp_inv_left_inv_overlap,(key1,key0)),1,0).
fval(3,(comp_inv_left_inv_overlap,(r,triangle)),1,0).
fval(3,(comp_inv_left_inv_overlap,(r,key1)),1,0).
fval(3,(comp_inv_left_inv_overlap,(square,triangle)),1,0).
fval(3,(comp_inv_left_inv_overlap,(node1,r)),1,0).
fval(3,(comp_inv_left_inv_overlap,(square,node2)),1,0).
fval(3,(comp_inv_left_inv_overlap,(square,key1)),1,0).
fval(3,(comp_inv_left_inv_overlap,(node2,triangle)),2,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,r)),2,0).
fval(3,(comp_inv_left_inv_overlap,(key0,r)),2,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key1)),2,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key0)),2,0).
fval(3,(comp_inv_left_inv_overlap,(key1,square)),2,0).
fval(3,(comp_inv_left_inv_overlap,(node1,square)),2,0).
fval(3,(comp_inv_left_inv_overlap,(r,key0)),2,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node1)),2,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,square)),2,0).
fval(3,(comp_inv_left_inv_overlap,(key0,square)),2,0).
fval(3,(comp_inv_left_inv_overlap,(square,r)),2,0).
fval(3,(comp_inv_left_inv_overlap,(square,key0)),2,0).
fval(3,(comp_inv_left_inv_overlap,(key1,triangle)),2,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node1)),2,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key0)),2,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node2)),2,0).
fval(3,(comp_inv_left_inv_overlap,(node2,r)),2,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node1)),2,0).
fval(3,(comp_inv_left_inv_overlap,(node1,triangle)),2,0).
fval(3,(comp_inv_left_inv_overlap,(node1,node2)),2,0).
fval(3,(comp_inv_left_inv_overlap,(r,square)),2,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key1)),2,0).
fval(3,(comp_inv_left_inv_overlap,(key0,triangle)),2,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node2)),2,0).
fval(3,(comp_inv_left_inv_overlap,(r,node1)),2,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node2)),2,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key1)),2,0).
fval(3,(comp_inv_left_inv_overlap,(key0,key1)),2,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key0)),2,0).
fval(3,(comp_inv_left_inv_overlap,(node2,square)),2,0).
fval(3,(comp_inv_left_inv_overlap,(square,node1)),2,0).
fval(3,(comp_inv_left_inv_overlap,(r,node2)),2,0).
fval(3,(comp_inv_left_inv_overlap,(node2,node1)),2,0).
fval(3,(comp_inv_left_inv_overlap,(key1,r)),2,0).
fval(3,(comp_inv_left_inv_overlap,(key1,key0)),2,0).
fval(3,(comp_inv_left_inv_overlap,(r,triangle)),2,0).
fval(3,(comp_inv_left_inv_overlap,(r,key1)),2,0).
fval(3,(comp_inv_left_inv_overlap,(square,triangle)),2,0).
fval(3,(comp_inv_left_inv_overlap,(node1,r)),2,0).
fval(3,(comp_inv_left_inv_overlap,(square,node2)),2,0).
fval(3,(comp_inv_left_inv_overlap,(square,key1)),2,0).
fval(3,(comp_inv_left_inv_overlap,(node2,triangle)),3,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,r)),3,0).
fval(3,(comp_inv_left_inv_overlap,(key0,r)),3,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key1)),3,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key0)),3,0).
fval(3,(comp_inv_left_inv_overlap,(key1,square)),3,0).
fval(3,(comp_inv_left_inv_overlap,(node1,square)),3,0).
fval(3,(comp_inv_left_inv_overlap,(r,key0)),3,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node1)),3,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,square)),3,0).
fval(3,(comp_inv_left_inv_overlap,(key0,square)),3,0).
fval(3,(comp_inv_left_inv_overlap,(square,r)),3,0).
fval(3,(comp_inv_left_inv_overlap,(square,key0)),3,0).
fval(3,(comp_inv_left_inv_overlap,(key1,triangle)),3,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node1)),3,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key0)),3,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node2)),3,0).
fval(3,(comp_inv_left_inv_overlap,(node2,r)),3,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node1)),3,0).
fval(3,(comp_inv_left_inv_overlap,(node1,triangle)),3,0).
fval(3,(comp_inv_left_inv_overlap,(node1,node2)),3,0).
fval(3,(comp_inv_left_inv_overlap,(r,square)),3,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key1)),3,0).
fval(3,(comp_inv_left_inv_overlap,(key0,triangle)),3,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node2)),3,0).
fval(3,(comp_inv_left_inv_overlap,(r,node1)),3,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node2)),3,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key1)),3,0).
fval(3,(comp_inv_left_inv_overlap,(key0,key1)),3,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key0)),3,0).
fval(3,(comp_inv_left_inv_overlap,(node2,square)),3,0).
fval(3,(comp_inv_left_inv_overlap,(square,node1)),3,0).
fval(3,(comp_inv_left_inv_overlap,(r,node2)),3,0).
fval(3,(comp_inv_left_inv_overlap,(node2,node1)),3,0).
fval(3,(comp_inv_left_inv_overlap,(key1,r)),3,0).
fval(3,(comp_inv_left_inv_overlap,(key1,key0)),3,0).
fval(3,(comp_inv_left_inv_overlap,(r,triangle)),3,0).
fval(3,(comp_inv_left_inv_overlap,(r,key1)),3,0).
fval(3,(comp_inv_left_inv_overlap,(square,triangle)),3,0).
fval(3,(comp_inv_left_inv_overlap,(node1,r)),3,0).
fval(3,(comp_inv_left_inv_overlap,(square,node2)),3,0).
fval(3,(comp_inv_left_inv_overlap,(square,key1)),3,0).
fval(3,(comp_inv_left_inv_overlap,(node1,r)),4,1).
fval(3,(comp_inv_left_inv_overlap,(node2,triangle)),4,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,r)),4,0).
fval(3,(comp_inv_left_inv_overlap,(key0,r)),4,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key1)),4,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key0)),4,0).
fval(3,(comp_inv_left_inv_overlap,(key1,square)),4,0).
fval(3,(comp_inv_left_inv_overlap,(node1,square)),4,0).
fval(3,(comp_inv_left_inv_overlap,(r,key0)),4,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node1)),4,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,square)),4,0).
fval(3,(comp_inv_left_inv_overlap,(key0,square)),4,0).
fval(3,(comp_inv_left_inv_overlap,(square,r)),4,0).
fval(3,(comp_inv_left_inv_overlap,(square,key0)),4,0).
fval(3,(comp_inv_left_inv_overlap,(key1,triangle)),4,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node1)),4,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key0)),4,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node2)),4,0).
fval(3,(comp_inv_left_inv_overlap,(node2,r)),4,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node1)),4,0).
fval(3,(comp_inv_left_inv_overlap,(node1,triangle)),4,0).
fval(3,(comp_inv_left_inv_overlap,(node1,node2)),4,0).
fval(3,(comp_inv_left_inv_overlap,(r,square)),4,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key1)),4,0).
fval(3,(comp_inv_left_inv_overlap,(key0,triangle)),4,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node2)),4,0).
fval(3,(comp_inv_left_inv_overlap,(r,node1)),4,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node2)),4,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key1)),4,0).
fval(3,(comp_inv_left_inv_overlap,(key0,key1)),4,0).
fval(3,(comp_inv_left_inv_overlap,(node2,square)),4,0).
fval(3,(comp_inv_left_inv_overlap,(square,node1)),4,0).
fval(3,(comp_inv_left_inv_overlap,(r,node2)),4,0).
fval(3,(comp_inv_left_inv_overlap,(node2,node1)),4,0).
fval(3,(comp_inv_left_inv_overlap,(key1,r)),4,0).
fval(3,(comp_inv_left_inv_overlap,(key1,key0)),4,0).
fval(3,(comp_inv_left_inv_overlap,(r,triangle)),4,0).
fval(3,(comp_inv_left_inv_overlap,(r,key1)),4,0).
fval(3,(comp_inv_left_inv_overlap,(square,triangle)),4,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key0)),4,0).
fval(3,(comp_inv_left_inv_overlap,(square,node2)),4,0).
fval(3,(comp_inv_left_inv_overlap,(square,key1)),4,0).
fval(3,(comp_inv_left_inv_overlap,(node2,triangle)),5,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,r)),5,0).
fval(3,(comp_inv_left_inv_overlap,(key0,r)),5,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key1)),5,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key0)),5,0).
fval(3,(comp_inv_left_inv_overlap,(key1,square)),5,0).
fval(3,(comp_inv_left_inv_overlap,(node1,square)),5,0).
fval(3,(comp_inv_left_inv_overlap,(r,key0)),5,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node1)),5,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,square)),5,0).
fval(3,(comp_inv_left_inv_overlap,(key0,square)),5,0).
fval(3,(comp_inv_left_inv_overlap,(square,r)),5,0).
fval(3,(comp_inv_left_inv_overlap,(square,key0)),5,0).
fval(3,(comp_inv_left_inv_overlap,(key1,triangle)),5,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node1)),5,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key0)),5,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node2)),5,0).
fval(3,(comp_inv_left_inv_overlap,(node2,r)),5,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node1)),5,0).
fval(3,(comp_inv_left_inv_overlap,(node1,triangle)),5,0).
fval(3,(comp_inv_left_inv_overlap,(node1,node2)),5,0).
fval(3,(comp_inv_left_inv_overlap,(r,square)),5,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key1)),5,0).
fval(3,(comp_inv_left_inv_overlap,(key0,triangle)),5,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node2)),5,0).
fval(3,(comp_inv_left_inv_overlap,(r,node1)),5,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node2)),5,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key1)),5,0).
fval(3,(comp_inv_left_inv_overlap,(key0,key1)),5,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key0)),5,0).
fval(3,(comp_inv_left_inv_overlap,(node2,square)),5,0).
fval(3,(comp_inv_left_inv_overlap,(square,node1)),5,0).
fval(3,(comp_inv_left_inv_overlap,(r,node2)),5,0).
fval(3,(comp_inv_left_inv_overlap,(node2,node1)),5,0).
fval(3,(comp_inv_left_inv_overlap,(key1,r)),5,0).
fval(3,(comp_inv_left_inv_overlap,(key1,key0)),5,0).
fval(3,(comp_inv_left_inv_overlap,(r,triangle)),5,0).
fval(3,(comp_inv_left_inv_overlap,(r,key1)),5,0).
fval(3,(comp_inv_left_inv_overlap,(square,triangle)),5,0).
fval(3,(comp_inv_left_inv_overlap,(node1,r)),5,0).
fval(3,(comp_inv_left_inv_overlap,(square,node2)),5,0).
fval(3,(comp_inv_left_inv_overlap,(square,key1)),5,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key1)),6,1).
fval(3,(comp_inv_left_inv_overlap,(node1,r)),6,1).
fval(3,(comp_inv_left_inv_overlap,(node2,triangle)),6,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,r)),6,0).
fval(3,(comp_inv_left_inv_overlap,(key0,r)),6,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key1)),6,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key0)),6,0).
fval(3,(comp_inv_left_inv_overlap,(key1,square)),6,0).
fval(3,(comp_inv_left_inv_overlap,(node1,square)),6,0).
fval(3,(comp_inv_left_inv_overlap,(r,key0)),6,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node1)),6,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,square)),6,0).
fval(3,(comp_inv_left_inv_overlap,(key0,square)),6,0).
fval(3,(comp_inv_left_inv_overlap,(square,r)),6,0).
fval(3,(comp_inv_left_inv_overlap,(square,key0)),6,0).
fval(3,(comp_inv_left_inv_overlap,(key1,triangle)),6,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node1)),6,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key0)),6,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node2)),6,0).
fval(3,(comp_inv_left_inv_overlap,(node2,r)),6,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node1)),6,0).
fval(3,(comp_inv_left_inv_overlap,(node1,triangle)),6,0).
fval(3,(comp_inv_left_inv_overlap,(node1,node2)),6,0).
fval(3,(comp_inv_left_inv_overlap,(r,square)),6,0).
fval(3,(comp_inv_left_inv_overlap,(key0,triangle)),6,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node2)),6,0).
fval(3,(comp_inv_left_inv_overlap,(r,node1)),6,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node2)),6,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key1)),6,0).
fval(3,(comp_inv_left_inv_overlap,(key0,key1)),6,0).
fval(3,(comp_inv_left_inv_overlap,(node2,square)),6,0).
fval(3,(comp_inv_left_inv_overlap,(square,node1)),6,0).
fval(3,(comp_inv_left_inv_overlap,(r,node2)),6,0).
fval(3,(comp_inv_left_inv_overlap,(node2,node1)),6,0).
fval(3,(comp_inv_left_inv_overlap,(key1,r)),6,0).
fval(3,(comp_inv_left_inv_overlap,(key1,key0)),6,0).
fval(3,(comp_inv_left_inv_overlap,(r,triangle)),6,0).
fval(3,(comp_inv_left_inv_overlap,(r,key1)),6,0).
fval(3,(comp_inv_left_inv_overlap,(square,triangle)),6,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key0)),6,0).
fval(3,(comp_inv_left_inv_overlap,(square,node2)),6,0).
fval(3,(comp_inv_left_inv_overlap,(square,key1)),6,0).
fval(3,(comp_inv_left_inv_overlap,(node1,r)),7,1).
fval(3,(comp_inv_left_inv_overlap,(node2,triangle)),7,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,r)),7,0).
fval(3,(comp_inv_left_inv_overlap,(key0,r)),7,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key1)),7,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key0)),7,0).
fval(3,(comp_inv_left_inv_overlap,(key1,square)),7,0).
fval(3,(comp_inv_left_inv_overlap,(node1,square)),7,0).
fval(3,(comp_inv_left_inv_overlap,(r,key0)),7,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node1)),7,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,square)),7,0).
fval(3,(comp_inv_left_inv_overlap,(key0,square)),7,0).
fval(3,(comp_inv_left_inv_overlap,(square,r)),7,0).
fval(3,(comp_inv_left_inv_overlap,(square,key0)),7,0).
fval(3,(comp_inv_left_inv_overlap,(key1,triangle)),7,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node1)),7,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key0)),7,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node2)),7,0).
fval(3,(comp_inv_left_inv_overlap,(node2,r)),7,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node1)),7,0).
fval(3,(comp_inv_left_inv_overlap,(node1,triangle)),7,0).
fval(3,(comp_inv_left_inv_overlap,(node1,node2)),7,0).
fval(3,(comp_inv_left_inv_overlap,(r,square)),7,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key1)),7,0).
fval(3,(comp_inv_left_inv_overlap,(key0,triangle)),7,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node2)),7,0).
fval(3,(comp_inv_left_inv_overlap,(r,node1)),7,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node2)),7,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key1)),7,0).
fval(3,(comp_inv_left_inv_overlap,(key0,key1)),7,0).
fval(3,(comp_inv_left_inv_overlap,(node2,square)),7,0).
fval(3,(comp_inv_left_inv_overlap,(square,node1)),7,0).
fval(3,(comp_inv_left_inv_overlap,(r,node2)),7,0).
fval(3,(comp_inv_left_inv_overlap,(node2,node1)),7,0).
fval(3,(comp_inv_left_inv_overlap,(key1,r)),7,0).
fval(3,(comp_inv_left_inv_overlap,(key1,key0)),7,0).
fval(3,(comp_inv_left_inv_overlap,(r,triangle)),7,0).
fval(3,(comp_inv_left_inv_overlap,(r,key1)),7,0).
fval(3,(comp_inv_left_inv_overlap,(square,triangle)),7,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key0)),7,0).
fval(3,(comp_inv_left_inv_overlap,(square,node2)),7,0).
fval(3,(comp_inv_left_inv_overlap,(square,key1)),7,0).
fval(3,(comp_inv_left_inv_overlap,(node2,triangle)),8,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,r)),8,0).
fval(3,(comp_inv_left_inv_overlap,(key0,r)),8,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key1)),8,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key0)),8,0).
fval(3,(comp_inv_left_inv_overlap,(key1,square)),8,0).
fval(3,(comp_inv_left_inv_overlap,(node1,square)),8,0).
fval(3,(comp_inv_left_inv_overlap,(r,key0)),8,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node1)),8,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,square)),8,0).
fval(3,(comp_inv_left_inv_overlap,(key0,square)),8,0).
fval(3,(comp_inv_left_inv_overlap,(square,r)),8,0).
fval(3,(comp_inv_left_inv_overlap,(square,key0)),8,0).
fval(3,(comp_inv_left_inv_overlap,(key1,triangle)),8,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node1)),8,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key0)),8,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node2)),8,0).
fval(3,(comp_inv_left_inv_overlap,(node2,r)),8,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node1)),8,0).
fval(3,(comp_inv_left_inv_overlap,(node1,triangle)),8,0).
fval(3,(comp_inv_left_inv_overlap,(node1,node2)),8,0).
fval(3,(comp_inv_left_inv_overlap,(r,square)),8,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key1)),8,0).
fval(3,(comp_inv_left_inv_overlap,(key0,triangle)),8,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node2)),8,0).
fval(3,(comp_inv_left_inv_overlap,(r,node1)),8,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node2)),8,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key1)),8,0).
fval(3,(comp_inv_left_inv_overlap,(key0,key1)),8,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key0)),8,0).
fval(3,(comp_inv_left_inv_overlap,(node2,square)),8,0).
fval(3,(comp_inv_left_inv_overlap,(square,node1)),8,0).
fval(3,(comp_inv_left_inv_overlap,(r,node2)),8,0).
fval(3,(comp_inv_left_inv_overlap,(node2,node1)),8,0).
fval(3,(comp_inv_left_inv_overlap,(key1,r)),8,0).
fval(3,(comp_inv_left_inv_overlap,(key1,key0)),8,0).
fval(3,(comp_inv_left_inv_overlap,(r,triangle)),8,0).
fval(3,(comp_inv_left_inv_overlap,(r,key1)),8,0).
fval(3,(comp_inv_left_inv_overlap,(square,triangle)),8,0).
fval(3,(comp_inv_left_inv_overlap,(node1,r)),8,0).
fval(3,(comp_inv_left_inv_overlap,(square,node2)),8,0).
fval(3,(comp_inv_left_inv_overlap,(square,key1)),8,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key1)),9,1).
fval(3,(comp_inv_left_inv_overlap,(node2,triangle)),9,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,r)),9,0).
fval(3,(comp_inv_left_inv_overlap,(key0,r)),9,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key1)),9,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key0)),9,0).
fval(3,(comp_inv_left_inv_overlap,(key1,square)),9,0).
fval(3,(comp_inv_left_inv_overlap,(node1,square)),9,0).
fval(3,(comp_inv_left_inv_overlap,(r,key0)),9,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node1)),9,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,square)),9,0).
fval(3,(comp_inv_left_inv_overlap,(key0,square)),9,0).
fval(3,(comp_inv_left_inv_overlap,(square,r)),9,0).
fval(3,(comp_inv_left_inv_overlap,(square,key0)),9,0).
fval(3,(comp_inv_left_inv_overlap,(key1,triangle)),9,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node1)),9,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key0)),9,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node2)),9,0).
fval(3,(comp_inv_left_inv_overlap,(node2,r)),9,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node1)),9,0).
fval(3,(comp_inv_left_inv_overlap,(node1,triangle)),9,0).
fval(3,(comp_inv_left_inv_overlap,(node1,node2)),9,0).
fval(3,(comp_inv_left_inv_overlap,(r,square)),9,0).
fval(3,(comp_inv_left_inv_overlap,(key0,triangle)),9,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node2)),9,0).
fval(3,(comp_inv_left_inv_overlap,(r,node1)),9,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node2)),9,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key1)),9,0).
fval(3,(comp_inv_left_inv_overlap,(key0,key1)),9,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key0)),9,0).
fval(3,(comp_inv_left_inv_overlap,(node2,square)),9,0).
fval(3,(comp_inv_left_inv_overlap,(square,node1)),9,0).
fval(3,(comp_inv_left_inv_overlap,(r,node2)),9,0).
fval(3,(comp_inv_left_inv_overlap,(node2,node1)),9,0).
fval(3,(comp_inv_left_inv_overlap,(key1,r)),9,0).
fval(3,(comp_inv_left_inv_overlap,(key1,key0)),9,0).
fval(3,(comp_inv_left_inv_overlap,(r,triangle)),9,0).
fval(3,(comp_inv_left_inv_overlap,(r,key1)),9,0).
fval(3,(comp_inv_left_inv_overlap,(square,triangle)),9,0).
fval(3,(comp_inv_left_inv_overlap,(node1,r)),9,0).
fval(3,(comp_inv_left_inv_overlap,(square,node2)),9,0).
fval(3,(comp_inv_left_inv_overlap,(square,key1)),9,0).
fval(3,(comp_inv_left_inv_overlap,(node1,r)),10,1).
fval(3,(comp_inv_left_inv_overlap,(node2,triangle)),10,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,r)),10,0).
fval(3,(comp_inv_left_inv_overlap,(key0,r)),10,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key1)),10,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key0)),10,0).
fval(3,(comp_inv_left_inv_overlap,(key1,square)),10,0).
fval(3,(comp_inv_left_inv_overlap,(node1,square)),10,0).
fval(3,(comp_inv_left_inv_overlap,(r,key0)),10,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node1)),10,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,square)),10,0).
fval(3,(comp_inv_left_inv_overlap,(key0,square)),10,0).
fval(3,(comp_inv_left_inv_overlap,(square,r)),10,0).
fval(3,(comp_inv_left_inv_overlap,(square,key0)),10,0).
fval(3,(comp_inv_left_inv_overlap,(key1,triangle)),10,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node1)),10,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key0)),10,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node2)),10,0).
fval(3,(comp_inv_left_inv_overlap,(node2,r)),10,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node1)),10,0).
fval(3,(comp_inv_left_inv_overlap,(node1,triangle)),10,0).
fval(3,(comp_inv_left_inv_overlap,(node1,node2)),10,0).
fval(3,(comp_inv_left_inv_overlap,(r,square)),10,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key1)),10,0).
fval(3,(comp_inv_left_inv_overlap,(key0,triangle)),10,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node2)),10,0).
fval(3,(comp_inv_left_inv_overlap,(r,node1)),10,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node2)),10,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key1)),10,0).
fval(3,(comp_inv_left_inv_overlap,(key0,key1)),10,0).
fval(3,(comp_inv_left_inv_overlap,(node2,square)),10,0).
fval(3,(comp_inv_left_inv_overlap,(square,node1)),10,0).
fval(3,(comp_inv_left_inv_overlap,(r,node2)),10,0).
fval(3,(comp_inv_left_inv_overlap,(node2,node1)),10,0).
fval(3,(comp_inv_left_inv_overlap,(key1,r)),10,0).
fval(3,(comp_inv_left_inv_overlap,(key1,key0)),10,0).
fval(3,(comp_inv_left_inv_overlap,(r,triangle)),10,0).
fval(3,(comp_inv_left_inv_overlap,(r,key1)),10,0).
fval(3,(comp_inv_left_inv_overlap,(square,triangle)),10,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key0)),10,0).
fval(3,(comp_inv_left_inv_overlap,(square,node2)),10,0).
fval(3,(comp_inv_left_inv_overlap,(square,key1)),10,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key1)),11,1).
fval(3,(comp_inv_left_inv_overlap,(node2,triangle)),11,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,r)),11,0).
fval(3,(comp_inv_left_inv_overlap,(key0,r)),11,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key1)),11,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key0)),11,0).
fval(3,(comp_inv_left_inv_overlap,(key1,square)),11,0).
fval(3,(comp_inv_left_inv_overlap,(node1,square)),11,0).
fval(3,(comp_inv_left_inv_overlap,(r,key0)),11,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node1)),11,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,square)),11,0).
fval(3,(comp_inv_left_inv_overlap,(key0,square)),11,0).
fval(3,(comp_inv_left_inv_overlap,(square,r)),11,0).
fval(3,(comp_inv_left_inv_overlap,(square,key0)),11,0).
fval(3,(comp_inv_left_inv_overlap,(key1,triangle)),11,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node1)),11,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key0)),11,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node2)),11,0).
fval(3,(comp_inv_left_inv_overlap,(node2,r)),11,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node1)),11,0).
fval(3,(comp_inv_left_inv_overlap,(node1,triangle)),11,0).
fval(3,(comp_inv_left_inv_overlap,(node1,node2)),11,0).
fval(3,(comp_inv_left_inv_overlap,(r,square)),11,0).
fval(3,(comp_inv_left_inv_overlap,(key0,triangle)),11,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node2)),11,0).
fval(3,(comp_inv_left_inv_overlap,(r,node1)),11,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node2)),11,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key1)),11,0).
fval(3,(comp_inv_left_inv_overlap,(key0,key1)),11,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key0)),11,0).
fval(3,(comp_inv_left_inv_overlap,(node2,square)),11,0).
fval(3,(comp_inv_left_inv_overlap,(square,node1)),11,0).
fval(3,(comp_inv_left_inv_overlap,(r,node2)),11,0).
fval(3,(comp_inv_left_inv_overlap,(node2,node1)),11,0).
fval(3,(comp_inv_left_inv_overlap,(key1,r)),11,0).
fval(3,(comp_inv_left_inv_overlap,(key1,key0)),11,0).
fval(3,(comp_inv_left_inv_overlap,(r,triangle)),11,0).
fval(3,(comp_inv_left_inv_overlap,(r,key1)),11,0).
fval(3,(comp_inv_left_inv_overlap,(square,triangle)),11,0).
fval(3,(comp_inv_left_inv_overlap,(node1,r)),11,0).
fval(3,(comp_inv_left_inv_overlap,(square,node2)),11,0).
fval(3,(comp_inv_left_inv_overlap,(square,key1)),11,0).
fval(3,(comp_inv_left_inv_overlap,(node1,r)),12,1).
fval(3,(comp_inv_left_inv_overlap,(node1,key0)),12,1).
fval(3,(comp_inv_left_inv_overlap,(node2,triangle)),12,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,r)),12,0).
fval(3,(comp_inv_left_inv_overlap,(key0,r)),12,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key1)),12,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key0)),12,0).
fval(3,(comp_inv_left_inv_overlap,(key1,square)),12,0).
fval(3,(comp_inv_left_inv_overlap,(node1,square)),12,0).
fval(3,(comp_inv_left_inv_overlap,(r,key0)),12,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node1)),12,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,square)),12,0).
fval(3,(comp_inv_left_inv_overlap,(key0,square)),12,0).
fval(3,(comp_inv_left_inv_overlap,(square,r)),12,0).
fval(3,(comp_inv_left_inv_overlap,(square,key0)),12,0).
fval(3,(comp_inv_left_inv_overlap,(key1,triangle)),12,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node1)),12,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key0)),12,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node2)),12,0).
fval(3,(comp_inv_left_inv_overlap,(node2,r)),12,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node1)),12,0).
fval(3,(comp_inv_left_inv_overlap,(node1,triangle)),12,0).
fval(3,(comp_inv_left_inv_overlap,(node1,node2)),12,0).
fval(3,(comp_inv_left_inv_overlap,(r,square)),12,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key1)),12,0).
fval(3,(comp_inv_left_inv_overlap,(key0,triangle)),12,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node2)),12,0).
fval(3,(comp_inv_left_inv_overlap,(r,node1)),12,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node2)),12,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key1)),12,0).
fval(3,(comp_inv_left_inv_overlap,(key0,key1)),12,0).
fval(3,(comp_inv_left_inv_overlap,(node2,square)),12,0).
fval(3,(comp_inv_left_inv_overlap,(square,node1)),12,0).
fval(3,(comp_inv_left_inv_overlap,(r,node2)),12,0).
fval(3,(comp_inv_left_inv_overlap,(node2,node1)),12,0).
fval(3,(comp_inv_left_inv_overlap,(key1,r)),12,0).
fval(3,(comp_inv_left_inv_overlap,(key1,key0)),12,0).
fval(3,(comp_inv_left_inv_overlap,(r,triangle)),12,0).
fval(3,(comp_inv_left_inv_overlap,(r,key1)),12,0).
fval(3,(comp_inv_left_inv_overlap,(square,triangle)),12,0).
fval(3,(comp_inv_left_inv_overlap,(square,node2)),12,0).
fval(3,(comp_inv_left_inv_overlap,(square,key1)),12,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key1)),13,1).
fval(3,(comp_inv_left_inv_overlap,(node1,r)),13,1).
fval(3,(comp_inv_left_inv_overlap,(node2,triangle)),13,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,r)),13,0).
fval(3,(comp_inv_left_inv_overlap,(key0,r)),13,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key1)),13,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key0)),13,0).
fval(3,(comp_inv_left_inv_overlap,(key1,square)),13,0).
fval(3,(comp_inv_left_inv_overlap,(node1,square)),13,0).
fval(3,(comp_inv_left_inv_overlap,(r,key0)),13,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node1)),13,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,square)),13,0).
fval(3,(comp_inv_left_inv_overlap,(key0,square)),13,0).
fval(3,(comp_inv_left_inv_overlap,(square,r)),13,0).
fval(3,(comp_inv_left_inv_overlap,(square,key0)),13,0).
fval(3,(comp_inv_left_inv_overlap,(key1,triangle)),13,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node1)),13,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key0)),13,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node2)),13,0).
fval(3,(comp_inv_left_inv_overlap,(node2,r)),13,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node1)),13,0).
fval(3,(comp_inv_left_inv_overlap,(node1,triangle)),13,0).
fval(3,(comp_inv_left_inv_overlap,(node1,node2)),13,0).
fval(3,(comp_inv_left_inv_overlap,(r,square)),13,0).
fval(3,(comp_inv_left_inv_overlap,(key0,triangle)),13,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node2)),13,0).
fval(3,(comp_inv_left_inv_overlap,(r,node1)),13,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node2)),13,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key1)),13,0).
fval(3,(comp_inv_left_inv_overlap,(key0,key1)),13,0).
fval(3,(comp_inv_left_inv_overlap,(node2,square)),13,0).
fval(3,(comp_inv_left_inv_overlap,(square,node1)),13,0).
fval(3,(comp_inv_left_inv_overlap,(r,node2)),13,0).
fval(3,(comp_inv_left_inv_overlap,(node2,node1)),13,0).
fval(3,(comp_inv_left_inv_overlap,(key1,r)),13,0).
fval(3,(comp_inv_left_inv_overlap,(key1,key0)),13,0).
fval(3,(comp_inv_left_inv_overlap,(r,triangle)),13,0).
fval(3,(comp_inv_left_inv_overlap,(r,key1)),13,0).
fval(3,(comp_inv_left_inv_overlap,(square,triangle)),13,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key0)),13,0).
fval(3,(comp_inv_left_inv_overlap,(square,node2)),13,0).
fval(3,(comp_inv_left_inv_overlap,(square,key1)),13,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key0)),14,1).
fval(3,(comp_inv_left_inv_overlap,(node2,triangle)),14,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,r)),14,0).
fval(3,(comp_inv_left_inv_overlap,(key0,r)),14,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key1)),14,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key0)),14,0).
fval(3,(comp_inv_left_inv_overlap,(key1,square)),14,0).
fval(3,(comp_inv_left_inv_overlap,(node1,square)),14,0).
fval(3,(comp_inv_left_inv_overlap,(r,key0)),14,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node1)),14,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,square)),14,0).
fval(3,(comp_inv_left_inv_overlap,(key0,square)),14,0).
fval(3,(comp_inv_left_inv_overlap,(square,r)),14,0).
fval(3,(comp_inv_left_inv_overlap,(square,key0)),14,0).
fval(3,(comp_inv_left_inv_overlap,(key1,triangle)),14,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node1)),14,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key0)),14,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node2)),14,0).
fval(3,(comp_inv_left_inv_overlap,(node2,r)),14,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node1)),14,0).
fval(3,(comp_inv_left_inv_overlap,(node1,triangle)),14,0).
fval(3,(comp_inv_left_inv_overlap,(node1,node2)),14,0).
fval(3,(comp_inv_left_inv_overlap,(r,square)),14,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key1)),14,0).
fval(3,(comp_inv_left_inv_overlap,(key0,triangle)),14,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node2)),14,0).
fval(3,(comp_inv_left_inv_overlap,(r,node1)),14,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node2)),14,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key1)),14,0).
fval(3,(comp_inv_left_inv_overlap,(key0,key1)),14,0).
fval(3,(comp_inv_left_inv_overlap,(node2,square)),14,0).
fval(3,(comp_inv_left_inv_overlap,(square,node1)),14,0).
fval(3,(comp_inv_left_inv_overlap,(r,node2)),14,0).
fval(3,(comp_inv_left_inv_overlap,(node2,node1)),14,0).
fval(3,(comp_inv_left_inv_overlap,(key1,r)),14,0).
fval(3,(comp_inv_left_inv_overlap,(key1,key0)),14,0).
fval(3,(comp_inv_left_inv_overlap,(r,triangle)),14,0).
fval(3,(comp_inv_left_inv_overlap,(r,key1)),14,0).
fval(3,(comp_inv_left_inv_overlap,(square,triangle)),14,0).
fval(3,(comp_inv_left_inv_overlap,(node1,r)),14,0).
fval(3,(comp_inv_left_inv_overlap,(square,node2)),14,0).
fval(3,(comp_inv_left_inv_overlap,(square,key1)),14,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key1)),15,1).
fval(3,(comp_inv_left_inv_overlap,(node1,r)),15,1).
fval(3,(comp_inv_left_inv_overlap,(node1,key0)),15,1).
fval(3,(comp_inv_left_inv_overlap,(node2,triangle)),15,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,r)),15,0).
fval(3,(comp_inv_left_inv_overlap,(key0,r)),15,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key1)),15,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key0)),15,0).
fval(3,(comp_inv_left_inv_overlap,(key1,square)),15,0).
fval(3,(comp_inv_left_inv_overlap,(node1,square)),15,0).
fval(3,(comp_inv_left_inv_overlap,(r,key0)),15,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node1)),15,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,square)),15,0).
fval(3,(comp_inv_left_inv_overlap,(key0,square)),15,0).
fval(3,(comp_inv_left_inv_overlap,(square,r)),15,0).
fval(3,(comp_inv_left_inv_overlap,(square,key0)),15,0).
fval(3,(comp_inv_left_inv_overlap,(key1,triangle)),15,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node1)),15,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key0)),15,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node2)),15,0).
fval(3,(comp_inv_left_inv_overlap,(node2,r)),15,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node1)),15,0).
fval(3,(comp_inv_left_inv_overlap,(node1,triangle)),15,0).
fval(3,(comp_inv_left_inv_overlap,(node1,node2)),15,0).
fval(3,(comp_inv_left_inv_overlap,(r,square)),15,0).
fval(3,(comp_inv_left_inv_overlap,(key0,triangle)),15,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node2)),15,0).
fval(3,(comp_inv_left_inv_overlap,(r,node1)),15,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node2)),15,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key1)),15,0).
fval(3,(comp_inv_left_inv_overlap,(key0,key1)),15,0).
fval(3,(comp_inv_left_inv_overlap,(node2,square)),15,0).
fval(3,(comp_inv_left_inv_overlap,(square,node1)),15,0).
fval(3,(comp_inv_left_inv_overlap,(r,node2)),15,0).
fval(3,(comp_inv_left_inv_overlap,(node2,node1)),15,0).
fval(3,(comp_inv_left_inv_overlap,(key1,r)),15,0).
fval(3,(comp_inv_left_inv_overlap,(key1,key0)),15,0).
fval(3,(comp_inv_left_inv_overlap,(r,triangle)),15,0).
fval(3,(comp_inv_left_inv_overlap,(r,key1)),15,0).
fval(3,(comp_inv_left_inv_overlap,(square,triangle)),15,0).
fval(3,(comp_inv_left_inv_overlap,(square,node2)),15,0).
fval(3,(comp_inv_left_inv_overlap,(square,key1)),15,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key0)),16,1).
fval(3,(comp_inv_left_inv_overlap,(node2,triangle)),16,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,r)),16,0).
fval(3,(comp_inv_left_inv_overlap,(key0,r)),16,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key1)),16,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key0)),16,0).
fval(3,(comp_inv_left_inv_overlap,(key1,square)),16,0).
fval(3,(comp_inv_left_inv_overlap,(node1,square)),16,0).
fval(3,(comp_inv_left_inv_overlap,(r,key0)),16,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node1)),16,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,square)),16,0).
fval(3,(comp_inv_left_inv_overlap,(key0,square)),16,0).
fval(3,(comp_inv_left_inv_overlap,(square,r)),16,0).
fval(3,(comp_inv_left_inv_overlap,(square,key0)),16,0).
fval(3,(comp_inv_left_inv_overlap,(key1,triangle)),16,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node1)),16,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key0)),16,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node2)),16,0).
fval(3,(comp_inv_left_inv_overlap,(node2,r)),16,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node1)),16,0).
fval(3,(comp_inv_left_inv_overlap,(node1,triangle)),16,0).
fval(3,(comp_inv_left_inv_overlap,(node1,node2)),16,0).
fval(3,(comp_inv_left_inv_overlap,(r,square)),16,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key1)),16,0).
fval(3,(comp_inv_left_inv_overlap,(key0,triangle)),16,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node2)),16,0).
fval(3,(comp_inv_left_inv_overlap,(r,node1)),16,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node2)),16,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key1)),16,0).
fval(3,(comp_inv_left_inv_overlap,(key0,key1)),16,0).
fval(3,(comp_inv_left_inv_overlap,(node2,square)),16,0).
fval(3,(comp_inv_left_inv_overlap,(square,node1)),16,0).
fval(3,(comp_inv_left_inv_overlap,(r,node2)),16,0).
fval(3,(comp_inv_left_inv_overlap,(node2,node1)),16,0).
fval(3,(comp_inv_left_inv_overlap,(key1,r)),16,0).
fval(3,(comp_inv_left_inv_overlap,(key1,key0)),16,0).
fval(3,(comp_inv_left_inv_overlap,(r,triangle)),16,0).
fval(3,(comp_inv_left_inv_overlap,(r,key1)),16,0).
fval(3,(comp_inv_left_inv_overlap,(square,triangle)),16,0).
fval(3,(comp_inv_left_inv_overlap,(node1,r)),16,0).
fval(3,(comp_inv_left_inv_overlap,(square,node2)),16,0).
fval(3,(comp_inv_left_inv_overlap,(square,key1)),16,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key1)),17,1).
fval(3,(comp_inv_left_inv_overlap,(node1,key0)),17,1).
fval(3,(comp_inv_left_inv_overlap,(node2,triangle)),17,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,r)),17,0).
fval(3,(comp_inv_left_inv_overlap,(key0,r)),17,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key1)),17,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key0)),17,0).
fval(3,(comp_inv_left_inv_overlap,(key1,square)),17,0).
fval(3,(comp_inv_left_inv_overlap,(node1,square)),17,0).
fval(3,(comp_inv_left_inv_overlap,(r,key0)),17,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node1)),17,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,square)),17,0).
fval(3,(comp_inv_left_inv_overlap,(key0,square)),17,0).
fval(3,(comp_inv_left_inv_overlap,(square,r)),17,0).
fval(3,(comp_inv_left_inv_overlap,(square,key0)),17,0).
fval(3,(comp_inv_left_inv_overlap,(key1,triangle)),17,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node1)),17,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key0)),17,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node2)),17,0).
fval(3,(comp_inv_left_inv_overlap,(node2,r)),17,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node1)),17,0).
fval(3,(comp_inv_left_inv_overlap,(node1,triangle)),17,0).
fval(3,(comp_inv_left_inv_overlap,(node1,node2)),17,0).
fval(3,(comp_inv_left_inv_overlap,(r,square)),17,0).
fval(3,(comp_inv_left_inv_overlap,(key0,triangle)),17,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node2)),17,0).
fval(3,(comp_inv_left_inv_overlap,(r,node1)),17,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node2)),17,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key1)),17,0).
fval(3,(comp_inv_left_inv_overlap,(key0,key1)),17,0).
fval(3,(comp_inv_left_inv_overlap,(node2,square)),17,0).
fval(3,(comp_inv_left_inv_overlap,(square,node1)),17,0).
fval(3,(comp_inv_left_inv_overlap,(r,node2)),17,0).
fval(3,(comp_inv_left_inv_overlap,(node2,node1)),17,0).
fval(3,(comp_inv_left_inv_overlap,(key1,r)),17,0).
fval(3,(comp_inv_left_inv_overlap,(key1,key0)),17,0).
fval(3,(comp_inv_left_inv_overlap,(r,triangle)),17,0).
fval(3,(comp_inv_left_inv_overlap,(r,key1)),17,0).
fval(3,(comp_inv_left_inv_overlap,(square,triangle)),17,0).
fval(3,(comp_inv_left_inv_overlap,(node1,r)),17,0).
fval(3,(comp_inv_left_inv_overlap,(square,node2)),17,0).
fval(3,(comp_inv_left_inv_overlap,(square,key1)),17,0).
fval(3,(comp_inv_left_inv_overlap,(node1,r)),18,1).
fval(3,(comp_inv_left_inv_overlap,(node1,key0)),18,1).
fval(3,(comp_inv_left_inv_overlap,(node2,triangle)),18,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,r)),18,0).
fval(3,(comp_inv_left_inv_overlap,(key0,r)),18,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key1)),18,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key0)),18,0).
fval(3,(comp_inv_left_inv_overlap,(key1,square)),18,0).
fval(3,(comp_inv_left_inv_overlap,(node1,square)),18,0).
fval(3,(comp_inv_left_inv_overlap,(r,key0)),18,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node1)),18,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,square)),18,0).
fval(3,(comp_inv_left_inv_overlap,(key0,square)),18,0).
fval(3,(comp_inv_left_inv_overlap,(square,r)),18,0).
fval(3,(comp_inv_left_inv_overlap,(square,key0)),18,0).
fval(3,(comp_inv_left_inv_overlap,(key1,triangle)),18,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node1)),18,0).
fval(3,(comp_inv_left_inv_overlap,(node2,key0)),18,0).
fval(3,(comp_inv_left_inv_overlap,(key1,node2)),18,0).
fval(3,(comp_inv_left_inv_overlap,(node2,r)),18,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node1)),18,0).
fval(3,(comp_inv_left_inv_overlap,(node1,triangle)),18,0).
fval(3,(comp_inv_left_inv_overlap,(node1,node2)),18,0).
fval(3,(comp_inv_left_inv_overlap,(r,square)),18,0).
fval(3,(comp_inv_left_inv_overlap,(node1,key1)),18,0).
fval(3,(comp_inv_left_inv_overlap,(key0,triangle)),18,0).
fval(3,(comp_inv_left_inv_overlap,(key0,node2)),18,0).
fval(3,(comp_inv_left_inv_overlap,(r,node1)),18,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,node2)),18,0).
fval(3,(comp_inv_left_inv_overlap,(triangle,key1)),18,0).
fval(3,(comp_inv_left_inv_overlap,(key0,key1)),18,0).
fval(3,(comp_inv_left_inv_overlap,(node2,square)),18,0).
fval(3,(comp_inv_left_inv_overlap,(square,node1)),18,0).
fval(3,(comp_inv_left_inv_overlap,(r,node2)),18,0).
fval(3,(comp_inv_left_inv_overlap,(node2,node1)),18,0).
fval(3,(comp_inv_left_inv_overlap,(key1,r)),18,0).
fval(3,(comp_inv_left_inv_overlap,(key1,key0)),18,0).
fval(3,(comp_inv_left_inv_overlap,(r,triangle)),18,0).
fval(3,(comp_inv_left_inv_overlap,(r,key1)),18,0).
fval(3,(comp_inv_left_inv_overlap,(square,triangle)),18,0).
fval(3,(comp_inv_left_inv_overlap,(square,node2)),18,0).
fval(3,(comp_inv_left_inv_overlap,(square,key1)),18,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node1,)),0,1).
fval(3,(inter_er_overlap_robot_er_overlap_key,(triangle,)),0,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node2,)),0,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key1,)),0,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key0,)),0,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(r,)),0,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(square,)),0,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node1,)),1,1).
fval(3,(inter_er_overlap_robot_er_overlap_key,(triangle,)),1,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node2,)),1,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key1,)),1,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key0,)),1,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(r,)),1,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(square,)),1,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node1,)),2,1).
fval(3,(inter_er_overlap_robot_er_overlap_key,(triangle,)),2,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node2,)),2,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key1,)),2,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key0,)),2,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(r,)),2,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(square,)),2,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node1,)),3,1).
fval(3,(inter_er_overlap_robot_er_overlap_key,(triangle,)),3,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node2,)),3,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key1,)),3,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key0,)),3,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(r,)),3,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(square,)),3,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node1,)),4,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(triangle,)),4,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node2,)),4,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key1,)),4,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key0,)),4,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(r,)),4,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(square,)),4,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node1,)),5,1).
fval(3,(inter_er_overlap_robot_er_overlap_key,(triangle,)),5,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node2,)),5,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key1,)),5,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key0,)),5,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(r,)),5,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(square,)),5,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node2,)),6,1).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node1,)),6,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(triangle,)),6,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key1,)),6,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key0,)),6,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(r,)),6,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(square,)),6,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node1,)),7,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(triangle,)),7,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node2,)),7,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key1,)),7,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key0,)),7,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(r,)),7,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(square,)),7,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node1,)),8,1).
fval(3,(inter_er_overlap_robot_er_overlap_key,(triangle,)),8,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node2,)),8,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key1,)),8,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key0,)),8,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(r,)),8,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(square,)),8,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node1,)),9,1).
fval(3,(inter_er_overlap_robot_er_overlap_key,(triangle,)),9,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node2,)),9,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key1,)),9,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key0,)),9,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(r,)),9,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(square,)),9,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node1,)),10,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(triangle,)),10,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node2,)),10,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key1,)),10,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key0,)),10,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(r,)),10,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(square,)),10,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node1,)),11,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(triangle,)),11,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node2,)),11,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key1,)),11,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key0,)),11,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(r,)),11,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(square,)),11,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node2,)),12,1).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node1,)),12,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(triangle,)),12,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key1,)),12,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key0,)),12,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(r,)),12,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(square,)),12,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node2,)),13,1).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node1,)),13,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(triangle,)),13,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key1,)),13,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key0,)),13,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(r,)),13,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(square,)),13,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node1,)),14,1).
fval(3,(inter_er_overlap_robot_er_overlap_key,(triangle,)),14,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node2,)),14,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key1,)),14,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key0,)),14,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(r,)),14,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(square,)),14,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node2,)),15,1).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node1,)),15,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(triangle,)),15,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key1,)),15,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key0,)),15,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(r,)),15,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(square,)),15,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node1,)),16,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(triangle,)),16,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node2,)),16,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key1,)),16,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key0,)),16,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(r,)),16,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(square,)),16,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node1,)),17,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(triangle,)),17,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node2,)),17,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key1,)),17,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key0,)),17,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(r,)),17,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(square,)),17,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node2,)),18,1).
fval(3,(inter_er_overlap_robot_er_overlap_key,(node1,)),18,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(triangle,)),18,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key1,)),18,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(key0,)),18,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(r,)),18,0).
fval(3,(inter_er_overlap_robot_er_overlap_key,(square,)),18,0).
fval(3,(below,(node2,triangle)),0).
fval(3,(below,(triangle,r)),0).
fval(3,(below,(key0,r)),0).
fval(3,(below,(node2,key1)),0).
fval(3,(below,(triangle,key0)),0).
fval(3,(below,(key1,square)),0).
fval(3,(below,(node1,square)),0).
fval(3,(below,(r,key0)),0).
fval(3,(below,(key1,node1)),0).
fval(3,(below,(triangle,square)),0).
fval(3,(below,(key0,square)),0).
fval(3,(below,(square,r)),0).
fval(3,(below,(square,key0)),0).
fval(3,(below,(key1,triangle)),0).
fval(3,(below,(triangle,node1)),0).
fval(3,(below,(node2,key0)),0).
fval(3,(below,(key1,node2)),0).
fval(3,(below,(node2,r)),0).
fval(3,(below,(key0,node1)),0).
fval(3,(below,(node1,triangle)),0).
fval(3,(below,(node1,node2)),0).
fval(3,(below,(r,square)),0).
fval(3,(below,(node1,key1)),0).
fval(3,(below,(key0,triangle)),0).
fval(3,(below,(key0,node2)),0).
fval(3,(below,(r,node1)),0).
fval(3,(below,(triangle,node2)),0).
fval(3,(below,(triangle,key1)),0).
fval(3,(below,(key0,key1)),0).
fval(3,(below,(node2,square)),0).
fval(3,(below,(square,node1)),0).
fval(3,(below,(r,node2)),0).
fval(3,(below,(node2,node1)),0).
fval(3,(below,(key1,r)),0).
fval(3,(below,(key1,key0)),0).
fval(3,(below,(r,triangle)),0).
fval(3,(below,(r,key1)),0).
fval(3,(below,(square,triangle)),0).
fval(3,(below,(node1,key0)),0).
fval(3,(below,(square,node2)),0).
fval(3,(below,(square,key1)),0).
fval(3,(below,(node1,r)),0).
fval(3,(left,(node2,node1)),1).
fval(3,(left,(node2,triangle)),0).
fval(3,(left,(triangle,r)),0).
fval(3,(left,(key0,r)),0).
fval(3,(left,(node2,key1)),0).
fval(3,(left,(triangle,key0)),0).
fval(3,(left,(key1,square)),0).
fval(3,(left,(node1,square)),0).
fval(3,(left,(r,key0)),0).
fval(3,(left,(key1,node1)),0).
fval(3,(left,(triangle,square)),0).
fval(3,(left,(key0,square)),0).
fval(3,(left,(square,r)),0).
fval(3,(left,(square,key0)),0).
fval(3,(left,(node2,key0)),0).
fval(3,(left,(triangle,node1)),0).
fval(3,(left,(key1,triangle)),0).
fval(3,(left,(key1,node2)),0).
fval(3,(left,(node2,r)),0).
fval(3,(left,(key0,node1)),0).
fval(3,(left,(node1,triangle)),0).
fval(3,(left,(node1,node2)),0).
fval(3,(left,(r,square)),0).
fval(3,(left,(node1,key1)),0).
fval(3,(left,(key0,triangle)),0).
fval(3,(left,(key0,node2)),0).
fval(3,(left,(r,node1)),0).
fval(3,(left,(triangle,node2)),0).
fval(3,(left,(triangle,key1)),0).
fval(3,(left,(key0,key1)),0).
fval(3,(left,(node2,square)),0).
fval(3,(left,(square,node1)),0).
fval(3,(left,(r,node2)),0).
fval(3,(left,(key1,r)),0).
fval(3,(left,(key1,key0)),0).
fval(3,(left,(r,triangle)),0).
fval(3,(left,(r,key1)),0).
fval(3,(left,(square,triangle)),0).
fval(3,(left,(node1,key0)),0).
fval(3,(left,(square,node2)),0).
fval(3,(left,(square,key1)),0).
fval(3,(left,(node1,r)),0).
fval(3,(comp_smaller_left,(key1,node1)),1).
fval(3,(comp_smaller_left,(r,node1)),1).
fval(3,(comp_smaller_left,(key0,node1)),1).
fval(3,(comp_smaller_left,(node2,triangle)),0).
fval(3,(comp_smaller_left,(triangle,key0)),0).
fval(3,(comp_smaller_left,(triangle,r)),0).
fval(3,(comp_smaller_left,(key0,r)),0).
fval(3,(comp_smaller_left,(node2,key1)),0).
fval(3,(comp_smaller_left,(key1,square)),0).
fval(3,(comp_smaller_left,(node1,square)),0).
fval(3,(comp_smaller_left,(r,key0)),0).
fval(3,(comp_smaller_left,(triangle,square)),0).
fval(3,(comp_smaller_left,(key0,square)),0).
fval(3,(comp_smaller_left,(square,r)),0).
fval(3,(comp_smaller_left,(square,key0)),0).
fval(3,(comp_smaller_left,(key1,triangle)),0).
fval(3,(comp_smaller_left,(node2,key0)),0).
fval(3,(comp_smaller_left,(triangle,node1)),0).
fval(3,(comp_smaller_left,(key1,node2)),0).
fval(3,(comp_smaller_left,(node2,r)),0).
fval(3,(comp_smaller_left,(node1,triangle)),0).
fval(3,(comp_smaller_left,(node1,node2)),0).
fval(3,(comp_smaller_left,(node1,key1)),0).
fval(3,(comp_smaller_left,(r,square)),0).
fval(3,(comp_smaller_left,(key0,triangle)),0).
fval(3,(comp_smaller_left,(triangle,node2)),0).
fval(3,(comp_smaller_left,(triangle,key1)),0).
fval(3,(comp_smaller_left,(key0,node2)),0).
fval(3,(comp_smaller_left,(key0,key1)),0).
fval(3,(comp_smaller_left,(node1,key0)),0).
fval(3,(comp_smaller_left,(node2,square)),0).
fval(3,(comp_smaller_left,(square,node1)),0).
fval(3,(comp_smaller_left,(r,node2)),0).
fval(3,(comp_smaller_left,(node2,node1)),0).
fval(3,(comp_smaller_left,(r,triangle)),0).
fval(3,(comp_smaller_left,(key1,r)),0).
fval(3,(comp_smaller_left,(key1,key0)),0).
fval(3,(comp_smaller_left,(r,key1)),0).
fval(3,(comp_smaller_left,(square,triangle)),0).
fval(3,(comp_smaller_left,(node1,r)),0).
fval(3,(comp_smaller_left,(square,node2)),0).
fval(3,(comp_smaller_left,(square,key1)),0).
fval(3,(inter_er_below_verum_er_overlap_robot,(node1,)),0).
fval(3,(inter_er_below_verum_er_overlap_robot,(triangle,)),0).
fval(3,(inter_er_below_verum_er_overlap_robot,(node2,)),0).
fval(3,(inter_er_below_verum_er_overlap_robot,(key1,)),0).
fval(3,(inter_er_below_verum_er_overlap_robot,(key0,)),0).
fval(3,(inter_er_below_verum_er_overlap_robot,(r,)),0).
fval(3,(inter_er_below_verum_er_overlap_robot,(square,)),0).
fval(3,(verum,(node1,)),1).
fval(3,(verum,(triangle,)),1).
fval(3,(verum,(node2,)),1).
fval(3,(verum,(key1,)),1).
fval(3,(verum,(r,)),1).
fval(3,(verum,(key0,)),1).
fval(3,(verum,(square,)),1).
fval(3,(robot,(r,)),1).
fval(3,(robot,(node1,)),0).
fval(3,(robot,(triangle,)),0).
fval(3,(robot,(node2,)),0).
fval(3,(robot,(key1,)),0).
fval(3,(robot,(key0,)),0).
fval(3,(robot,(square,)),0).
fval(3,(subset_lockedcell_verum,(0,)),0,1).
fval(3,(subset_lockedcell_verum,(0,)),1,1).
fval(3,(subset_lockedcell_verum,(0,)),2,1).
fval(3,(subset_lockedcell_verum,(0,)),3,0).
fval(3,(subset_lockedcell_verum,(0,)),4,0).
fval(3,(subset_lockedcell_verum,(0,)),5,0).
fval(3,(subset_lockedcell_verum,(0,)),6,0).
fval(3,(subset_lockedcell_verum,(0,)),7,0).
fval(3,(subset_lockedcell_verum,(0,)),8,0).
fval(3,(subset_lockedcell_verum,(0,)),9,0).
fval(3,(subset_lockedcell_verum,(0,)),10,0).
fval(3,(subset_lockedcell_verum,(0,)),11,0).
fval(3,(subset_lockedcell_verum,(0,)),12,0).
fval(3,(subset_lockedcell_verum,(0,)),13,0).
fval(3,(subset_lockedcell_verum,(0,)),14,0).
fval(3,(subset_lockedcell_verum,(0,)),15,0).
fval(3,(subset_lockedcell_verum,(0,)),16,0).
fval(3,(subset_lockedcell_verum,(0,)),17,0).
fval(3,(subset_lockedcell_verum,(0,)),18,0).
fval(3,(peg,(node1,)),0).
fval(3,(peg,(triangle,)),0).
fval(3,(peg,(node2,)),0).
fval(3,(peg,(key1,)),0).
fval(3,(peg,(r,)),0).
fval(3,(peg,(key0,)),0).
fval(3,(peg,(square,)),0).
fval(3,(comp_left_inv_smaller,(node2,key1)),1).
fval(3,(comp_left_inv_smaller,(node2,r)),1).
fval(3,(comp_left_inv_smaller,(node2,key0)),1).
fval(3,(comp_left_inv_smaller,(node2,triangle)),0).
fval(3,(comp_left_inv_smaller,(key0,r)),0).
fval(3,(comp_left_inv_smaller,(triangle,key0)),0).
fval(3,(comp_left_inv_smaller,(triangle,r)),0).
fval(3,(comp_left_inv_smaller,(key1,square)),0).
fval(3,(comp_left_inv_smaller,(node1,square)),0).
fval(3,(comp_left_inv_smaller,(r,key0)),0).
fval(3,(comp_left_inv_smaller,(key1,node1)),0).
fval(3,(comp_left_inv_smaller,(triangle,square)),0).
fval(3,(comp_left_inv_smaller,(key0,square)),0).
fval(3,(comp_left_inv_smaller,(square,r)),0).
fval(3,(comp_left_inv_smaller,(square,key0)),0).
fval(3,(comp_left_inv_smaller,(key1,triangle)),0).
fval(3,(comp_left_inv_smaller,(triangle,node1)),0).
fval(3,(comp_left_inv_smaller,(key1,node2)),0).
fval(3,(comp_left_inv_smaller,(key0,node1)),0).
fval(3,(comp_left_inv_smaller,(node1,triangle)),0).
fval(3,(comp_left_inv_smaller,(node1,node2)),0).
fval(3,(comp_left_inv_smaller,(r,square)),0).
fval(3,(comp_left_inv_smaller,(node1,key1)),0).
fval(3,(comp_left_inv_smaller,(key0,triangle)),0).
fval(3,(comp_left_inv_smaller,(key0,node2)),0).
fval(3,(comp_left_inv_smaller,(triangle,node2)),0).
fval(3,(comp_left_inv_smaller,(triangle,key1)),0).
fval(3,(comp_left_inv_smaller,(r,node1)),0).
fval(3,(comp_left_inv_smaller,(key0,key1)),0).
fval(3,(comp_left_inv_smaller,(node2,square)),0).
fval(3,(comp_left_inv_smaller,(square,node1)),0).
fval(3,(comp_left_inv_smaller,(r,node2)),0).
fval(3,(comp_left_inv_smaller,(node2,node1)),0).
fval(3,(comp_left_inv_smaller,(key1,r)),0).
fval(3,(comp_left_inv_smaller,(key1,key0)),0).
fval(3,(comp_left_inv_smaller,(r,triangle)),0).
fval(3,(comp_left_inv_smaller,(r,key1)),0).
fval(3,(comp_left_inv_smaller,(square,triangle)),0).
fval(3,(comp_left_inv_smaller,(node1,key0)),0).
fval(3,(comp_left_inv_smaller,(square,node2)),0).
fval(3,(comp_left_inv_smaller,(square,key1)),0).
fval(3,(comp_left_inv_smaller,(node1,r)),0).
fval(3,(comp_below_inv_below,(node2,triangle)),0).
fval(3,(comp_below_inv_below,(triangle,key0)),0).
fval(3,(comp_below_inv_below,(triangle,r)),0).
fval(3,(comp_below_inv_below,(key0,r)),0).
fval(3,(comp_below_inv_below,(node2,key1)),0).
fval(3,(comp_below_inv_below,(key1,square)),0).
fval(3,(comp_below_inv_below,(node1,square)),0).
fval(3,(comp_below_inv_below,(r,key0)),0).
fval(3,(comp_below_inv_below,(key1,node1)),0).
fval(3,(comp_below_inv_below,(triangle,square)),0).
fval(3,(comp_below_inv_below,(key0,square)),0).
fval(3,(comp_below_inv_below,(square,key0)),0).
fval(3,(comp_below_inv_below,(square,r)),0).
fval(3,(comp_below_inv_below,(key1,triangle)),0).
fval(3,(comp_below_inv_below,(triangle,node1)),0).
fval(3,(comp_below_inv_below,(node2,key0)),0).
fval(3,(comp_below_inv_below,(key1,node2)),0).
fval(3,(comp_below_inv_below,(node2,r)),0).
fval(3,(comp_below_inv_below,(key0,node1)),0).
fval(3,(comp_below_inv_below,(node1,triangle)),0).
fval(3,(comp_below_inv_below,(r,square)),0).
fval(3,(comp_below_inv_below,(node1,key1)),0).
fval(3,(comp_below_inv_below,(node1,node2)),0).
fval(3,(comp_below_inv_below,(key0,triangle)),0).
fval(3,(comp_below_inv_below,(triangle,node2)),0).
fval(3,(comp_below_inv_below,(triangle,key1)),0).
fval(3,(comp_below_inv_below,(r,node1)),0).
fval(3,(comp_below_inv_below,(key0,node2)),0).
fval(3,(comp_below_inv_below,(key0,key1)),0).
fval(3,(comp_below_inv_below,(node2,square)),0).
fval(3,(comp_below_inv_below,(node1,key0)),0).
fval(3,(comp_below_inv_below,(square,node1)),0).
fval(3,(comp_below_inv_below,(r,node2)),0).
fval(3,(comp_below_inv_below,(key1,key0)),0).
fval(3,(comp_below_inv_below,(r,triangle)),0).
fval(3,(comp_below_inv_below,(node2,node1)),0).
fval(3,(comp_below_inv_below,(key1,r)),0).
fval(3,(comp_below_inv_below,(r,key1)),0).
fval(3,(comp_below_inv_below,(square,triangle)),0).
fval(3,(comp_below_inv_below,(node1,r)),0).
fval(3,(comp_below_inv_below,(square,node2)),0).
fval(3,(comp_below_inv_below,(square,key1)),0).
fval(3,(er_smaller_lockedcell,(key1,)),0,1).
fval(3,(er_smaller_lockedcell,(key0,)),0,1).
fval(3,(er_smaller_lockedcell,(r,)),0,1).
fval(3,(er_smaller_lockedcell,(node1,)),0,0).
fval(3,(er_smaller_lockedcell,(triangle,)),0,0).
fval(3,(er_smaller_lockedcell,(square,)),0,0).
fval(3,(er_smaller_lockedcell,(node2,)),0,0).
fval(3,(er_smaller_lockedcell,(key1,)),1,1).
fval(3,(er_smaller_lockedcell,(key0,)),1,1).
fval(3,(er_smaller_lockedcell,(r,)),1,1).
fval(3,(er_smaller_lockedcell,(node1,)),1,0).
fval(3,(er_smaller_lockedcell,(triangle,)),1,0).
fval(3,(er_smaller_lockedcell,(square,)),1,0).
fval(3,(er_smaller_lockedcell,(node2,)),1,0).
fval(3,(er_smaller_lockedcell,(key1,)),2,1).
fval(3,(er_smaller_lockedcell,(key0,)),2,1).
fval(3,(er_smaller_lockedcell,(r,)),2,1).
fval(3,(er_smaller_lockedcell,(node1,)),2,0).
fval(3,(er_smaller_lockedcell,(triangle,)),2,0).
fval(3,(er_smaller_lockedcell,(square,)),2,0).
fval(3,(er_smaller_lockedcell,(node2,)),2,0).
fval(3,(er_smaller_lockedcell,(node1,)),3,0).
fval(3,(er_smaller_lockedcell,(triangle,)),3,0).
fval(3,(er_smaller_lockedcell,(node2,)),3,0).
fval(3,(er_smaller_lockedcell,(key1,)),3,0).
fval(3,(er_smaller_lockedcell,(r,)),3,0).
fval(3,(er_smaller_lockedcell,(key0,)),3,0).
fval(3,(er_smaller_lockedcell,(square,)),3,0).
fval(3,(er_smaller_lockedcell,(node1,)),4,0).
fval(3,(er_smaller_lockedcell,(triangle,)),4,0).
fval(3,(er_smaller_lockedcell,(node2,)),4,0).
fval(3,(er_smaller_lockedcell,(key1,)),4,0).
fval(3,(er_smaller_lockedcell,(r,)),4,0).
fval(3,(er_smaller_lockedcell,(key0,)),4,0).
fval(3,(er_smaller_lockedcell,(square,)),4,0).
fval(3,(er_smaller_lockedcell,(node1,)),5,0).
fval(3,(er_smaller_lockedcell,(triangle,)),5,0).
fval(3,(er_smaller_lockedcell,(node2,)),5,0).
fval(3,(er_smaller_lockedcell,(key1,)),5,0).
fval(3,(er_smaller_lockedcell,(r,)),5,0).
fval(3,(er_smaller_lockedcell,(key0,)),5,0).
fval(3,(er_smaller_lockedcell,(square,)),5,0).
fval(3,(er_smaller_lockedcell,(node1,)),6,0).
fval(3,(er_smaller_lockedcell,(triangle,)),6,0).
fval(3,(er_smaller_lockedcell,(node2,)),6,0).
fval(3,(er_smaller_lockedcell,(key1,)),6,0).
fval(3,(er_smaller_lockedcell,(r,)),6,0).
fval(3,(er_smaller_lockedcell,(key0,)),6,0).
fval(3,(er_smaller_lockedcell,(square,)),6,0).
fval(3,(er_smaller_lockedcell,(node1,)),7,0).
fval(3,(er_smaller_lockedcell,(triangle,)),7,0).
fval(3,(er_smaller_lockedcell,(node2,)),7,0).
fval(3,(er_smaller_lockedcell,(key1,)),7,0).
fval(3,(er_smaller_lockedcell,(r,)),7,0).
fval(3,(er_smaller_lockedcell,(key0,)),7,0).
fval(3,(er_smaller_lockedcell,(square,)),7,0).
fval(3,(er_smaller_lockedcell,(node1,)),8,0).
fval(3,(er_smaller_lockedcell,(triangle,)),8,0).
fval(3,(er_smaller_lockedcell,(node2,)),8,0).
fval(3,(er_smaller_lockedcell,(key1,)),8,0).
fval(3,(er_smaller_lockedcell,(r,)),8,0).
fval(3,(er_smaller_lockedcell,(key0,)),8,0).
fval(3,(er_smaller_lockedcell,(square,)),8,0).
fval(3,(er_smaller_lockedcell,(node1,)),9,0).
fval(3,(er_smaller_lockedcell,(triangle,)),9,0).
fval(3,(er_smaller_lockedcell,(node2,)),9,0).
fval(3,(er_smaller_lockedcell,(key1,)),9,0).
fval(3,(er_smaller_lockedcell,(r,)),9,0).
fval(3,(er_smaller_lockedcell,(key0,)),9,0).
fval(3,(er_smaller_lockedcell,(square,)),9,0).
fval(3,(er_smaller_lockedcell,(node1,)),10,0).
fval(3,(er_smaller_lockedcell,(triangle,)),10,0).
fval(3,(er_smaller_lockedcell,(node2,)),10,0).
fval(3,(er_smaller_lockedcell,(key1,)),10,0).
fval(3,(er_smaller_lockedcell,(r,)),10,0).
fval(3,(er_smaller_lockedcell,(key0,)),10,0).
fval(3,(er_smaller_lockedcell,(square,)),10,0).
fval(3,(er_smaller_lockedcell,(node1,)),11,0).
fval(3,(er_smaller_lockedcell,(triangle,)),11,0).
fval(3,(er_smaller_lockedcell,(node2,)),11,0).
fval(3,(er_smaller_lockedcell,(key1,)),11,0).
fval(3,(er_smaller_lockedcell,(r,)),11,0).
fval(3,(er_smaller_lockedcell,(key0,)),11,0).
fval(3,(er_smaller_lockedcell,(square,)),11,0).
fval(3,(er_smaller_lockedcell,(node1,)),12,0).
fval(3,(er_smaller_lockedcell,(triangle,)),12,0).
fval(3,(er_smaller_lockedcell,(node2,)),12,0).
fval(3,(er_smaller_lockedcell,(key1,)),12,0).
fval(3,(er_smaller_lockedcell,(r,)),12,0).
fval(3,(er_smaller_lockedcell,(key0,)),12,0).
fval(3,(er_smaller_lockedcell,(square,)),12,0).
fval(3,(er_smaller_lockedcell,(node1,)),13,0).
fval(3,(er_smaller_lockedcell,(triangle,)),13,0).
fval(3,(er_smaller_lockedcell,(node2,)),13,0).
fval(3,(er_smaller_lockedcell,(key1,)),13,0).
fval(3,(er_smaller_lockedcell,(r,)),13,0).
fval(3,(er_smaller_lockedcell,(key0,)),13,0).
fval(3,(er_smaller_lockedcell,(square,)),13,0).
fval(3,(er_smaller_lockedcell,(node1,)),14,0).
fval(3,(er_smaller_lockedcell,(triangle,)),14,0).
fval(3,(er_smaller_lockedcell,(node2,)),14,0).
fval(3,(er_smaller_lockedcell,(key1,)),14,0).
fval(3,(er_smaller_lockedcell,(r,)),14,0).
fval(3,(er_smaller_lockedcell,(key0,)),14,0).
fval(3,(er_smaller_lockedcell,(square,)),14,0).
fval(3,(er_smaller_lockedcell,(node1,)),15,0).
fval(3,(er_smaller_lockedcell,(triangle,)),15,0).
fval(3,(er_smaller_lockedcell,(node2,)),15,0).
fval(3,(er_smaller_lockedcell,(key1,)),15,0).
fval(3,(er_smaller_lockedcell,(r,)),15,0).
fval(3,(er_smaller_lockedcell,(key0,)),15,0).
fval(3,(er_smaller_lockedcell,(square,)),15,0).
fval(3,(er_smaller_lockedcell,(node1,)),16,0).
fval(3,(er_smaller_lockedcell,(triangle,)),16,0).
fval(3,(er_smaller_lockedcell,(node2,)),16,0).
fval(3,(er_smaller_lockedcell,(key1,)),16,0).
fval(3,(er_smaller_lockedcell,(r,)),16,0).
fval(3,(er_smaller_lockedcell,(key0,)),16,0).
fval(3,(er_smaller_lockedcell,(square,)),16,0).
fval(3,(er_smaller_lockedcell,(node1,)),17,0).
fval(3,(er_smaller_lockedcell,(triangle,)),17,0).
fval(3,(er_smaller_lockedcell,(node2,)),17,0).
fval(3,(er_smaller_lockedcell,(key1,)),17,0).
fval(3,(er_smaller_lockedcell,(r,)),17,0).
fval(3,(er_smaller_lockedcell,(key0,)),17,0).
fval(3,(er_smaller_lockedcell,(square,)),17,0).
fval(3,(er_smaller_lockedcell,(node1,)),18,0).
fval(3,(er_smaller_lockedcell,(triangle,)),18,0).
fval(3,(er_smaller_lockedcell,(node2,)),18,0).
fval(3,(er_smaller_lockedcell,(key1,)),18,0).
fval(3,(er_smaller_lockedcell,(r,)),18,0).
fval(3,(er_smaller_lockedcell,(key0,)),18,0).
fval(3,(er_smaller_lockedcell,(square,)),18,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node1,)),0,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(triangle,)),0,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node2,)),0,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key1,)),0,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key0,)),0,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(r,)),0,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(square,)),0,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node1,)),1,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(triangle,)),1,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node2,)),1,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key1,)),1,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key0,)),1,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(r,)),1,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(square,)),1,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node1,)),2,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(triangle,)),2,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node2,)),2,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key1,)),2,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key0,)),2,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(r,)),2,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(square,)),2,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node1,)),3,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(triangle,)),3,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node2,)),3,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key1,)),3,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key0,)),3,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(r,)),3,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(square,)),3,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node1,)),4,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(triangle,)),4,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node2,)),4,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key1,)),4,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key0,)),4,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(r,)),4,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(square,)),4,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node1,)),5,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(triangle,)),5,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node2,)),5,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key1,)),5,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key0,)),5,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(r,)),5,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(square,)),5,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node2,)),6,1).
fval(3,(inter_er_shape_verum_er_overlap_key,(node1,)),6,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(triangle,)),6,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key1,)),6,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key0,)),6,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(r,)),6,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(square,)),6,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node1,)),7,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(triangle,)),7,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node2,)),7,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key1,)),7,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key0,)),7,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(r,)),7,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(square,)),7,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node1,)),8,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(triangle,)),8,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node2,)),8,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key1,)),8,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key0,)),8,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(r,)),8,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(square,)),8,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node2,)),9,1).
fval(3,(inter_er_shape_verum_er_overlap_key,(node1,)),9,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(triangle,)),9,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key1,)),9,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key0,)),9,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(r,)),9,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(square,)),9,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node1,)),10,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(triangle,)),10,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node2,)),10,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key1,)),10,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key0,)),10,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(r,)),10,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(square,)),10,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node2,)),11,1).
fval(3,(inter_er_shape_verum_er_overlap_key,(node1,)),11,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(triangle,)),11,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key1,)),11,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key0,)),11,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(r,)),11,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(square,)),11,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node2,)),12,1).
fval(3,(inter_er_shape_verum_er_overlap_key,(node1,)),12,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(triangle,)),12,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key1,)),12,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key0,)),12,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(r,)),12,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(square,)),12,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node2,)),13,1).
fval(3,(inter_er_shape_verum_er_overlap_key,(node1,)),13,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(triangle,)),13,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key1,)),13,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key0,)),13,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(r,)),13,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(square,)),13,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node2,)),14,1).
fval(3,(inter_er_shape_verum_er_overlap_key,(node1,)),14,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(triangle,)),14,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key1,)),14,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key0,)),14,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(r,)),14,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(square,)),14,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node2,)),15,1).
fval(3,(inter_er_shape_verum_er_overlap_key,(node1,)),15,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(triangle,)),15,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key1,)),15,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key0,)),15,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(r,)),15,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(square,)),15,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node2,)),16,1).
fval(3,(inter_er_shape_verum_er_overlap_key,(node1,)),16,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(triangle,)),16,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key1,)),16,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key0,)),16,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(r,)),16,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(square,)),16,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node2,)),17,1).
fval(3,(inter_er_shape_verum_er_overlap_key,(node1,)),17,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(triangle,)),17,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key1,)),17,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key0,)),17,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(r,)),17,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(square,)),17,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(node2,)),18,1).
fval(3,(inter_er_shape_verum_er_overlap_key,(node1,)),18,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(triangle,)),18,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key1,)),18,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(key0,)),18,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(r,)),18,0).
fval(3,(inter_er_shape_verum_er_overlap_key,(square,)),18,0).
fval(3,(er_left_lockedcell,(node1,)),0).
fval(3,(er_left_lockedcell,(triangle,)),0).
fval(3,(er_left_lockedcell,(node2,)),0).
fval(3,(er_left_lockedcell,(key1,)),0).
fval(3,(er_left_lockedcell,(r,)),0).
fval(3,(er_left_lockedcell,(key0,)),0).
fval(3,(er_left_lockedcell,(square,)),0).
fval(3,(inter_er_overlap_robot_er_left_lockedcell,(node1,)),0).
fval(3,(inter_er_overlap_robot_er_left_lockedcell,(triangle,)),0).
fval(3,(inter_er_overlap_robot_er_left_lockedcell,(node2,)),0).
fval(3,(inter_er_overlap_robot_er_left_lockedcell,(key1,)),0).
fval(3,(inter_er_overlap_robot_er_left_lockedcell,(r,)),0).
fval(3,(inter_er_overlap_robot_er_left_lockedcell,(key0,)),0).
fval(3,(inter_er_overlap_robot_er_left_lockedcell,(square,)),0).
fval(3,(er_left_verum,(node2,)),1).
fval(3,(er_left_verum,(node1,)),0).
fval(3,(er_left_verum,(triangle,)),0).
fval(3,(er_left_verum,(key1,)),0).
fval(3,(er_left_verum,(r,)),0).
fval(3,(er_left_verum,(key0,)),0).
fval(3,(er_left_verum,(square,)),0).
fval(3,(inter_opencell_er_shape_verum,(node1,)),0,0).
fval(3,(inter_opencell_er_shape_verum,(triangle,)),0,0).
fval(3,(inter_opencell_er_shape_verum,(node2,)),0,0).
fval(3,(inter_opencell_er_shape_verum,(key1,)),0,0).
fval(3,(inter_opencell_er_shape_verum,(r,)),0,0).
fval(3,(inter_opencell_er_shape_verum,(key0,)),0,0).
fval(3,(inter_opencell_er_shape_verum,(square,)),0,0).
fval(3,(inter_opencell_er_shape_verum,(node1,)),1,0).
fval(3,(inter_opencell_er_shape_verum,(triangle,)),1,0).
fval(3,(inter_opencell_er_shape_verum,(node2,)),1,0).
fval(3,(inter_opencell_er_shape_verum,(key1,)),1,0).
fval(3,(inter_opencell_er_shape_verum,(r,)),1,0).
fval(3,(inter_opencell_er_shape_verum,(key0,)),1,0).
fval(3,(inter_opencell_er_shape_verum,(square,)),1,0).
fval(3,(inter_opencell_er_shape_verum,(node1,)),2,0).
fval(3,(inter_opencell_er_shape_verum,(triangle,)),2,0).
fval(3,(inter_opencell_er_shape_verum,(node2,)),2,0).
fval(3,(inter_opencell_er_shape_verum,(key1,)),2,0).
fval(3,(inter_opencell_er_shape_verum,(r,)),2,0).
fval(3,(inter_opencell_er_shape_verum,(key0,)),2,0).
fval(3,(inter_opencell_er_shape_verum,(square,)),2,0).
fval(3,(inter_opencell_er_shape_verum,(node2,)),3,1).
fval(3,(inter_opencell_er_shape_verum,(node1,)),3,0).
fval(3,(inter_opencell_er_shape_verum,(triangle,)),3,0).
fval(3,(inter_opencell_er_shape_verum,(key1,)),3,0).
fval(3,(inter_opencell_er_shape_verum,(r,)),3,0).
fval(3,(inter_opencell_er_shape_verum,(key0,)),3,0).
fval(3,(inter_opencell_er_shape_verum,(square,)),3,0).
fval(3,(inter_opencell_er_shape_verum,(node2,)),4,1).
fval(3,(inter_opencell_er_shape_verum,(node1,)),4,0).
fval(3,(inter_opencell_er_shape_verum,(triangle,)),4,0).
fval(3,(inter_opencell_er_shape_verum,(key1,)),4,0).
fval(3,(inter_opencell_er_shape_verum,(r,)),4,0).
fval(3,(inter_opencell_er_shape_verum,(key0,)),4,0).
fval(3,(inter_opencell_er_shape_verum,(square,)),4,0).
fval(3,(inter_opencell_er_shape_verum,(node2,)),5,1).
fval(3,(inter_opencell_er_shape_verum,(node1,)),5,0).
fval(3,(inter_opencell_er_shape_verum,(triangle,)),5,0).
fval(3,(inter_opencell_er_shape_verum,(key1,)),5,0).
fval(3,(inter_opencell_er_shape_verum,(r,)),5,0).
fval(3,(inter_opencell_er_shape_verum,(key0,)),5,0).
fval(3,(inter_opencell_er_shape_verum,(square,)),5,0).
fval(3,(inter_opencell_er_shape_verum,(node2,)),6,1).
fval(3,(inter_opencell_er_shape_verum,(node1,)),6,0).
fval(3,(inter_opencell_er_shape_verum,(triangle,)),6,0).
fval(3,(inter_opencell_er_shape_verum,(key1,)),6,0).
fval(3,(inter_opencell_er_shape_verum,(r,)),6,0).
fval(3,(inter_opencell_er_shape_verum,(key0,)),6,0).
fval(3,(inter_opencell_er_shape_verum,(square,)),6,0).
fval(3,(inter_opencell_er_shape_verum,(node2,)),7,1).
fval(3,(inter_opencell_er_shape_verum,(node1,)),7,0).
fval(3,(inter_opencell_er_shape_verum,(triangle,)),7,0).
fval(3,(inter_opencell_er_shape_verum,(key1,)),7,0).
fval(3,(inter_opencell_er_shape_verum,(r,)),7,0).
fval(3,(inter_opencell_er_shape_verum,(key0,)),7,0).
fval(3,(inter_opencell_er_shape_verum,(square,)),7,0).
fval(3,(inter_opencell_er_shape_verum,(node2,)),8,1).
fval(3,(inter_opencell_er_shape_verum,(node1,)),8,0).
fval(3,(inter_opencell_er_shape_verum,(triangle,)),8,0).
fval(3,(inter_opencell_er_shape_verum,(key1,)),8,0).
fval(3,(inter_opencell_er_shape_verum,(r,)),8,0).
fval(3,(inter_opencell_er_shape_verum,(key0,)),8,0).
fval(3,(inter_opencell_er_shape_verum,(square,)),8,0).
fval(3,(inter_opencell_er_shape_verum,(node2,)),9,1).
fval(3,(inter_opencell_er_shape_verum,(node1,)),9,0).
fval(3,(inter_opencell_er_shape_verum,(triangle,)),9,0).
fval(3,(inter_opencell_er_shape_verum,(key1,)),9,0).
fval(3,(inter_opencell_er_shape_verum,(r,)),9,0).
fval(3,(inter_opencell_er_shape_verum,(key0,)),9,0).
fval(3,(inter_opencell_er_shape_verum,(square,)),9,0).
fval(3,(inter_opencell_er_shape_verum,(node2,)),10,1).
fval(3,(inter_opencell_er_shape_verum,(node1,)),10,0).
fval(3,(inter_opencell_er_shape_verum,(triangle,)),10,0).
fval(3,(inter_opencell_er_shape_verum,(key1,)),10,0).
fval(3,(inter_opencell_er_shape_verum,(r,)),10,0).
fval(3,(inter_opencell_er_shape_verum,(key0,)),10,0).
fval(3,(inter_opencell_er_shape_verum,(square,)),10,0).
fval(3,(inter_opencell_er_shape_verum,(node2,)),11,1).
fval(3,(inter_opencell_er_shape_verum,(node1,)),11,0).
fval(3,(inter_opencell_er_shape_verum,(triangle,)),11,0).
fval(3,(inter_opencell_er_shape_verum,(key1,)),11,0).
fval(3,(inter_opencell_er_shape_verum,(r,)),11,0).
fval(3,(inter_opencell_er_shape_verum,(key0,)),11,0).
fval(3,(inter_opencell_er_shape_verum,(square,)),11,0).
fval(3,(inter_opencell_er_shape_verum,(node2,)),12,1).
fval(3,(inter_opencell_er_shape_verum,(node1,)),12,0).
fval(3,(inter_opencell_er_shape_verum,(triangle,)),12,0).
fval(3,(inter_opencell_er_shape_verum,(key1,)),12,0).
fval(3,(inter_opencell_er_shape_verum,(r,)),12,0).
fval(3,(inter_opencell_er_shape_verum,(key0,)),12,0).
fval(3,(inter_opencell_er_shape_verum,(square,)),12,0).
fval(3,(inter_opencell_er_shape_verum,(node2,)),13,1).
fval(3,(inter_opencell_er_shape_verum,(node1,)),13,0).
fval(3,(inter_opencell_er_shape_verum,(triangle,)),13,0).
fval(3,(inter_opencell_er_shape_verum,(key1,)),13,0).
fval(3,(inter_opencell_er_shape_verum,(r,)),13,0).
fval(3,(inter_opencell_er_shape_verum,(key0,)),13,0).
fval(3,(inter_opencell_er_shape_verum,(square,)),13,0).
fval(3,(inter_opencell_er_shape_verum,(node2,)),14,1).
fval(3,(inter_opencell_er_shape_verum,(node1,)),14,0).
fval(3,(inter_opencell_er_shape_verum,(triangle,)),14,0).
fval(3,(inter_opencell_er_shape_verum,(key1,)),14,0).
fval(3,(inter_opencell_er_shape_verum,(r,)),14,0).
fval(3,(inter_opencell_er_shape_verum,(key0,)),14,0).
fval(3,(inter_opencell_er_shape_verum,(square,)),14,0).
fval(3,(inter_opencell_er_shape_verum,(node2,)),15,1).
fval(3,(inter_opencell_er_shape_verum,(node1,)),15,0).
fval(3,(inter_opencell_er_shape_verum,(triangle,)),15,0).
fval(3,(inter_opencell_er_shape_verum,(key1,)),15,0).
fval(3,(inter_opencell_er_shape_verum,(r,)),15,0).
fval(3,(inter_opencell_er_shape_verum,(key0,)),15,0).
fval(3,(inter_opencell_er_shape_verum,(square,)),15,0).
fval(3,(inter_opencell_er_shape_verum,(node2,)),16,1).
fval(3,(inter_opencell_er_shape_verum,(node1,)),16,0).
fval(3,(inter_opencell_er_shape_verum,(triangle,)),16,0).
fval(3,(inter_opencell_er_shape_verum,(key1,)),16,0).
fval(3,(inter_opencell_er_shape_verum,(r,)),16,0).
fval(3,(inter_opencell_er_shape_verum,(key0,)),16,0).
fval(3,(inter_opencell_er_shape_verum,(square,)),16,0).
fval(3,(inter_opencell_er_shape_verum,(node2,)),17,1).
fval(3,(inter_opencell_er_shape_verum,(node1,)),17,0).
fval(3,(inter_opencell_er_shape_verum,(triangle,)),17,0).
fval(3,(inter_opencell_er_shape_verum,(key1,)),17,0).
fval(3,(inter_opencell_er_shape_verum,(r,)),17,0).
fval(3,(inter_opencell_er_shape_verum,(key0,)),17,0).
fval(3,(inter_opencell_er_shape_verum,(square,)),17,0).
fval(3,(inter_opencell_er_shape_verum,(node2,)),18,1).
fval(3,(inter_opencell_er_shape_verum,(node1,)),18,0).
fval(3,(inter_opencell_er_shape_verum,(triangle,)),18,0).
fval(3,(inter_opencell_er_shape_verum,(key1,)),18,0).
fval(3,(inter_opencell_er_shape_verum,(r,)),18,0).
fval(3,(inter_opencell_er_shape_verum,(key0,)),18,0).
fval(3,(inter_opencell_er_shape_verum,(square,)),18,0).
fval(3,(inv_below,(node2,triangle)),0).
fval(3,(inv_below,(triangle,key0)),0).
fval(3,(inv_below,(triangle,r)),0).
fval(3,(inv_below,(node2,key1)),0).
fval(3,(inv_below,(key0,r)),0).
fval(3,(inv_below,(key1,square)),0).
fval(3,(inv_below,(node1,square)),0).
fval(3,(inv_below,(r,key0)),0).
fval(3,(inv_below,(key1,node1)),0).
fval(3,(inv_below,(triangle,square)),0).
fval(3,(inv_below,(key0,square)),0).
fval(3,(inv_below,(square,key0)),0).
fval(3,(inv_below,(square,r)),0).
fval(3,(inv_below,(key1,triangle)),0).
fval(3,(inv_below,(triangle,node1)),0).
fval(3,(inv_below,(node2,key0)),0).
fval(3,(inv_below,(key1,node2)),0).
fval(3,(inv_below,(node2,r)),0).
fval(3,(inv_below,(key0,node1)),0).
fval(3,(inv_below,(node1,triangle)),0).
fval(3,(inv_below,(r,square)),0).
fval(3,(inv_below,(node1,key1)),0).
fval(3,(inv_below,(node1,node2)),0).
fval(3,(inv_below,(key0,triangle)),0).
fval(3,(inv_below,(triangle,node2)),0).
fval(3,(inv_below,(triangle,key1)),0).
fval(3,(inv_below,(r,node1)),0).
fval(3,(inv_below,(key0,node2)),0).
fval(3,(inv_below,(key0,key1)),0).
fval(3,(inv_below,(node2,square)),0).
fval(3,(inv_below,(node1,key0)),0).
fval(3,(inv_below,(square,node1)),0).
fval(3,(inv_below,(r,node2)),0).
fval(3,(inv_below,(node2,node1)),0).
fval(3,(inv_below,(r,triangle)),0).
fval(3,(inv_below,(key1,r)),0).
fval(3,(inv_below,(key1,key0)),0).
fval(3,(inv_below,(r,key1)),0).
fval(3,(inv_below,(square,triangle)),0).
fval(3,(inv_below,(node1,r)),0).
fval(3,(inv_below,(square,node2)),0).
fval(3,(inv_below,(square,key1)),0).
fval(3,(comp_shape_inv_shape,(node2,key1)),1).
fval(3,(comp_shape_inv_shape,(key1,node2)),1).
fval(3,(comp_shape_inv_shape,(node2,triangle)),0).
fval(3,(comp_shape_inv_shape,(key0,r)),0).
fval(3,(comp_shape_inv_shape,(triangle,key0)),0).
fval(3,(comp_shape_inv_shape,(triangle,r)),0).
fval(3,(comp_shape_inv_shape,(key1,square)),0).
fval(3,(comp_shape_inv_shape,(node1,square)),0).
fval(3,(comp_shape_inv_shape,(r,key0)),0).
fval(3,(comp_shape_inv_shape,(key1,node1)),0).
fval(3,(comp_shape_inv_shape,(triangle,square)),0).
fval(3,(comp_shape_inv_shape,(key0,square)),0).
fval(3,(comp_shape_inv_shape,(square,r)),0).
fval(3,(comp_shape_inv_shape,(square,key0)),0).
fval(3,(comp_shape_inv_shape,(key1,triangle)),0).
fval(3,(comp_shape_inv_shape,(triangle,node1)),0).
fval(3,(comp_shape_inv_shape,(node2,key0)),0).
fval(3,(comp_shape_inv_shape,(node2,r)),0).
fval(3,(comp_shape_inv_shape,(key0,node1)),0).
fval(3,(comp_shape_inv_shape,(node1,triangle)),0).
fval(3,(comp_shape_inv_shape,(r,square)),0).
fval(3,(comp_shape_inv_shape,(node1,key1)),0).
fval(3,(comp_shape_inv_shape,(node1,node2)),0).
fval(3,(comp_shape_inv_shape,(key0,triangle)),0).
fval(3,(comp_shape_inv_shape,(key0,node2)),0).
fval(3,(comp_shape_inv_shape,(triangle,node2)),0).
fval(3,(comp_shape_inv_shape,(triangle,key1)),0).
fval(3,(comp_shape_inv_shape,(r,node1)),0).
fval(3,(comp_shape_inv_shape,(key0,key1)),0).
fval(3,(comp_shape_inv_shape,(node2,square)),0).
fval(3,(comp_shape_inv_shape,(square,node1)),0).
fval(3,(comp_shape_inv_shape,(r,node2)),0).
fval(3,(comp_shape_inv_shape,(key1,r)),0).
fval(3,(comp_shape_inv_shape,(key1,key0)),0).
fval(3,(comp_shape_inv_shape,(r,triangle)),0).
fval(3,(comp_shape_inv_shape,(node2,node1)),0).
fval(3,(comp_shape_inv_shape,(r,key1)),0).
fval(3,(comp_shape_inv_shape,(square,triangle)),0).
fval(3,(comp_shape_inv_shape,(node1,key0)),0).
fval(3,(comp_shape_inv_shape,(square,node2)),0).
fval(3,(comp_shape_inv_shape,(square,key1)),0).
fval(3,(comp_shape_inv_shape,(node1,r)),0).
fval(3,(comp_left_shape,(node2,triangle)),0).
fval(3,(comp_left_shape,(triangle,r)),0).
fval(3,(comp_left_shape,(key0,r)),0).
fval(3,(comp_left_shape,(node2,key1)),0).
fval(3,(comp_left_shape,(triangle,key0)),0).
fval(3,(comp_left_shape,(key1,square)),0).
fval(3,(comp_left_shape,(node1,square)),0).
fval(3,(comp_left_shape,(r,key0)),0).
fval(3,(comp_left_shape,(key1,node1)),0).
fval(3,(comp_left_shape,(triangle,square)),0).
fval(3,(comp_left_shape,(key0,square)),0).
fval(3,(comp_left_shape,(square,r)),0).
fval(3,(comp_left_shape,(square,key0)),0).
fval(3,(comp_left_shape,(key1,triangle)),0).
fval(3,(comp_left_shape,(triangle,node1)),0).
fval(3,(comp_left_shape,(node2,key0)),0).
fval(3,(comp_left_shape,(key1,node2)),0).
fval(3,(comp_left_shape,(node2,r)),0).
fval(3,(comp_left_shape,(key0,node1)),0).
fval(3,(comp_left_shape,(node1,triangle)),0).
fval(3,(comp_left_shape,(node1,node2)),0).
fval(3,(comp_left_shape,(r,square)),0).
fval(3,(comp_left_shape,(node1,key1)),0).
fval(3,(comp_left_shape,(key0,triangle)),0).
fval(3,(comp_left_shape,(key0,node2)),0).
fval(3,(comp_left_shape,(r,node1)),0).
fval(3,(comp_left_shape,(triangle,node2)),0).
fval(3,(comp_left_shape,(triangle,key1)),0).
fval(3,(comp_left_shape,(key0,key1)),0).
fval(3,(comp_left_shape,(node1,key0)),0).
fval(3,(comp_left_shape,(node2,square)),0).
fval(3,(comp_left_shape,(square,node1)),0).
fval(3,(comp_left_shape,(r,node2)),0).
fval(3,(comp_left_shape,(node2,node1)),0).
fval(3,(comp_left_shape,(key1,r)),0).
fval(3,(comp_left_shape,(key1,key0)),0).
fval(3,(comp_left_shape,(r,triangle)),0).
fval(3,(comp_left_shape,(r,key1)),0).
fval(3,(comp_left_shape,(square,triangle)),0).
fval(3,(comp_left_shape,(node1,r)),0).
fval(3,(comp_left_shape,(square,node2)),0).
fval(3,(comp_left_shape,(square,key1)),0).
fval(3,(subset_opencell_er_overlap_key,(0,)),0,1).
fval(3,(subset_opencell_er_overlap_key,(0,)),1,1).
fval(3,(subset_opencell_er_overlap_key,(0,)),2,1).
fval(3,(subset_opencell_er_overlap_key,(0,)),3,0).
fval(3,(subset_opencell_er_overlap_key,(0,)),4,0).
fval(3,(subset_opencell_er_overlap_key,(0,)),5,0).
fval(3,(subset_opencell_er_overlap_key,(0,)),6,1).
fval(3,(subset_opencell_er_overlap_key,(0,)),7,0).
fval(3,(subset_opencell_er_overlap_key,(0,)),8,0).
fval(3,(subset_opencell_er_overlap_key,(0,)),9,1).
fval(3,(subset_opencell_er_overlap_key,(0,)),10,0).
fval(3,(subset_opencell_er_overlap_key,(0,)),11,0).
fval(3,(subset_opencell_er_overlap_key,(0,)),12,1).
fval(3,(subset_opencell_er_overlap_key,(0,)),13,0).
fval(3,(subset_opencell_er_overlap_key,(0,)),14,1).
fval(3,(subset_opencell_er_overlap_key,(0,)),15,0).
fval(3,(subset_opencell_er_overlap_key,(0,)),16,0).
fval(3,(subset_opencell_er_overlap_key,(0,)),17,0).
fval(3,(subset_opencell_er_overlap_key,(0,)),18,0).
fval(3,(inter_opencell_er_overlap_verum,(node1,)),0,1).
fval(3,(inter_opencell_er_overlap_verum,(triangle,)),0,0).
fval(3,(inter_opencell_er_overlap_verum,(node2,)),0,0).
fval(3,(inter_opencell_er_overlap_verum,(key1,)),0,0).
fval(3,(inter_opencell_er_overlap_verum,(key0,)),0,0).
fval(3,(inter_opencell_er_overlap_verum,(r,)),0,0).
fval(3,(inter_opencell_er_overlap_verum,(square,)),0,0).
fval(3,(inter_opencell_er_overlap_verum,(node1,)),1,1).
fval(3,(inter_opencell_er_overlap_verum,(triangle,)),1,0).
fval(3,(inter_opencell_er_overlap_verum,(node2,)),1,0).
fval(3,(inter_opencell_er_overlap_verum,(key1,)),1,0).
fval(3,(inter_opencell_er_overlap_verum,(key0,)),1,0).
fval(3,(inter_opencell_er_overlap_verum,(r,)),1,0).
fval(3,(inter_opencell_er_overlap_verum,(square,)),1,0).
fval(3,(inter_opencell_er_overlap_verum,(node1,)),2,1).
fval(3,(inter_opencell_er_overlap_verum,(triangle,)),2,0).
fval(3,(inter_opencell_er_overlap_verum,(node2,)),2,0).
fval(3,(inter_opencell_er_overlap_verum,(key1,)),2,0).
fval(3,(inter_opencell_er_overlap_verum,(key0,)),2,0).
fval(3,(inter_opencell_er_overlap_verum,(r,)),2,0).
fval(3,(inter_opencell_er_overlap_verum,(square,)),2,0).
fval(3,(inter_opencell_er_overlap_verum,(node1,)),3,1).
fval(3,(inter_opencell_er_overlap_verum,(triangle,)),3,0).
fval(3,(inter_opencell_er_overlap_verum,(node2,)),3,0).
fval(3,(inter_opencell_er_overlap_verum,(key1,)),3,0).
fval(3,(inter_opencell_er_overlap_verum,(key0,)),3,0).
fval(3,(inter_opencell_er_overlap_verum,(r,)),3,0).
fval(3,(inter_opencell_er_overlap_verum,(square,)),3,0).
fval(3,(inter_opencell_er_overlap_verum,(node1,)),4,1).
fval(3,(inter_opencell_er_overlap_verum,(node2,)),4,1).
fval(3,(inter_opencell_er_overlap_verum,(triangle,)),4,0).
fval(3,(inter_opencell_er_overlap_verum,(key1,)),4,0).
fval(3,(inter_opencell_er_overlap_verum,(key0,)),4,0).
fval(3,(inter_opencell_er_overlap_verum,(r,)),4,0).
fval(3,(inter_opencell_er_overlap_verum,(square,)),4,0).
fval(3,(inter_opencell_er_overlap_verum,(node1,)),5,1).
fval(3,(inter_opencell_er_overlap_verum,(triangle,)),5,0).
fval(3,(inter_opencell_er_overlap_verum,(node2,)),5,0).
fval(3,(inter_opencell_er_overlap_verum,(key1,)),5,0).
fval(3,(inter_opencell_er_overlap_verum,(key0,)),5,0).
fval(3,(inter_opencell_er_overlap_verum,(r,)),5,0).
fval(3,(inter_opencell_er_overlap_verum,(square,)),5,0).
fval(3,(inter_opencell_er_overlap_verum,(node1,)),6,1).
fval(3,(inter_opencell_er_overlap_verum,(node2,)),6,1).
fval(3,(inter_opencell_er_overlap_verum,(triangle,)),6,0).
fval(3,(inter_opencell_er_overlap_verum,(key1,)),6,0).
fval(3,(inter_opencell_er_overlap_verum,(key0,)),6,0).
fval(3,(inter_opencell_er_overlap_verum,(r,)),6,0).
fval(3,(inter_opencell_er_overlap_verum,(square,)),6,0).
fval(3,(inter_opencell_er_overlap_verum,(node1,)),7,1).
fval(3,(inter_opencell_er_overlap_verum,(node2,)),7,1).
fval(3,(inter_opencell_er_overlap_verum,(triangle,)),7,0).
fval(3,(inter_opencell_er_overlap_verum,(key1,)),7,0).
fval(3,(inter_opencell_er_overlap_verum,(key0,)),7,0).
fval(3,(inter_opencell_er_overlap_verum,(r,)),7,0).
fval(3,(inter_opencell_er_overlap_verum,(square,)),7,0).
fval(3,(inter_opencell_er_overlap_verum,(node1,)),8,1).
fval(3,(inter_opencell_er_overlap_verum,(triangle,)),8,0).
fval(3,(inter_opencell_er_overlap_verum,(node2,)),8,0).
fval(3,(inter_opencell_er_overlap_verum,(key1,)),8,0).
fval(3,(inter_opencell_er_overlap_verum,(key0,)),8,0).
fval(3,(inter_opencell_er_overlap_verum,(r,)),8,0).
fval(3,(inter_opencell_er_overlap_verum,(square,)),8,0).
fval(3,(inter_opencell_er_overlap_verum,(node1,)),9,1).
fval(3,(inter_opencell_er_overlap_verum,(node2,)),9,1).
fval(3,(inter_opencell_er_overlap_verum,(triangle,)),9,0).
fval(3,(inter_opencell_er_overlap_verum,(key1,)),9,0).
fval(3,(inter_opencell_er_overlap_verum,(key0,)),9,0).
fval(3,(inter_opencell_er_overlap_verum,(r,)),9,0).
fval(3,(inter_opencell_er_overlap_verum,(square,)),9,0).
fval(3,(inter_opencell_er_overlap_verum,(node1,)),10,1).
fval(3,(inter_opencell_er_overlap_verum,(node2,)),10,1).
fval(3,(inter_opencell_er_overlap_verum,(triangle,)),10,0).
fval(3,(inter_opencell_er_overlap_verum,(key1,)),10,0).
fval(3,(inter_opencell_er_overlap_verum,(key0,)),10,0).
fval(3,(inter_opencell_er_overlap_verum,(r,)),10,0).
fval(3,(inter_opencell_er_overlap_verum,(square,)),10,0).
fval(3,(inter_opencell_er_overlap_verum,(node1,)),11,1).
fval(3,(inter_opencell_er_overlap_verum,(node2,)),11,1).
fval(3,(inter_opencell_er_overlap_verum,(triangle,)),11,0).
fval(3,(inter_opencell_er_overlap_verum,(key1,)),11,0).
fval(3,(inter_opencell_er_overlap_verum,(key0,)),11,0).
fval(3,(inter_opencell_er_overlap_verum,(r,)),11,0).
fval(3,(inter_opencell_er_overlap_verum,(square,)),11,0).
fval(3,(inter_opencell_er_overlap_verum,(node1,)),12,1).
fval(3,(inter_opencell_er_overlap_verum,(node2,)),12,1).
fval(3,(inter_opencell_er_overlap_verum,(triangle,)),12,0).
fval(3,(inter_opencell_er_overlap_verum,(key1,)),12,0).
fval(3,(inter_opencell_er_overlap_verum,(key0,)),12,0).
fval(3,(inter_opencell_er_overlap_verum,(r,)),12,0).
fval(3,(inter_opencell_er_overlap_verum,(square,)),12,0).
fval(3,(inter_opencell_er_overlap_verum,(node2,)),13,1).
fval(3,(inter_opencell_er_overlap_verum,(node1,)),13,0).
fval(3,(inter_opencell_er_overlap_verum,(triangle,)),13,0).
fval(3,(inter_opencell_er_overlap_verum,(key1,)),13,0).
fval(3,(inter_opencell_er_overlap_verum,(r,)),13,0).
fval(3,(inter_opencell_er_overlap_verum,(key0,)),13,0).
fval(3,(inter_opencell_er_overlap_verum,(square,)),13,0).
fval(3,(inter_opencell_er_overlap_verum,(node1,)),14,1).
fval(3,(inter_opencell_er_overlap_verum,(node2,)),14,1).
fval(3,(inter_opencell_er_overlap_verum,(triangle,)),14,0).
fval(3,(inter_opencell_er_overlap_verum,(key1,)),14,0).
fval(3,(inter_opencell_er_overlap_verum,(key0,)),14,0).
fval(3,(inter_opencell_er_overlap_verum,(r,)),14,0).
fval(3,(inter_opencell_er_overlap_verum,(square,)),14,0).
fval(3,(inter_opencell_er_overlap_verum,(node2,)),15,1).
fval(3,(inter_opencell_er_overlap_verum,(node1,)),15,0).
fval(3,(inter_opencell_er_overlap_verum,(triangle,)),15,0).
fval(3,(inter_opencell_er_overlap_verum,(key1,)),15,0).
fval(3,(inter_opencell_er_overlap_verum,(r,)),15,0).
fval(3,(inter_opencell_er_overlap_verum,(key0,)),15,0).
fval(3,(inter_opencell_er_overlap_verum,(square,)),15,0).
fval(3,(inter_opencell_er_overlap_verum,(node1,)),16,1).
fval(3,(inter_opencell_er_overlap_verum,(node2,)),16,1).
fval(3,(inter_opencell_er_overlap_verum,(triangle,)),16,0).
fval(3,(inter_opencell_er_overlap_verum,(key1,)),16,0).
fval(3,(inter_opencell_er_overlap_verum,(key0,)),16,0).
fval(3,(inter_opencell_er_overlap_verum,(r,)),16,0).
fval(3,(inter_opencell_er_overlap_verum,(square,)),16,0).
fval(3,(inter_opencell_er_overlap_verum,(node1,)),17,1).
fval(3,(inter_opencell_er_overlap_verum,(node2,)),17,1).
fval(3,(inter_opencell_er_overlap_verum,(triangle,)),17,0).
fval(3,(inter_opencell_er_overlap_verum,(key1,)),17,0).
fval(3,(inter_opencell_er_overlap_verum,(key0,)),17,0).
fval(3,(inter_opencell_er_overlap_verum,(r,)),17,0).
fval(3,(inter_opencell_er_overlap_verum,(square,)),17,0).
fval(3,(inter_opencell_er_overlap_verum,(node2,)),18,1).
fval(3,(inter_opencell_er_overlap_verum,(node1,)),18,0).
fval(3,(inter_opencell_er_overlap_verum,(triangle,)),18,0).
fval(3,(inter_opencell_er_overlap_verum,(key1,)),18,0).
fval(3,(inter_opencell_er_overlap_verum,(r,)),18,0).
fval(3,(inter_opencell_er_overlap_verum,(key0,)),18,0).
fval(3,(inter_opencell_er_overlap_verum,(square,)),18,0).
fval(3,(inter_er_below_verum_er_overlap_key,(node1,)),0).
fval(3,(inter_er_below_verum_er_overlap_key,(triangle,)),0).
fval(3,(inter_er_below_verum_er_overlap_key,(node2,)),0).
fval(3,(inter_er_below_verum_er_overlap_key,(key1,)),0).
fval(3,(inter_er_below_verum_er_overlap_key,(key0,)),0).
fval(3,(inter_er_below_verum_er_overlap_key,(r,)),0).
fval(3,(inter_er_below_verum_er_overlap_key,(square,)),0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key1,)),0,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key0,)),0,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node1,)),0,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(triangle,)),0,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node2,)),0,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(r,)),0,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(square,)),0,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key1,)),1,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node1,)),1,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(triangle,)),1,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node2,)),1,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(r,)),1,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key0,)),1,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(square,)),1,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key0,)),2,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node1,)),2,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(triangle,)),2,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node2,)),2,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key1,)),2,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(r,)),2,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(square,)),2,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key0,)),3,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node1,)),3,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(triangle,)),3,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node2,)),3,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key1,)),3,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(r,)),3,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(square,)),3,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key0,)),4,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node2,)),4,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node1,)),4,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(triangle,)),4,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key1,)),4,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(r,)),4,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(square,)),4,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key1,)),5,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key0,)),5,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node1,)),5,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(triangle,)),5,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node2,)),5,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(r,)),5,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(square,)),5,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key1,)),6,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key0,)),6,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node2,)),6,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node1,)),6,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(r,)),6,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(triangle,)),6,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(square,)),6,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key1,)),7,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key0,)),7,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node2,)),7,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node1,)),7,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(r,)),7,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(triangle,)),7,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(square,)),7,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key1,)),8,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node1,)),8,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(triangle,)),8,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node2,)),8,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(r,)),8,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key0,)),8,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(square,)),8,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key1,)),9,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key0,)),9,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node2,)),9,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node1,)),9,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(r,)),9,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(triangle,)),9,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(square,)),9,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key1,)),10,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node2,)),10,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node1,)),10,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(triangle,)),10,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(r,)),10,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key0,)),10,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(square,)),10,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key1,)),11,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node2,)),11,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node1,)),11,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(triangle,)),11,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(r,)),11,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key0,)),11,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(square,)),11,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key1,)),12,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key0,)),12,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node2,)),12,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node1,)),12,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(r,)),12,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(triangle,)),12,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(square,)),12,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key1,)),13,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node2,)),13,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node1,)),13,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(triangle,)),13,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(r,)),13,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key0,)),13,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(square,)),13,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key1,)),14,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key0,)),14,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node2,)),14,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node1,)),14,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(r,)),14,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(triangle,)),14,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(square,)),14,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key1,)),15,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key0,)),15,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node2,)),15,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node1,)),15,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(r,)),15,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(triangle,)),15,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(square,)),15,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key0,)),16,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node2,)),16,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node1,)),16,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(triangle,)),16,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key1,)),16,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(r,)),16,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(square,)),16,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key1,)),17,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key0,)),17,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node2,)),17,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node1,)),17,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(r,)),17,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(triangle,)),17,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(square,)),17,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key0,)),18,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node2,)),18,1).
fval(3,(inter_er_overlap_verum_er_shape_verum,(node1,)),18,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(triangle,)),18,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(key1,)),18,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(r,)),18,0).
fval(3,(inter_er_overlap_verum_er_shape_verum,(square,)),18,0).
fval(3,(inter_er_overlap_verum_er_below_opencell,(node1,)),0).
fval(3,(inter_er_overlap_verum_er_below_opencell,(triangle,)),0).
fval(3,(inter_er_overlap_verum_er_below_opencell,(node2,)),0).
fval(3,(inter_er_overlap_verum_er_below_opencell,(key1,)),0).
fval(3,(inter_er_overlap_verum_er_below_opencell,(r,)),0).
fval(3,(inter_er_overlap_verum_er_below_opencell,(key0,)),0).
fval(3,(inter_er_overlap_verum_er_below_opencell,(square,)),0).
fval(3,(comp_smaller_overlap,(key0,r)),0,1).
fval(3,(comp_smaller_overlap,(key1,key0)),0,1).
fval(3,(comp_smaller_overlap,(key1,r)),0,1).
fval(3,(comp_smaller_overlap,(r,key1)),0,1).
fval(3,(comp_smaller_overlap,(key0,key1)),0,1).
fval(3,(comp_smaller_overlap,(r,key0)),0,1).
fval(3,(comp_smaller_overlap,(node2,triangle)),0,0).
fval(3,(comp_smaller_overlap,(triangle,key0)),0,0).
fval(3,(comp_smaller_overlap,(triangle,r)),0,0).
fval(3,(comp_smaller_overlap,(node2,key1)),0,0).
fval(3,(comp_smaller_overlap,(key1,square)),0,0).
fval(3,(comp_smaller_overlap,(node1,square)),0,0).
fval(3,(comp_smaller_overlap,(key1,node1)),0,0).
fval(3,(comp_smaller_overlap,(triangle,square)),0,0).
fval(3,(comp_smaller_overlap,(key0,square)),0,0).
fval(3,(comp_smaller_overlap,(square,r)),0,0).
fval(3,(comp_smaller_overlap,(square,key0)),0,0).
fval(3,(comp_smaller_overlap,(key1,triangle)),0,0).
fval(3,(comp_smaller_overlap,(triangle,node1)),0,0).
fval(3,(comp_smaller_overlap,(node2,key0)),0,0).
fval(3,(comp_smaller_overlap,(key1,node2)),0,0).
fval(3,(comp_smaller_overlap,(node2,r)),0,0).
fval(3,(comp_smaller_overlap,(key0,node1)),0,0).
fval(3,(comp_smaller_overlap,(node1,triangle)),0,0).
fval(3,(comp_smaller_overlap,(node1,node2)),0,0).
fval(3,(comp_smaller_overlap,(r,square)),0,0).
fval(3,(comp_smaller_overlap,(node1,key1)),0,0).
fval(3,(comp_smaller_overlap,(key0,triangle)),0,0).
fval(3,(comp_smaller_overlap,(key0,node2)),0,0).
fval(3,(comp_smaller_overlap,(triangle,node2)),0,0).
fval(3,(comp_smaller_overlap,(triangle,key1)),0,0).
fval(3,(comp_smaller_overlap,(r,node1)),0,0).
fval(3,(comp_smaller_overlap,(node1,key0)),0,0).
fval(3,(comp_smaller_overlap,(node2,square)),0,0).
fval(3,(comp_smaller_overlap,(square,node1)),0,0).
fval(3,(comp_smaller_overlap,(r,node2)),0,0).
fval(3,(comp_smaller_overlap,(node2,node1)),0,0).
fval(3,(comp_smaller_overlap,(r,triangle)),0,0).
fval(3,(comp_smaller_overlap,(square,triangle)),0,0).
fval(3,(comp_smaller_overlap,(node1,r)),0,0).
fval(3,(comp_smaller_overlap,(square,node2)),0,0).
fval(3,(comp_smaller_overlap,(square,key1)),0,0).
fval(3,(comp_smaller_overlap,(r,key1)),1,1).
fval(3,(comp_smaller_overlap,(key0,r)),1,1).
fval(3,(comp_smaller_overlap,(key0,key1)),1,1).
fval(3,(comp_smaller_overlap,(key1,r)),1,1).
fval(3,(comp_smaller_overlap,(node2,triangle)),1,0).
fval(3,(comp_smaller_overlap,(triangle,key0)),1,0).
fval(3,(comp_smaller_overlap,(node2,key1)),1,0).
fval(3,(comp_smaller_overlap,(triangle,r)),1,0).
fval(3,(comp_smaller_overlap,(key1,square)),1,0).
fval(3,(comp_smaller_overlap,(node1,square)),1,0).
fval(3,(comp_smaller_overlap,(r,key0)),1,0).
fval(3,(comp_smaller_overlap,(key1,node1)),1,0).
fval(3,(comp_smaller_overlap,(triangle,square)),1,0).
fval(3,(comp_smaller_overlap,(key0,square)),1,0).
fval(3,(comp_smaller_overlap,(square,r)),1,0).
fval(3,(comp_smaller_overlap,(square,key0)),1,0).
fval(3,(comp_smaller_overlap,(key1,triangle)),1,0).
fval(3,(comp_smaller_overlap,(triangle,node1)),1,0).
fval(3,(comp_smaller_overlap,(node2,key0)),1,0).
fval(3,(comp_smaller_overlap,(key1,node2)),1,0).
fval(3,(comp_smaller_overlap,(node2,r)),1,0).
fval(3,(comp_smaller_overlap,(key0,node1)),1,0).
fval(3,(comp_smaller_overlap,(node1,triangle)),1,0).
fval(3,(comp_smaller_overlap,(node1,node2)),1,0).
fval(3,(comp_smaller_overlap,(r,square)),1,0).
fval(3,(comp_smaller_overlap,(node1,key1)),1,0).
fval(3,(comp_smaller_overlap,(key0,triangle)),1,0).
fval(3,(comp_smaller_overlap,(key0,node2)),1,0).
fval(3,(comp_smaller_overlap,(triangle,node2)),1,0).
fval(3,(comp_smaller_overlap,(triangle,key1)),1,0).
fval(3,(comp_smaller_overlap,(r,node1)),1,0).
fval(3,(comp_smaller_overlap,(node1,key0)),1,0).
fval(3,(comp_smaller_overlap,(node2,square)),1,0).
fval(3,(comp_smaller_overlap,(square,node1)),1,0).
fval(3,(comp_smaller_overlap,(r,node2)),1,0).
fval(3,(comp_smaller_overlap,(node2,node1)),1,0).
fval(3,(comp_smaller_overlap,(key1,key0)),1,0).
fval(3,(comp_smaller_overlap,(r,triangle)),1,0).
fval(3,(comp_smaller_overlap,(square,triangle)),1,0).
fval(3,(comp_smaller_overlap,(node1,r)),1,0).
fval(3,(comp_smaller_overlap,(square,node2)),1,0).
fval(3,(comp_smaller_overlap,(square,key1)),1,0).
fval(3,(comp_smaller_overlap,(key0,r)),2,1).
fval(3,(comp_smaller_overlap,(key1,r)),2,1).
fval(3,(comp_smaller_overlap,(key1,key0)),2,1).
fval(3,(comp_smaller_overlap,(r,key0)),2,1).
fval(3,(comp_smaller_overlap,(node2,triangle)),2,0).
fval(3,(comp_smaller_overlap,(triangle,key0)),2,0).
fval(3,(comp_smaller_overlap,(triangle,r)),2,0).
fval(3,(comp_smaller_overlap,(node2,key1)),2,0).
fval(3,(comp_smaller_overlap,(key1,square)),2,0).
fval(3,(comp_smaller_overlap,(node1,square)),2,0).
fval(3,(comp_smaller_overlap,(key1,node1)),2,0).
fval(3,(comp_smaller_overlap,(triangle,square)),2,0).
fval(3,(comp_smaller_overlap,(key0,square)),2,0).
fval(3,(comp_smaller_overlap,(square,r)),2,0).
fval(3,(comp_smaller_overlap,(square,key0)),2,0).
fval(3,(comp_smaller_overlap,(key1,triangle)),2,0).
fval(3,(comp_smaller_overlap,(triangle,node1)),2,0).
fval(3,(comp_smaller_overlap,(node2,key0)),2,0).
fval(3,(comp_smaller_overlap,(key1,node2)),2,0).
fval(3,(comp_smaller_overlap,(node2,r)),2,0).
fval(3,(comp_smaller_overlap,(key0,node1)),2,0).
fval(3,(comp_smaller_overlap,(node1,triangle)),2,0).
fval(3,(comp_smaller_overlap,(node1,node2)),2,0).
fval(3,(comp_smaller_overlap,(r,square)),2,0).
fval(3,(comp_smaller_overlap,(node1,key1)),2,0).
fval(3,(comp_smaller_overlap,(key0,triangle)),2,0).
fval(3,(comp_smaller_overlap,(key0,node2)),2,0).
fval(3,(comp_smaller_overlap,(triangle,node2)),2,0).
fval(3,(comp_smaller_overlap,(triangle,key1)),2,0).
fval(3,(comp_smaller_overlap,(r,node1)),2,0).
fval(3,(comp_smaller_overlap,(key0,key1)),2,0).
fval(3,(comp_smaller_overlap,(node1,key0)),2,0).
fval(3,(comp_smaller_overlap,(node2,square)),2,0).
fval(3,(comp_smaller_overlap,(square,node1)),2,0).
fval(3,(comp_smaller_overlap,(r,node2)),2,0).
fval(3,(comp_smaller_overlap,(node2,node1)),2,0).
fval(3,(comp_smaller_overlap,(r,triangle)),2,0).
fval(3,(comp_smaller_overlap,(r,key1)),2,0).
fval(3,(comp_smaller_overlap,(square,triangle)),2,0).
fval(3,(comp_smaller_overlap,(node1,r)),2,0).
fval(3,(comp_smaller_overlap,(square,node2)),2,0).
fval(3,(comp_smaller_overlap,(square,key1)),2,0).
fval(3,(comp_smaller_overlap,(key0,r)),3,1).
fval(3,(comp_smaller_overlap,(key1,r)),3,1).
fval(3,(comp_smaller_overlap,(key1,key0)),3,1).
fval(3,(comp_smaller_overlap,(r,key0)),3,1).
fval(3,(comp_smaller_overlap,(node2,triangle)),3,0).
fval(3,(comp_smaller_overlap,(triangle,key0)),3,0).
fval(3,(comp_smaller_overlap,(triangle,r)),3,0).
fval(3,(comp_smaller_overlap,(node2,key1)),3,0).
fval(3,(comp_smaller_overlap,(key1,square)),3,0).
fval(3,(comp_smaller_overlap,(node1,square)),3,0).
fval(3,(comp_smaller_overlap,(key1,node1)),3,0).
fval(3,(comp_smaller_overlap,(triangle,square)),3,0).
fval(3,(comp_smaller_overlap,(key0,square)),3,0).
fval(3,(comp_smaller_overlap,(square,r)),3,0).
fval(3,(comp_smaller_overlap,(square,key0)),3,0).
fval(3,(comp_smaller_overlap,(key1,triangle)),3,0).
fval(3,(comp_smaller_overlap,(triangle,node1)),3,0).
fval(3,(comp_smaller_overlap,(node2,key0)),3,0).
fval(3,(comp_smaller_overlap,(key1,node2)),3,0).
fval(3,(comp_smaller_overlap,(node2,r)),3,0).
fval(3,(comp_smaller_overlap,(key0,node1)),3,0).
fval(3,(comp_smaller_overlap,(node1,triangle)),3,0).
fval(3,(comp_smaller_overlap,(node1,node2)),3,0).
fval(3,(comp_smaller_overlap,(r,square)),3,0).
fval(3,(comp_smaller_overlap,(node1,key1)),3,0).
fval(3,(comp_smaller_overlap,(key0,triangle)),3,0).
fval(3,(comp_smaller_overlap,(key0,node2)),3,0).
fval(3,(comp_smaller_overlap,(triangle,node2)),3,0).
fval(3,(comp_smaller_overlap,(triangle,key1)),3,0).
fval(3,(comp_smaller_overlap,(r,node1)),3,0).
fval(3,(comp_smaller_overlap,(key0,key1)),3,0).
fval(3,(comp_smaller_overlap,(node1,key0)),3,0).
fval(3,(comp_smaller_overlap,(node2,square)),3,0).
fval(3,(comp_smaller_overlap,(square,node1)),3,0).
fval(3,(comp_smaller_overlap,(r,node2)),3,0).
fval(3,(comp_smaller_overlap,(node2,node1)),3,0).
fval(3,(comp_smaller_overlap,(r,triangle)),3,0).
fval(3,(comp_smaller_overlap,(r,key1)),3,0).
fval(3,(comp_smaller_overlap,(square,triangle)),3,0).
fval(3,(comp_smaller_overlap,(node1,r)),3,0).
fval(3,(comp_smaller_overlap,(square,node2)),3,0).
fval(3,(comp_smaller_overlap,(square,key1)),3,0).
fval(3,(comp_smaller_overlap,(key0,r)),4,1).
fval(3,(comp_smaller_overlap,(key1,r)),4,1).
fval(3,(comp_smaller_overlap,(key1,key0)),4,1).
fval(3,(comp_smaller_overlap,(r,key0)),4,1).
fval(3,(comp_smaller_overlap,(node2,triangle)),4,0).
fval(3,(comp_smaller_overlap,(triangle,key0)),4,0).
fval(3,(comp_smaller_overlap,(triangle,r)),4,0).
fval(3,(comp_smaller_overlap,(node2,key1)),4,0).
fval(3,(comp_smaller_overlap,(key1,square)),4,0).
fval(3,(comp_smaller_overlap,(node1,square)),4,0).
fval(3,(comp_smaller_overlap,(key1,node1)),4,0).
fval(3,(comp_smaller_overlap,(triangle,square)),4,0).
fval(3,(comp_smaller_overlap,(key0,square)),4,0).
fval(3,(comp_smaller_overlap,(square,r)),4,0).
fval(3,(comp_smaller_overlap,(square,key0)),4,0).
fval(3,(comp_smaller_overlap,(key1,triangle)),4,0).
fval(3,(comp_smaller_overlap,(triangle,node1)),4,0).
fval(3,(comp_smaller_overlap,(node2,key0)),4,0).
fval(3,(comp_smaller_overlap,(key1,node2)),4,0).
fval(3,(comp_smaller_overlap,(node2,r)),4,0).
fval(3,(comp_smaller_overlap,(key0,node1)),4,0).
fval(3,(comp_smaller_overlap,(node1,triangle)),4,0).
fval(3,(comp_smaller_overlap,(node1,node2)),4,0).
fval(3,(comp_smaller_overlap,(r,square)),4,0).
fval(3,(comp_smaller_overlap,(node1,key1)),4,0).
fval(3,(comp_smaller_overlap,(key0,triangle)),4,0).
fval(3,(comp_smaller_overlap,(key0,node2)),4,0).
fval(3,(comp_smaller_overlap,(triangle,node2)),4,0).
fval(3,(comp_smaller_overlap,(triangle,key1)),4,0).
fval(3,(comp_smaller_overlap,(r,node1)),4,0).
fval(3,(comp_smaller_overlap,(key0,key1)),4,0).
fval(3,(comp_smaller_overlap,(node1,key0)),4,0).
fval(3,(comp_smaller_overlap,(node2,square)),4,0).
fval(3,(comp_smaller_overlap,(square,node1)),4,0).
fval(3,(comp_smaller_overlap,(r,node2)),4,0).
fval(3,(comp_smaller_overlap,(node2,node1)),4,0).
fval(3,(comp_smaller_overlap,(r,triangle)),4,0).
fval(3,(comp_smaller_overlap,(r,key1)),4,0).
fval(3,(comp_smaller_overlap,(square,triangle)),4,0).
fval(3,(comp_smaller_overlap,(node1,r)),4,0).
fval(3,(comp_smaller_overlap,(square,node2)),4,0).
fval(3,(comp_smaller_overlap,(square,key1)),4,0).
fval(3,(comp_smaller_overlap,(key0,r)),5,1).
fval(3,(comp_smaller_overlap,(key1,key0)),5,1).
fval(3,(comp_smaller_overlap,(key1,r)),5,1).
fval(3,(comp_smaller_overlap,(r,key1)),5,1).
fval(3,(comp_smaller_overlap,(key0,key1)),5,1).
fval(3,(comp_smaller_overlap,(r,key0)),5,1).
fval(3,(comp_smaller_overlap,(node2,triangle)),5,0).
fval(3,(comp_smaller_overlap,(triangle,key0)),5,0).
fval(3,(comp_smaller_overlap,(triangle,r)),5,0).
fval(3,(comp_smaller_overlap,(node2,key1)),5,0).
fval(3,(comp_smaller_overlap,(key1,square)),5,0).
fval(3,(comp_smaller_overlap,(node1,square)),5,0).
fval(3,(comp_smaller_overlap,(key1,node1)),5,0).
fval(3,(comp_smaller_overlap,(triangle,square)),5,0).
fval(3,(comp_smaller_overlap,(key0,square)),5,0).
fval(3,(comp_smaller_overlap,(square,r)),5,0).
fval(3,(comp_smaller_overlap,(square,key0)),5,0).
fval(3,(comp_smaller_overlap,(key1,triangle)),5,0).
fval(3,(comp_smaller_overlap,(triangle,node1)),5,0).
fval(3,(comp_smaller_overlap,(node2,key0)),5,0).
fval(3,(comp_smaller_overlap,(key1,node2)),5,0).
fval(3,(comp_smaller_overlap,(node2,r)),5,0).
fval(3,(comp_smaller_overlap,(key0,node1)),5,0).
fval(3,(comp_smaller_overlap,(node1,triangle)),5,0).
fval(3,(comp_smaller_overlap,(node1,node2)),5,0).
fval(3,(comp_smaller_overlap,(r,square)),5,0).
fval(3,(comp_smaller_overlap,(node1,key1)),5,0).
fval(3,(comp_smaller_overlap,(key0,triangle)),5,0).
fval(3,(comp_smaller_overlap,(key0,node2)),5,0).
fval(3,(comp_smaller_overlap,(triangle,node2)),5,0).
fval(3,(comp_smaller_overlap,(triangle,key1)),5,0).
fval(3,(comp_smaller_overlap,(r,node1)),5,0).
fval(3,(comp_smaller_overlap,(node1,key0)),5,0).
fval(3,(comp_smaller_overlap,(node2,square)),5,0).
fval(3,(comp_smaller_overlap,(square,node1)),5,0).
fval(3,(comp_smaller_overlap,(r,node2)),5,0).
fval(3,(comp_smaller_overlap,(node2,node1)),5,0).
fval(3,(comp_smaller_overlap,(r,triangle)),5,0).
fval(3,(comp_smaller_overlap,(square,triangle)),5,0).
fval(3,(comp_smaller_overlap,(node1,r)),5,0).
fval(3,(comp_smaller_overlap,(square,node2)),5,0).
fval(3,(comp_smaller_overlap,(square,key1)),5,0).
fval(3,(comp_smaller_overlap,(key0,r)),6,1).
fval(3,(comp_smaller_overlap,(key1,key0)),6,1).
fval(3,(comp_smaller_overlap,(key1,r)),6,1).
fval(3,(comp_smaller_overlap,(r,key1)),6,1).
fval(3,(comp_smaller_overlap,(key0,key1)),6,1).
fval(3,(comp_smaller_overlap,(r,key0)),6,1).
fval(3,(comp_smaller_overlap,(node2,triangle)),6,0).
fval(3,(comp_smaller_overlap,(triangle,key0)),6,0).
fval(3,(comp_smaller_overlap,(triangle,r)),6,0).
fval(3,(comp_smaller_overlap,(node2,key1)),6,0).
fval(3,(comp_smaller_overlap,(key1,square)),6,0).
fval(3,(comp_smaller_overlap,(node1,square)),6,0).
fval(3,(comp_smaller_overlap,(key1,node1)),6,0).
fval(3,(comp_smaller_overlap,(triangle,square)),6,0).
fval(3,(comp_smaller_overlap,(key0,square)),6,0).
fval(3,(comp_smaller_overlap,(square,r)),6,0).
fval(3,(comp_smaller_overlap,(square,key0)),6,0).
fval(3,(comp_smaller_overlap,(key1,triangle)),6,0).
fval(3,(comp_smaller_overlap,(triangle,node1)),6,0).
fval(3,(comp_smaller_overlap,(node2,key0)),6,0).
fval(3,(comp_smaller_overlap,(key1,node2)),6,0).
fval(3,(comp_smaller_overlap,(node2,r)),6,0).
fval(3,(comp_smaller_overlap,(key0,node1)),6,0).
fval(3,(comp_smaller_overlap,(node1,triangle)),6,0).
fval(3,(comp_smaller_overlap,(node1,node2)),6,0).
fval(3,(comp_smaller_overlap,(r,square)),6,0).
fval(3,(comp_smaller_overlap,(node1,key1)),6,0).
fval(3,(comp_smaller_overlap,(key0,triangle)),6,0).
fval(3,(comp_smaller_overlap,(key0,node2)),6,0).
fval(3,(comp_smaller_overlap,(triangle,node2)),6,0).
fval(3,(comp_smaller_overlap,(triangle,key1)),6,0).
fval(3,(comp_smaller_overlap,(r,node1)),6,0).
fval(3,(comp_smaller_overlap,(node1,key0)),6,0).
fval(3,(comp_smaller_overlap,(node2,square)),6,0).
fval(3,(comp_smaller_overlap,(square,node1)),6,0).
fval(3,(comp_smaller_overlap,(r,node2)),6,0).
fval(3,(comp_smaller_overlap,(node2,node1)),6,0).
fval(3,(comp_smaller_overlap,(r,triangle)),6,0).
fval(3,(comp_smaller_overlap,(square,triangle)),6,0).
fval(3,(comp_smaller_overlap,(node1,r)),6,0).
fval(3,(comp_smaller_overlap,(square,node2)),6,0).
fval(3,(comp_smaller_overlap,(square,key1)),6,0).
fval(3,(comp_smaller_overlap,(key0,r)),7,1).
fval(3,(comp_smaller_overlap,(key1,key0)),7,1).
fval(3,(comp_smaller_overlap,(key1,r)),7,1).
fval(3,(comp_smaller_overlap,(r,key1)),7,1).
fval(3,(comp_smaller_overlap,(key0,key1)),7,1).
fval(3,(comp_smaller_overlap,(r,key0)),7,1).
fval(3,(comp_smaller_overlap,(node2,triangle)),7,0).
fval(3,(comp_smaller_overlap,(triangle,key0)),7,0).
fval(3,(comp_smaller_overlap,(triangle,r)),7,0).
fval(3,(comp_smaller_overlap,(node2,key1)),7,0).
fval(3,(comp_smaller_overlap,(key1,square)),7,0).
fval(3,(comp_smaller_overlap,(node1,square)),7,0).
fval(3,(comp_smaller_overlap,(key1,node1)),7,0).
fval(3,(comp_smaller_overlap,(triangle,square)),7,0).
fval(3,(comp_smaller_overlap,(key0,square)),7,0).
fval(3,(comp_smaller_overlap,(square,r)),7,0).
fval(3,(comp_smaller_overlap,(square,key0)),7,0).
fval(3,(comp_smaller_overlap,(key1,triangle)),7,0).
fval(3,(comp_smaller_overlap,(triangle,node1)),7,0).
fval(3,(comp_smaller_overlap,(node2,key0)),7,0).
fval(3,(comp_smaller_overlap,(key1,node2)),7,0).
fval(3,(comp_smaller_overlap,(node2,r)),7,0).
fval(3,(comp_smaller_overlap,(key0,node1)),7,0).
fval(3,(comp_smaller_overlap,(node1,triangle)),7,0).
fval(3,(comp_smaller_overlap,(node1,node2)),7,0).
fval(3,(comp_smaller_overlap,(r,square)),7,0).
fval(3,(comp_smaller_overlap,(node1,key1)),7,0).
fval(3,(comp_smaller_overlap,(key0,triangle)),7,0).
fval(3,(comp_smaller_overlap,(key0,node2)),7,0).
fval(3,(comp_smaller_overlap,(triangle,node2)),7,0).
fval(3,(comp_smaller_overlap,(triangle,key1)),7,0).
fval(3,(comp_smaller_overlap,(r,node1)),7,0).
fval(3,(comp_smaller_overlap,(node1,key0)),7,0).
fval(3,(comp_smaller_overlap,(node2,square)),7,0).
fval(3,(comp_smaller_overlap,(square,node1)),7,0).
fval(3,(comp_smaller_overlap,(r,node2)),7,0).
fval(3,(comp_smaller_overlap,(node2,node1)),7,0).
fval(3,(comp_smaller_overlap,(r,triangle)),7,0).
fval(3,(comp_smaller_overlap,(square,triangle)),7,0).
fval(3,(comp_smaller_overlap,(node1,r)),7,0).
fval(3,(comp_smaller_overlap,(square,node2)),7,0).
fval(3,(comp_smaller_overlap,(square,key1)),7,0).
fval(3,(comp_smaller_overlap,(r,key1)),8,1).
fval(3,(comp_smaller_overlap,(key0,r)),8,1).
fval(3,(comp_smaller_overlap,(key0,key1)),8,1).
fval(3,(comp_smaller_overlap,(key1,r)),8,1).
fval(3,(comp_smaller_overlap,(node2,triangle)),8,0).
fval(3,(comp_smaller_overlap,(triangle,key0)),8,0).
fval(3,(comp_smaller_overlap,(node2,key1)),8,0).
fval(3,(comp_smaller_overlap,(triangle,r)),8,0).
fval(3,(comp_smaller_overlap,(key1,square)),8,0).
fval(3,(comp_smaller_overlap,(node1,square)),8,0).
fval(3,(comp_smaller_overlap,(r,key0)),8,0).
fval(3,(comp_smaller_overlap,(key1,node1)),8,0).
fval(3,(comp_smaller_overlap,(triangle,square)),8,0).
fval(3,(comp_smaller_overlap,(key0,square)),8,0).
fval(3,(comp_smaller_overlap,(square,r)),8,0).
fval(3,(comp_smaller_overlap,(square,key0)),8,0).
fval(3,(comp_smaller_overlap,(key1,triangle)),8,0).
fval(3,(comp_smaller_overlap,(triangle,node1)),8,0).
fval(3,(comp_smaller_overlap,(node2,key0)),8,0).
fval(3,(comp_smaller_overlap,(key1,node2)),8,0).
fval(3,(comp_smaller_overlap,(node2,r)),8,0).
fval(3,(comp_smaller_overlap,(key0,node1)),8,0).
fval(3,(comp_smaller_overlap,(node1,triangle)),8,0).
fval(3,(comp_smaller_overlap,(node1,node2)),8,0).
fval(3,(comp_smaller_overlap,(r,square)),8,0).
fval(3,(comp_smaller_overlap,(node1,key1)),8,0).
fval(3,(comp_smaller_overlap,(key0,triangle)),8,0).
fval(3,(comp_smaller_overlap,(key0,node2)),8,0).
fval(3,(comp_smaller_overlap,(triangle,node2)),8,0).
fval(3,(comp_smaller_overlap,(triangle,key1)),8,0).
fval(3,(comp_smaller_overlap,(r,node1)),8,0).
fval(3,(comp_smaller_overlap,(node1,key0)),8,0).
fval(3,(comp_smaller_overlap,(node2,square)),8,0).
fval(3,(comp_smaller_overlap,(square,node1)),8,0).
fval(3,(comp_smaller_overlap,(r,node2)),8,0).
fval(3,(comp_smaller_overlap,(node2,node1)),8,0).
fval(3,(comp_smaller_overlap,(key1,key0)),8,0).
fval(3,(comp_smaller_overlap,(r,triangle)),8,0).
fval(3,(comp_smaller_overlap,(square,triangle)),8,0).
fval(3,(comp_smaller_overlap,(node1,r)),8,0).
fval(3,(comp_smaller_overlap,(square,node2)),8,0).
fval(3,(comp_smaller_overlap,(square,key1)),8,0).
fval(3,(comp_smaller_overlap,(key0,r)),9,1).
fval(3,(comp_smaller_overlap,(key1,key0)),9,1).
fval(3,(comp_smaller_overlap,(key1,r)),9,1).
fval(3,(comp_smaller_overlap,(r,key1)),9,1).
fval(3,(comp_smaller_overlap,(key0,key1)),9,1).
fval(3,(comp_smaller_overlap,(r,key0)),9,1).
fval(3,(comp_smaller_overlap,(node2,triangle)),9,0).
fval(3,(comp_smaller_overlap,(triangle,key0)),9,0).
fval(3,(comp_smaller_overlap,(triangle,r)),9,0).
fval(3,(comp_smaller_overlap,(node2,key1)),9,0).
fval(3,(comp_smaller_overlap,(key1,square)),9,0).
fval(3,(comp_smaller_overlap,(node1,square)),9,0).
fval(3,(comp_smaller_overlap,(key1,node1)),9,0).
fval(3,(comp_smaller_overlap,(triangle,square)),9,0).
fval(3,(comp_smaller_overlap,(key0,square)),9,0).
fval(3,(comp_smaller_overlap,(square,r)),9,0).
fval(3,(comp_smaller_overlap,(square,key0)),9,0).
fval(3,(comp_smaller_overlap,(key1,triangle)),9,0).
fval(3,(comp_smaller_overlap,(triangle,node1)),9,0).
fval(3,(comp_smaller_overlap,(node2,key0)),9,0).
fval(3,(comp_smaller_overlap,(key1,node2)),9,0).
fval(3,(comp_smaller_overlap,(node2,r)),9,0).
fval(3,(comp_smaller_overlap,(key0,node1)),9,0).
fval(3,(comp_smaller_overlap,(node1,triangle)),9,0).
fval(3,(comp_smaller_overlap,(node1,node2)),9,0).
fval(3,(comp_smaller_overlap,(r,square)),9,0).
fval(3,(comp_smaller_overlap,(node1,key1)),9,0).
fval(3,(comp_smaller_overlap,(key0,triangle)),9,0).
fval(3,(comp_smaller_overlap,(key0,node2)),9,0).
fval(3,(comp_smaller_overlap,(triangle,node2)),9,0).
fval(3,(comp_smaller_overlap,(triangle,key1)),9,0).
fval(3,(comp_smaller_overlap,(r,node1)),9,0).
fval(3,(comp_smaller_overlap,(node1,key0)),9,0).
fval(3,(comp_smaller_overlap,(node2,square)),9,0).
fval(3,(comp_smaller_overlap,(square,node1)),9,0).
fval(3,(comp_smaller_overlap,(r,node2)),9,0).
fval(3,(comp_smaller_overlap,(node2,node1)),9,0).
fval(3,(comp_smaller_overlap,(r,triangle)),9,0).
fval(3,(comp_smaller_overlap,(square,triangle)),9,0).
fval(3,(comp_smaller_overlap,(node1,r)),9,0).
fval(3,(comp_smaller_overlap,(square,node2)),9,0).
fval(3,(comp_smaller_overlap,(square,key1)),9,0).
fval(3,(comp_smaller_overlap,(r,key1)),10,1).
fval(3,(comp_smaller_overlap,(key0,r)),10,1).
fval(3,(comp_smaller_overlap,(key0,key1)),10,1).
fval(3,(comp_smaller_overlap,(key1,r)),10,1).
fval(3,(comp_smaller_overlap,(node2,triangle)),10,0).
fval(3,(comp_smaller_overlap,(triangle,key0)),10,0).
fval(3,(comp_smaller_overlap,(node2,key1)),10,0).
fval(3,(comp_smaller_overlap,(triangle,r)),10,0).
fval(3,(comp_smaller_overlap,(key1,square)),10,0).
fval(3,(comp_smaller_overlap,(node1,square)),10,0).
fval(3,(comp_smaller_overlap,(r,key0)),10,0).
fval(3,(comp_smaller_overlap,(key1,node1)),10,0).
fval(3,(comp_smaller_overlap,(triangle,square)),10,0).
fval(3,(comp_smaller_overlap,(key0,square)),10,0).
fval(3,(comp_smaller_overlap,(square,r)),10,0).
fval(3,(comp_smaller_overlap,(square,key0)),10,0).
fval(3,(comp_smaller_overlap,(key1,triangle)),10,0).
fval(3,(comp_smaller_overlap,(triangle,node1)),10,0).
fval(3,(comp_smaller_overlap,(node2,key0)),10,0).
fval(3,(comp_smaller_overlap,(key1,node2)),10,0).
fval(3,(comp_smaller_overlap,(node2,r)),10,0).
fval(3,(comp_smaller_overlap,(key0,node1)),10,0).
fval(3,(comp_smaller_overlap,(node1,triangle)),10,0).
fval(3,(comp_smaller_overlap,(node1,node2)),10,0).
fval(3,(comp_smaller_overlap,(r,square)),10,0).
fval(3,(comp_smaller_overlap,(node1,key1)),10,0).
fval(3,(comp_smaller_overlap,(key0,triangle)),10,0).
fval(3,(comp_smaller_overlap,(key0,node2)),10,0).
fval(3,(comp_smaller_overlap,(triangle,node2)),10,0).
fval(3,(comp_smaller_overlap,(triangle,key1)),10,0).
fval(3,(comp_smaller_overlap,(r,node1)),10,0).
fval(3,(comp_smaller_overlap,(node1,key0)),10,0).
fval(3,(comp_smaller_overlap,(node2,square)),10,0).
fval(3,(comp_smaller_overlap,(square,node1)),10,0).
fval(3,(comp_smaller_overlap,(r,node2)),10,0).
fval(3,(comp_smaller_overlap,(node2,node1)),10,0).
fval(3,(comp_smaller_overlap,(key1,key0)),10,0).
fval(3,(comp_smaller_overlap,(r,triangle)),10,0).
fval(3,(comp_smaller_overlap,(square,triangle)),10,0).
fval(3,(comp_smaller_overlap,(node1,r)),10,0).
fval(3,(comp_smaller_overlap,(square,node2)),10,0).
fval(3,(comp_smaller_overlap,(square,key1)),10,0).
fval(3,(comp_smaller_overlap,(r,key1)),11,1).
fval(3,(comp_smaller_overlap,(key0,r)),11,1).
fval(3,(comp_smaller_overlap,(key0,key1)),11,1).
fval(3,(comp_smaller_overlap,(key1,r)),11,1).
fval(3,(comp_smaller_overlap,(node2,triangle)),11,0).
fval(3,(comp_smaller_overlap,(triangle,key0)),11,0).
fval(3,(comp_smaller_overlap,(node2,key1)),11,0).
fval(3,(comp_smaller_overlap,(triangle,r)),11,0).
fval(3,(comp_smaller_overlap,(key1,square)),11,0).
fval(3,(comp_smaller_overlap,(node1,square)),11,0).
fval(3,(comp_smaller_overlap,(r,key0)),11,0).
fval(3,(comp_smaller_overlap,(key1,node1)),11,0).
fval(3,(comp_smaller_overlap,(triangle,square)),11,0).
fval(3,(comp_smaller_overlap,(key0,square)),11,0).
fval(3,(comp_smaller_overlap,(square,r)),11,0).
fval(3,(comp_smaller_overlap,(square,key0)),11,0).
fval(3,(comp_smaller_overlap,(key1,triangle)),11,0).
fval(3,(comp_smaller_overlap,(triangle,node1)),11,0).
fval(3,(comp_smaller_overlap,(node2,key0)),11,0).
fval(3,(comp_smaller_overlap,(key1,node2)),11,0).
fval(3,(comp_smaller_overlap,(node2,r)),11,0).
fval(3,(comp_smaller_overlap,(key0,node1)),11,0).
fval(3,(comp_smaller_overlap,(node1,triangle)),11,0).
fval(3,(comp_smaller_overlap,(node1,node2)),11,0).
fval(3,(comp_smaller_overlap,(r,square)),11,0).
fval(3,(comp_smaller_overlap,(node1,key1)),11,0).
fval(3,(comp_smaller_overlap,(key0,triangle)),11,0).
fval(3,(comp_smaller_overlap,(key0,node2)),11,0).
fval(3,(comp_smaller_overlap,(triangle,node2)),11,0).
fval(3,(comp_smaller_overlap,(triangle,key1)),11,0).
fval(3,(comp_smaller_overlap,(r,node1)),11,0).
fval(3,(comp_smaller_overlap,(node1,key0)),11,0).
fval(3,(comp_smaller_overlap,(node2,square)),11,0).
fval(3,(comp_smaller_overlap,(square,node1)),11,0).
fval(3,(comp_smaller_overlap,(r,node2)),11,0).
fval(3,(comp_smaller_overlap,(node2,node1)),11,0).
fval(3,(comp_smaller_overlap,(key1,key0)),11,0).
fval(3,(comp_smaller_overlap,(r,triangle)),11,0).
fval(3,(comp_smaller_overlap,(square,triangle)),11,0).
fval(3,(comp_smaller_overlap,(node1,r)),11,0).
fval(3,(comp_smaller_overlap,(square,node2)),11,0).
fval(3,(comp_smaller_overlap,(square,key1)),11,0).
fval(3,(comp_smaller_overlap,(key0,r)),12,1).
fval(3,(comp_smaller_overlap,(key1,key0)),12,1).
fval(3,(comp_smaller_overlap,(key1,r)),12,1).
fval(3,(comp_smaller_overlap,(r,key1)),12,1).
fval(3,(comp_smaller_overlap,(key0,key1)),12,1).
fval(3,(comp_smaller_overlap,(r,key0)),12,1).
fval(3,(comp_smaller_overlap,(node2,triangle)),12,0).
fval(3,(comp_smaller_overlap,(triangle,key0)),12,0).
fval(3,(comp_smaller_overlap,(triangle,r)),12,0).
fval(3,(comp_smaller_overlap,(node2,key1)),12,0).
fval(3,(comp_smaller_overlap,(key1,square)),12,0).
fval(3,(comp_smaller_overlap,(node1,square)),12,0).
fval(3,(comp_smaller_overlap,(key1,node1)),12,0).
fval(3,(comp_smaller_overlap,(triangle,square)),12,0).
fval(3,(comp_smaller_overlap,(key0,square)),12,0).
fval(3,(comp_smaller_overlap,(square,r)),12,0).
fval(3,(comp_smaller_overlap,(square,key0)),12,0).
fval(3,(comp_smaller_overlap,(key1,triangle)),12,0).
fval(3,(comp_smaller_overlap,(triangle,node1)),12,0).
fval(3,(comp_smaller_overlap,(node2,key0)),12,0).
fval(3,(comp_smaller_overlap,(key1,node2)),12,0).
fval(3,(comp_smaller_overlap,(node2,r)),12,0).
fval(3,(comp_smaller_overlap,(key0,node1)),12,0).
fval(3,(comp_smaller_overlap,(node1,triangle)),12,0).
fval(3,(comp_smaller_overlap,(node1,node2)),12,0).
fval(3,(comp_smaller_overlap,(r,square)),12,0).
fval(3,(comp_smaller_overlap,(node1,key1)),12,0).
fval(3,(comp_smaller_overlap,(key0,triangle)),12,0).
fval(3,(comp_smaller_overlap,(key0,node2)),12,0).
fval(3,(comp_smaller_overlap,(triangle,node2)),12,0).
fval(3,(comp_smaller_overlap,(triangle,key1)),12,0).
fval(3,(comp_smaller_overlap,(r,node1)),12,0).
fval(3,(comp_smaller_overlap,(node1,key0)),12,0).
fval(3,(comp_smaller_overlap,(node2,square)),12,0).
fval(3,(comp_smaller_overlap,(square,node1)),12,0).
fval(3,(comp_smaller_overlap,(r,node2)),12,0).
fval(3,(comp_smaller_overlap,(node2,node1)),12,0).
fval(3,(comp_smaller_overlap,(r,triangle)),12,0).
fval(3,(comp_smaller_overlap,(square,triangle)),12,0).
fval(3,(comp_smaller_overlap,(node1,r)),12,0).
fval(3,(comp_smaller_overlap,(square,node2)),12,0).
fval(3,(comp_smaller_overlap,(square,key1)),12,0).
fval(3,(comp_smaller_overlap,(r,key1)),13,1).
fval(3,(comp_smaller_overlap,(key0,r)),13,1).
fval(3,(comp_smaller_overlap,(key0,key1)),13,1).
fval(3,(comp_smaller_overlap,(key1,r)),13,1).
fval(3,(comp_smaller_overlap,(node2,triangle)),13,0).
fval(3,(comp_smaller_overlap,(triangle,key0)),13,0).
fval(3,(comp_smaller_overlap,(node2,key1)),13,0).
fval(3,(comp_smaller_overlap,(triangle,r)),13,0).
fval(3,(comp_smaller_overlap,(key1,square)),13,0).
fval(3,(comp_smaller_overlap,(node1,square)),13,0).
fval(3,(comp_smaller_overlap,(r,key0)),13,0).
fval(3,(comp_smaller_overlap,(key1,node1)),13,0).
fval(3,(comp_smaller_overlap,(triangle,square)),13,0).
fval(3,(comp_smaller_overlap,(key0,square)),13,0).
fval(3,(comp_smaller_overlap,(square,r)),13,0).
fval(3,(comp_smaller_overlap,(square,key0)),13,0).
fval(3,(comp_smaller_overlap,(key1,triangle)),13,0).
fval(3,(comp_smaller_overlap,(triangle,node1)),13,0).
fval(3,(comp_smaller_overlap,(node2,key0)),13,0).
fval(3,(comp_smaller_overlap,(key1,node2)),13,0).
fval(3,(comp_smaller_overlap,(node2,r)),13,0).
fval(3,(comp_smaller_overlap,(key0,node1)),13,0).
fval(3,(comp_smaller_overlap,(node1,triangle)),13,0).
fval(3,(comp_smaller_overlap,(node1,node2)),13,0).
fval(3,(comp_smaller_overlap,(r,square)),13,0).
fval(3,(comp_smaller_overlap,(node1,key1)),13,0).
fval(3,(comp_smaller_overlap,(key0,triangle)),13,0).
fval(3,(comp_smaller_overlap,(key0,node2)),13,0).
fval(3,(comp_smaller_overlap,(triangle,node2)),13,0).
fval(3,(comp_smaller_overlap,(triangle,key1)),13,0).
fval(3,(comp_smaller_overlap,(r,node1)),13,0).
fval(3,(comp_smaller_overlap,(node1,key0)),13,0).
fval(3,(comp_smaller_overlap,(node2,square)),13,0).
fval(3,(comp_smaller_overlap,(square,node1)),13,0).
fval(3,(comp_smaller_overlap,(r,node2)),13,0).
fval(3,(comp_smaller_overlap,(node2,node1)),13,0).
fval(3,(comp_smaller_overlap,(key1,key0)),13,0).
fval(3,(comp_smaller_overlap,(r,triangle)),13,0).
fval(3,(comp_smaller_overlap,(square,triangle)),13,0).
fval(3,(comp_smaller_overlap,(node1,r)),13,0).
fval(3,(comp_smaller_overlap,(square,node2)),13,0).
fval(3,(comp_smaller_overlap,(square,key1)),13,0).
fval(3,(comp_smaller_overlap,(key0,r)),14,1).
fval(3,(comp_smaller_overlap,(key1,key0)),14,1).
fval(3,(comp_smaller_overlap,(key1,r)),14,1).
fval(3,(comp_smaller_overlap,(r,key1)),14,1).
fval(3,(comp_smaller_overlap,(key0,key1)),14,1).
fval(3,(comp_smaller_overlap,(r,key0)),14,1).
fval(3,(comp_smaller_overlap,(node2,triangle)),14,0).
fval(3,(comp_smaller_overlap,(triangle,key0)),14,0).
fval(3,(comp_smaller_overlap,(triangle,r)),14,0).
fval(3,(comp_smaller_overlap,(node2,key1)),14,0).
fval(3,(comp_smaller_overlap,(key1,square)),14,0).
fval(3,(comp_smaller_overlap,(node1,square)),14,0).
fval(3,(comp_smaller_overlap,(key1,node1)),14,0).
fval(3,(comp_smaller_overlap,(triangle,square)),14,0).
fval(3,(comp_smaller_overlap,(key0,square)),14,0).
fval(3,(comp_smaller_overlap,(square,r)),14,0).
fval(3,(comp_smaller_overlap,(square,key0)),14,0).
fval(3,(comp_smaller_overlap,(key1,triangle)),14,0).
fval(3,(comp_smaller_overlap,(triangle,node1)),14,0).
fval(3,(comp_smaller_overlap,(node2,key0)),14,0).
fval(3,(comp_smaller_overlap,(key1,node2)),14,0).
fval(3,(comp_smaller_overlap,(node2,r)),14,0).
fval(3,(comp_smaller_overlap,(key0,node1)),14,0).
fval(3,(comp_smaller_overlap,(node1,triangle)),14,0).
fval(3,(comp_smaller_overlap,(node1,node2)),14,0).
fval(3,(comp_smaller_overlap,(r,square)),14,0).
fval(3,(comp_smaller_overlap,(node1,key1)),14,0).
fval(3,(comp_smaller_overlap,(key0,triangle)),14,0).
fval(3,(comp_smaller_overlap,(key0,node2)),14,0).
fval(3,(comp_smaller_overlap,(triangle,node2)),14,0).
fval(3,(comp_smaller_overlap,(triangle,key1)),14,0).
fval(3,(comp_smaller_overlap,(r,node1)),14,0).
fval(3,(comp_smaller_overlap,(node1,key0)),14,0).
fval(3,(comp_smaller_overlap,(node2,square)),14,0).
fval(3,(comp_smaller_overlap,(square,node1)),14,0).
fval(3,(comp_smaller_overlap,(r,node2)),14,0).
fval(3,(comp_smaller_overlap,(node2,node1)),14,0).
fval(3,(comp_smaller_overlap,(r,triangle)),14,0).
fval(3,(comp_smaller_overlap,(square,triangle)),14,0).
fval(3,(comp_smaller_overlap,(node1,r)),14,0).
fval(3,(comp_smaller_overlap,(square,node2)),14,0).
fval(3,(comp_smaller_overlap,(square,key1)),14,0).
fval(3,(comp_smaller_overlap,(key0,r)),15,1).
fval(3,(comp_smaller_overlap,(key1,key0)),15,1).
fval(3,(comp_smaller_overlap,(key1,r)),15,1).
fval(3,(comp_smaller_overlap,(r,key1)),15,1).
fval(3,(comp_smaller_overlap,(key0,key1)),15,1).
fval(3,(comp_smaller_overlap,(r,key0)),15,1).
fval(3,(comp_smaller_overlap,(node2,triangle)),15,0).
fval(3,(comp_smaller_overlap,(triangle,key0)),15,0).
fval(3,(comp_smaller_overlap,(triangle,r)),15,0).
fval(3,(comp_smaller_overlap,(node2,key1)),15,0).
fval(3,(comp_smaller_overlap,(key1,square)),15,0).
fval(3,(comp_smaller_overlap,(node1,square)),15,0).
fval(3,(comp_smaller_overlap,(key1,node1)),15,0).
fval(3,(comp_smaller_overlap,(triangle,square)),15,0).
fval(3,(comp_smaller_overlap,(key0,square)),15,0).
fval(3,(comp_smaller_overlap,(square,r)),15,0).
fval(3,(comp_smaller_overlap,(square,key0)),15,0).
fval(3,(comp_smaller_overlap,(key1,triangle)),15,0).
fval(3,(comp_smaller_overlap,(triangle,node1)),15,0).
fval(3,(comp_smaller_overlap,(node2,key0)),15,0).
fval(3,(comp_smaller_overlap,(key1,node2)),15,0).
fval(3,(comp_smaller_overlap,(node2,r)),15,0).
fval(3,(comp_smaller_overlap,(key0,node1)),15,0).
fval(3,(comp_smaller_overlap,(node1,triangle)),15,0).
fval(3,(comp_smaller_overlap,(node1,node2)),15,0).
fval(3,(comp_smaller_overlap,(r,square)),15,0).
fval(3,(comp_smaller_overlap,(node1,key1)),15,0).
fval(3,(comp_smaller_overlap,(key0,triangle)),15,0).
fval(3,(comp_smaller_overlap,(key0,node2)),15,0).
fval(3,(comp_smaller_overlap,(triangle,node2)),15,0).
fval(3,(comp_smaller_overlap,(triangle,key1)),15,0).
fval(3,(comp_smaller_overlap,(r,node1)),15,0).
fval(3,(comp_smaller_overlap,(node1,key0)),15,0).
fval(3,(comp_smaller_overlap,(node2,square)),15,0).
fval(3,(comp_smaller_overlap,(square,node1)),15,0).
fval(3,(comp_smaller_overlap,(r,node2)),15,0).
fval(3,(comp_smaller_overlap,(node2,node1)),15,0).
fval(3,(comp_smaller_overlap,(r,triangle)),15,0).
fval(3,(comp_smaller_overlap,(square,triangle)),15,0).
fval(3,(comp_smaller_overlap,(node1,r)),15,0).
fval(3,(comp_smaller_overlap,(square,node2)),15,0).
fval(3,(comp_smaller_overlap,(square,key1)),15,0).
fval(3,(comp_smaller_overlap,(key0,r)),16,1).
fval(3,(comp_smaller_overlap,(key1,r)),16,1).
fval(3,(comp_smaller_overlap,(key1,key0)),16,1).
fval(3,(comp_smaller_overlap,(r,key0)),16,1).
fval(3,(comp_smaller_overlap,(node2,triangle)),16,0).
fval(3,(comp_smaller_overlap,(triangle,key0)),16,0).
fval(3,(comp_smaller_overlap,(triangle,r)),16,0).
fval(3,(comp_smaller_overlap,(node2,key1)),16,0).
fval(3,(comp_smaller_overlap,(key1,square)),16,0).
fval(3,(comp_smaller_overlap,(node1,square)),16,0).
fval(3,(comp_smaller_overlap,(key1,node1)),16,0).
fval(3,(comp_smaller_overlap,(triangle,square)),16,0).
fval(3,(comp_smaller_overlap,(key0,square)),16,0).
fval(3,(comp_smaller_overlap,(square,r)),16,0).
fval(3,(comp_smaller_overlap,(square,key0)),16,0).
fval(3,(comp_smaller_overlap,(key1,triangle)),16,0).
fval(3,(comp_smaller_overlap,(triangle,node1)),16,0).
fval(3,(comp_smaller_overlap,(node2,key0)),16,0).
fval(3,(comp_smaller_overlap,(key1,node2)),16,0).
fval(3,(comp_smaller_overlap,(node2,r)),16,0).
fval(3,(comp_smaller_overlap,(key0,node1)),16,0).
fval(3,(comp_smaller_overlap,(node1,triangle)),16,0).
fval(3,(comp_smaller_overlap,(node1,node2)),16,0).
fval(3,(comp_smaller_overlap,(r,square)),16,0).
fval(3,(comp_smaller_overlap,(node1,key1)),16,0).
fval(3,(comp_smaller_overlap,(key0,triangle)),16,0).
fval(3,(comp_smaller_overlap,(key0,node2)),16,0).
fval(3,(comp_smaller_overlap,(triangle,node2)),16,0).
fval(3,(comp_smaller_overlap,(triangle,key1)),16,0).
fval(3,(comp_smaller_overlap,(r,node1)),16,0).
fval(3,(comp_smaller_overlap,(key0,key1)),16,0).
fval(3,(comp_smaller_overlap,(node1,key0)),16,0).
fval(3,(comp_smaller_overlap,(node2,square)),16,0).
fval(3,(comp_smaller_overlap,(square,node1)),16,0).
fval(3,(comp_smaller_overlap,(r,node2)),16,0).
fval(3,(comp_smaller_overlap,(node2,node1)),16,0).
fval(3,(comp_smaller_overlap,(r,triangle)),16,0).
fval(3,(comp_smaller_overlap,(r,key1)),16,0).
fval(3,(comp_smaller_overlap,(square,triangle)),16,0).
fval(3,(comp_smaller_overlap,(node1,r)),16,0).
fval(3,(comp_smaller_overlap,(square,node2)),16,0).
fval(3,(comp_smaller_overlap,(square,key1)),16,0).
fval(3,(comp_smaller_overlap,(key0,r)),17,1).
fval(3,(comp_smaller_overlap,(key1,key0)),17,1).
fval(3,(comp_smaller_overlap,(key1,r)),17,1).
fval(3,(comp_smaller_overlap,(r,key1)),17,1).
fval(3,(comp_smaller_overlap,(key0,key1)),17,1).
fval(3,(comp_smaller_overlap,(r,key0)),17,1).
fval(3,(comp_smaller_overlap,(node2,triangle)),17,0).
fval(3,(comp_smaller_overlap,(triangle,key0)),17,0).
fval(3,(comp_smaller_overlap,(triangle,r)),17,0).
fval(3,(comp_smaller_overlap,(node2,key1)),17,0).
fval(3,(comp_smaller_overlap,(key1,square)),17,0).
fval(3,(comp_smaller_overlap,(node1,square)),17,0).
fval(3,(comp_smaller_overlap,(key1,node1)),17,0).
fval(3,(comp_smaller_overlap,(triangle,square)),17,0).
fval(3,(comp_smaller_overlap,(key0,square)),17,0).
fval(3,(comp_smaller_overlap,(square,r)),17,0).
fval(3,(comp_smaller_overlap,(square,key0)),17,0).
fval(3,(comp_smaller_overlap,(key1,triangle)),17,0).
fval(3,(comp_smaller_overlap,(triangle,node1)),17,0).
fval(3,(comp_smaller_overlap,(node2,key0)),17,0).
fval(3,(comp_smaller_overlap,(key1,node2)),17,0).
fval(3,(comp_smaller_overlap,(node2,r)),17,0).
fval(3,(comp_smaller_overlap,(key0,node1)),17,0).
fval(3,(comp_smaller_overlap,(node1,triangle)),17,0).
fval(3,(comp_smaller_overlap,(node1,node2)),17,0).
fval(3,(comp_smaller_overlap,(r,square)),17,0).
fval(3,(comp_smaller_overlap,(node1,key1)),17,0).
fval(3,(comp_smaller_overlap,(key0,triangle)),17,0).
fval(3,(comp_smaller_overlap,(key0,node2)),17,0).
fval(3,(comp_smaller_overlap,(triangle,node2)),17,0).
fval(3,(comp_smaller_overlap,(triangle,key1)),17,0).
fval(3,(comp_smaller_overlap,(r,node1)),17,0).
fval(3,(comp_smaller_overlap,(node1,key0)),17,0).
fval(3,(comp_smaller_overlap,(node2,square)),17,0).
fval(3,(comp_smaller_overlap,(square,node1)),17,0).
fval(3,(comp_smaller_overlap,(r,node2)),17,0).
fval(3,(comp_smaller_overlap,(node2,node1)),17,0).
fval(3,(comp_smaller_overlap,(r,triangle)),17,0).
fval(3,(comp_smaller_overlap,(square,triangle)),17,0).
fval(3,(comp_smaller_overlap,(node1,r)),17,0).
fval(3,(comp_smaller_overlap,(square,node2)),17,0).
fval(3,(comp_smaller_overlap,(square,key1)),17,0).
fval(3,(comp_smaller_overlap,(key0,r)),18,1).
fval(3,(comp_smaller_overlap,(key1,r)),18,1).
fval(3,(comp_smaller_overlap,(key1,key0)),18,1).
fval(3,(comp_smaller_overlap,(r,key0)),18,1).
fval(3,(comp_smaller_overlap,(node2,triangle)),18,0).
fval(3,(comp_smaller_overlap,(triangle,key0)),18,0).
fval(3,(comp_smaller_overlap,(triangle,r)),18,0).
fval(3,(comp_smaller_overlap,(node2,key1)),18,0).
fval(3,(comp_smaller_overlap,(key1,square)),18,0).
fval(3,(comp_smaller_overlap,(node1,square)),18,0).
fval(3,(comp_smaller_overlap,(key1,node1)),18,0).
fval(3,(comp_smaller_overlap,(triangle,square)),18,0).
fval(3,(comp_smaller_overlap,(key0,square)),18,0).
fval(3,(comp_smaller_overlap,(square,r)),18,0).
fval(3,(comp_smaller_overlap,(square,key0)),18,0).
fval(3,(comp_smaller_overlap,(key1,triangle)),18,0).
fval(3,(comp_smaller_overlap,(triangle,node1)),18,0).
fval(3,(comp_smaller_overlap,(node2,key0)),18,0).
fval(3,(comp_smaller_overlap,(key1,node2)),18,0).
fval(3,(comp_smaller_overlap,(node2,r)),18,0).
fval(3,(comp_smaller_overlap,(key0,node1)),18,0).
fval(3,(comp_smaller_overlap,(node1,triangle)),18,0).
fval(3,(comp_smaller_overlap,(node1,node2)),18,0).
fval(3,(comp_smaller_overlap,(r,square)),18,0).
fval(3,(comp_smaller_overlap,(node1,key1)),18,0).
fval(3,(comp_smaller_overlap,(key0,triangle)),18,0).
fval(3,(comp_smaller_overlap,(key0,node2)),18,0).
fval(3,(comp_smaller_overlap,(triangle,node2)),18,0).
fval(3,(comp_smaller_overlap,(triangle,key1)),18,0).
fval(3,(comp_smaller_overlap,(r,node1)),18,0).
fval(3,(comp_smaller_overlap,(key0,key1)),18,0).
fval(3,(comp_smaller_overlap,(node1,key0)),18,0).
fval(3,(comp_smaller_overlap,(node2,square)),18,0).
fval(3,(comp_smaller_overlap,(square,node1)),18,0).
fval(3,(comp_smaller_overlap,(r,node2)),18,0).
fval(3,(comp_smaller_overlap,(node2,node1)),18,0).
fval(3,(comp_smaller_overlap,(r,triangle)),18,0).
fval(3,(comp_smaller_overlap,(r,key1)),18,0).
fval(3,(comp_smaller_overlap,(square,triangle)),18,0).
fval(3,(comp_smaller_overlap,(node1,r)),18,0).
fval(3,(comp_smaller_overlap,(square,node2)),18,0).
fval(3,(comp_smaller_overlap,(square,key1)),18,0).
fval(3,(er_overlap_opencell,(key1,)),0,1).
fval(3,(er_overlap_opencell,(key0,)),0,1).
fval(3,(er_overlap_opencell,(r,)),0,1).
fval(3,(er_overlap_opencell,(node1,)),0,0).
fval(3,(er_overlap_opencell,(triangle,)),0,0).
fval(3,(er_overlap_opencell,(square,)),0,0).
fval(3,(er_overlap_opencell,(node2,)),0,0).
fval(3,(er_overlap_opencell,(key1,)),1,1).
fval(3,(er_overlap_opencell,(r,)),1,1).
fval(3,(er_overlap_opencell,(node1,)),1,0).
fval(3,(er_overlap_opencell,(triangle,)),1,0).
fval(3,(er_overlap_opencell,(node2,)),1,0).
fval(3,(er_overlap_opencell,(key0,)),1,0).
fval(3,(er_overlap_opencell,(square,)),1,0).
fval(3,(er_overlap_opencell,(key0,)),2,1).
fval(3,(er_overlap_opencell,(r,)),2,1).
fval(3,(er_overlap_opencell,(node1,)),2,0).
fval(3,(er_overlap_opencell,(triangle,)),2,0).
fval(3,(er_overlap_opencell,(node2,)),2,0).
fval(3,(er_overlap_opencell,(key1,)),2,0).
fval(3,(er_overlap_opencell,(square,)),2,0).
fval(3,(er_overlap_opencell,(key0,)),3,1).
fval(3,(er_overlap_opencell,(r,)),3,1).
fval(3,(er_overlap_opencell,(node1,)),3,0).
fval(3,(er_overlap_opencell,(triangle,)),3,0).
fval(3,(er_overlap_opencell,(node2,)),3,0).
fval(3,(er_overlap_opencell,(key1,)),3,0).
fval(3,(er_overlap_opencell,(square,)),3,0).
fval(3,(er_overlap_opencell,(key0,)),4,1).
fval(3,(er_overlap_opencell,(r,)),4,1).
fval(3,(er_overlap_opencell,(node1,)),4,0).
fval(3,(er_overlap_opencell,(triangle,)),4,0).
fval(3,(er_overlap_opencell,(node2,)),4,0).
fval(3,(er_overlap_opencell,(key1,)),4,0).
fval(3,(er_overlap_opencell,(square,)),4,0).
fval(3,(er_overlap_opencell,(key1,)),5,1).
fval(3,(er_overlap_opencell,(key0,)),5,1).
fval(3,(er_overlap_opencell,(r,)),5,1).
fval(3,(er_overlap_opencell,(node1,)),5,0).
fval(3,(er_overlap_opencell,(triangle,)),5,0).
fval(3,(er_overlap_opencell,(square,)),5,0).
fval(3,(er_overlap_opencell,(node2,)),5,0).
fval(3,(er_overlap_opencell,(key1,)),6,1).
fval(3,(er_overlap_opencell,(key0,)),6,1).
fval(3,(er_overlap_opencell,(r,)),6,1).
fval(3,(er_overlap_opencell,(node1,)),6,0).
fval(3,(er_overlap_opencell,(triangle,)),6,0).
fval(3,(er_overlap_opencell,(square,)),6,0).
fval(3,(er_overlap_opencell,(node2,)),6,0).
fval(3,(er_overlap_opencell,(key1,)),7,1).
fval(3,(er_overlap_opencell,(key0,)),7,1).
fval(3,(er_overlap_opencell,(r,)),7,1).
fval(3,(er_overlap_opencell,(node1,)),7,0).
fval(3,(er_overlap_opencell,(triangle,)),7,0).
fval(3,(er_overlap_opencell,(square,)),7,0).
fval(3,(er_overlap_opencell,(node2,)),7,0).
fval(3,(er_overlap_opencell,(key1,)),8,1).
fval(3,(er_overlap_opencell,(r,)),8,1).
fval(3,(er_overlap_opencell,(node1,)),8,0).
fval(3,(er_overlap_opencell,(triangle,)),8,0).
fval(3,(er_overlap_opencell,(node2,)),8,0).
fval(3,(er_overlap_opencell,(key0,)),8,0).
fval(3,(er_overlap_opencell,(square,)),8,0).
fval(3,(er_overlap_opencell,(key1,)),9,1).
fval(3,(er_overlap_opencell,(key0,)),9,1).
fval(3,(er_overlap_opencell,(r,)),9,1).
fval(3,(er_overlap_opencell,(node1,)),9,0).
fval(3,(er_overlap_opencell,(triangle,)),9,0).
fval(3,(er_overlap_opencell,(square,)),9,0).
fval(3,(er_overlap_opencell,(node2,)),9,0).
fval(3,(er_overlap_opencell,(key1,)),10,1).
fval(3,(er_overlap_opencell,(r,)),10,1).
fval(3,(er_overlap_opencell,(node1,)),10,0).
fval(3,(er_overlap_opencell,(triangle,)),10,0).
fval(3,(er_overlap_opencell,(node2,)),10,0).
fval(3,(er_overlap_opencell,(key0,)),10,0).
fval(3,(er_overlap_opencell,(square,)),10,0).
fval(3,(er_overlap_opencell,(key1,)),11,1).
fval(3,(er_overlap_opencell,(r,)),11,1).
fval(3,(er_overlap_opencell,(node1,)),11,0).
fval(3,(er_overlap_opencell,(triangle,)),11,0).
fval(3,(er_overlap_opencell,(node2,)),11,0).
fval(3,(er_overlap_opencell,(key0,)),11,0).
fval(3,(er_overlap_opencell,(square,)),11,0).
fval(3,(er_overlap_opencell,(key1,)),12,1).
fval(3,(er_overlap_opencell,(key0,)),12,1).
fval(3,(er_overlap_opencell,(r,)),12,1).
fval(3,(er_overlap_opencell,(node1,)),12,0).
fval(3,(er_overlap_opencell,(triangle,)),12,0).
fval(3,(er_overlap_opencell,(square,)),12,0).
fval(3,(er_overlap_opencell,(node2,)),12,0).
fval(3,(er_overlap_opencell,(key1,)),13,1).
fval(3,(er_overlap_opencell,(r,)),13,1).
fval(3,(er_overlap_opencell,(node1,)),13,0).
fval(3,(er_overlap_opencell,(triangle,)),13,0).
fval(3,(er_overlap_opencell,(node2,)),13,0).
fval(3,(er_overlap_opencell,(key0,)),13,0).
fval(3,(er_overlap_opencell,(square,)),13,0).
fval(3,(er_overlap_opencell,(key1,)),14,1).
fval(3,(er_overlap_opencell,(key0,)),14,1).
fval(3,(er_overlap_opencell,(r,)),14,1).
fval(3,(er_overlap_opencell,(node1,)),14,0).
fval(3,(er_overlap_opencell,(triangle,)),14,0).
fval(3,(er_overlap_opencell,(square,)),14,0).
fval(3,(er_overlap_opencell,(node2,)),14,0).
fval(3,(er_overlap_opencell,(key1,)),15,1).
fval(3,(er_overlap_opencell,(key0,)),15,1).
fval(3,(er_overlap_opencell,(r,)),15,1).
fval(3,(er_overlap_opencell,(node1,)),15,0).
fval(3,(er_overlap_opencell,(triangle,)),15,0).
fval(3,(er_overlap_opencell,(square,)),15,0).
fval(3,(er_overlap_opencell,(node2,)),15,0).
fval(3,(er_overlap_opencell,(key0,)),16,1).
fval(3,(er_overlap_opencell,(r,)),16,1).
fval(3,(er_overlap_opencell,(node1,)),16,0).
fval(3,(er_overlap_opencell,(triangle,)),16,0).
fval(3,(er_overlap_opencell,(node2,)),16,0).
fval(3,(er_overlap_opencell,(key1,)),16,0).
fval(3,(er_overlap_opencell,(square,)),16,0).
fval(3,(er_overlap_opencell,(key1,)),17,1).
fval(3,(er_overlap_opencell,(key0,)),17,1).
fval(3,(er_overlap_opencell,(r,)),17,1).
fval(3,(er_overlap_opencell,(node1,)),17,0).
fval(3,(er_overlap_opencell,(triangle,)),17,0).
fval(3,(er_overlap_opencell,(square,)),17,0).
fval(3,(er_overlap_opencell,(node2,)),17,0).
fval(3,(er_overlap_opencell,(key0,)),18,1).
fval(3,(er_overlap_opencell,(r,)),18,1).
fval(3,(er_overlap_opencell,(node1,)),18,0).
fval(3,(er_overlap_opencell,(triangle,)),18,0).
fval(3,(er_overlap_opencell,(node2,)),18,0).
fval(3,(er_overlap_opencell,(key1,)),18,0).
fval(3,(er_overlap_opencell,(square,)),18,0).
fval(3,(inter_key_er_overlap_verum,(key1,)),0,1).
fval(3,(inter_key_er_overlap_verum,(key0,)),0,1).
fval(3,(inter_key_er_overlap_verum,(node1,)),0,0).
fval(3,(inter_key_er_overlap_verum,(triangle,)),0,0).
fval(3,(inter_key_er_overlap_verum,(node2,)),0,0).
fval(3,(inter_key_er_overlap_verum,(r,)),0,0).
fval(3,(inter_key_er_overlap_verum,(square,)),0,0).
fval(3,(inter_key_er_overlap_verum,(key1,)),1,1).
fval(3,(inter_key_er_overlap_verum,(node1,)),1,0).
fval(3,(inter_key_er_overlap_verum,(triangle,)),1,0).
fval(3,(inter_key_er_overlap_verum,(node2,)),1,0).
fval(3,(inter_key_er_overlap_verum,(r,)),1,0).
fval(3,(inter_key_er_overlap_verum,(key0,)),1,0).
fval(3,(inter_key_er_overlap_verum,(square,)),1,0).
fval(3,(inter_key_er_overlap_verum,(key0,)),2,1).
fval(3,(inter_key_er_overlap_verum,(node1,)),2,0).
fval(3,(inter_key_er_overlap_verum,(triangle,)),2,0).
fval(3,(inter_key_er_overlap_verum,(node2,)),2,0).
fval(3,(inter_key_er_overlap_verum,(key1,)),2,0).
fval(3,(inter_key_er_overlap_verum,(r,)),2,0).
fval(3,(inter_key_er_overlap_verum,(square,)),2,0).
fval(3,(inter_key_er_overlap_verum,(key0,)),3,1).
fval(3,(inter_key_er_overlap_verum,(node1,)),3,0).
fval(3,(inter_key_er_overlap_verum,(triangle,)),3,0).
fval(3,(inter_key_er_overlap_verum,(node2,)),3,0).
fval(3,(inter_key_er_overlap_verum,(key1,)),3,0).
fval(3,(inter_key_er_overlap_verum,(r,)),3,0).
fval(3,(inter_key_er_overlap_verum,(square,)),3,0).
fval(3,(inter_key_er_overlap_verum,(key0,)),4,1).
fval(3,(inter_key_er_overlap_verum,(node1,)),4,0).
fval(3,(inter_key_er_overlap_verum,(triangle,)),4,0).
fval(3,(inter_key_er_overlap_verum,(node2,)),4,0).
fval(3,(inter_key_er_overlap_verum,(key1,)),4,0).
fval(3,(inter_key_er_overlap_verum,(r,)),4,0).
fval(3,(inter_key_er_overlap_verum,(square,)),4,0).
fval(3,(inter_key_er_overlap_verum,(key1,)),5,1).
fval(3,(inter_key_er_overlap_verum,(key0,)),5,1).
fval(3,(inter_key_er_overlap_verum,(node1,)),5,0).
fval(3,(inter_key_er_overlap_verum,(triangle,)),5,0).
fval(3,(inter_key_er_overlap_verum,(node2,)),5,0).
fval(3,(inter_key_er_overlap_verum,(r,)),5,0).
fval(3,(inter_key_er_overlap_verum,(square,)),5,0).
fval(3,(inter_key_er_overlap_verum,(key1,)),6,1).
fval(3,(inter_key_er_overlap_verum,(key0,)),6,1).
fval(3,(inter_key_er_overlap_verum,(node1,)),6,0).
fval(3,(inter_key_er_overlap_verum,(triangle,)),6,0).
fval(3,(inter_key_er_overlap_verum,(node2,)),6,0).
fval(3,(inter_key_er_overlap_verum,(r,)),6,0).
fval(3,(inter_key_er_overlap_verum,(square,)),6,0).
fval(3,(inter_key_er_overlap_verum,(key1,)),7,1).
fval(3,(inter_key_er_overlap_verum,(key0,)),7,1).
fval(3,(inter_key_er_overlap_verum,(node1,)),7,0).
fval(3,(inter_key_er_overlap_verum,(triangle,)),7,0).
fval(3,(inter_key_er_overlap_verum,(node2,)),7,0).
fval(3,(inter_key_er_overlap_verum,(r,)),7,0).
fval(3,(inter_key_er_overlap_verum,(square,)),7,0).
fval(3,(inter_key_er_overlap_verum,(key1,)),8,1).
fval(3,(inter_key_er_overlap_verum,(node1,)),8,0).
fval(3,(inter_key_er_overlap_verum,(triangle,)),8,0).
fval(3,(inter_key_er_overlap_verum,(node2,)),8,0).
fval(3,(inter_key_er_overlap_verum,(r,)),8,0).
fval(3,(inter_key_er_overlap_verum,(key0,)),8,0).
fval(3,(inter_key_er_overlap_verum,(square,)),8,0).
fval(3,(inter_key_er_overlap_verum,(key1,)),9,1).
fval(3,(inter_key_er_overlap_verum,(key0,)),9,1).
fval(3,(inter_key_er_overlap_verum,(node1,)),9,0).
fval(3,(inter_key_er_overlap_verum,(triangle,)),9,0).
fval(3,(inter_key_er_overlap_verum,(node2,)),9,0).
fval(3,(inter_key_er_overlap_verum,(r,)),9,0).
fval(3,(inter_key_er_overlap_verum,(square,)),9,0).
fval(3,(inter_key_er_overlap_verum,(key1,)),10,1).
fval(3,(inter_key_er_overlap_verum,(node1,)),10,0).
fval(3,(inter_key_er_overlap_verum,(triangle,)),10,0).
fval(3,(inter_key_er_overlap_verum,(node2,)),10,0).
fval(3,(inter_key_er_overlap_verum,(r,)),10,0).
fval(3,(inter_key_er_overlap_verum,(key0,)),10,0).
fval(3,(inter_key_er_overlap_verum,(square,)),10,0).
fval(3,(inter_key_er_overlap_verum,(key1,)),11,1).
fval(3,(inter_key_er_overlap_verum,(node1,)),11,0).
fval(3,(inter_key_er_overlap_verum,(triangle,)),11,0).
fval(3,(inter_key_er_overlap_verum,(node2,)),11,0).
fval(3,(inter_key_er_overlap_verum,(r,)),11,0).
fval(3,(inter_key_er_overlap_verum,(key0,)),11,0).
fval(3,(inter_key_er_overlap_verum,(square,)),11,0).
fval(3,(inter_key_er_overlap_verum,(key1,)),12,1).
fval(3,(inter_key_er_overlap_verum,(key0,)),12,1).
fval(3,(inter_key_er_overlap_verum,(node1,)),12,0).
fval(3,(inter_key_er_overlap_verum,(triangle,)),12,0).
fval(3,(inter_key_er_overlap_verum,(node2,)),12,0).
fval(3,(inter_key_er_overlap_verum,(r,)),12,0).
fval(3,(inter_key_er_overlap_verum,(square,)),12,0).
fval(3,(inter_key_er_overlap_verum,(key1,)),13,1).
fval(3,(inter_key_er_overlap_verum,(node1,)),13,0).
fval(3,(inter_key_er_overlap_verum,(triangle,)),13,0).
fval(3,(inter_key_er_overlap_verum,(node2,)),13,0).
fval(3,(inter_key_er_overlap_verum,(r,)),13,0).
fval(3,(inter_key_er_overlap_verum,(key0,)),13,0).
fval(3,(inter_key_er_overlap_verum,(square,)),13,0).
fval(3,(inter_key_er_overlap_verum,(key1,)),14,1).
fval(3,(inter_key_er_overlap_verum,(key0,)),14,1).
fval(3,(inter_key_er_overlap_verum,(node1,)),14,0).
fval(3,(inter_key_er_overlap_verum,(triangle,)),14,0).
fval(3,(inter_key_er_overlap_verum,(node2,)),14,0).
fval(3,(inter_key_er_overlap_verum,(r,)),14,0).
fval(3,(inter_key_er_overlap_verum,(square,)),14,0).
fval(3,(inter_key_er_overlap_verum,(key1,)),15,1).
fval(3,(inter_key_er_overlap_verum,(key0,)),15,1).
fval(3,(inter_key_er_overlap_verum,(node1,)),15,0).
fval(3,(inter_key_er_overlap_verum,(triangle,)),15,0).
fval(3,(inter_key_er_overlap_verum,(node2,)),15,0).
fval(3,(inter_key_er_overlap_verum,(r,)),15,0).
fval(3,(inter_key_er_overlap_verum,(square,)),15,0).
fval(3,(inter_key_er_overlap_verum,(key0,)),16,1).
fval(3,(inter_key_er_overlap_verum,(node1,)),16,0).
fval(3,(inter_key_er_overlap_verum,(triangle,)),16,0).
fval(3,(inter_key_er_overlap_verum,(node2,)),16,0).
fval(3,(inter_key_er_overlap_verum,(key1,)),16,0).
fval(3,(inter_key_er_overlap_verum,(r,)),16,0).
fval(3,(inter_key_er_overlap_verum,(square,)),16,0).
fval(3,(inter_key_er_overlap_verum,(key1,)),17,1).
fval(3,(inter_key_er_overlap_verum,(key0,)),17,1).
fval(3,(inter_key_er_overlap_verum,(node1,)),17,0).
fval(3,(inter_key_er_overlap_verum,(triangle,)),17,0).
fval(3,(inter_key_er_overlap_verum,(node2,)),17,0).
fval(3,(inter_key_er_overlap_verum,(r,)),17,0).
fval(3,(inter_key_er_overlap_verum,(square,)),17,0).
fval(3,(inter_key_er_overlap_verum,(key0,)),18,1).
fval(3,(inter_key_er_overlap_verum,(node1,)),18,0).
fval(3,(inter_key_er_overlap_verum,(triangle,)),18,0).
fval(3,(inter_key_er_overlap_verum,(node2,)),18,0).
fval(3,(inter_key_er_overlap_verum,(key1,)),18,0).
fval(3,(inter_key_er_overlap_verum,(r,)),18,0).
fval(3,(inter_key_er_overlap_verum,(square,)),18,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node1,)),0,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(triangle,)),0,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node2,)),0,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key1,)),0,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(r,)),0,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key0,)),0,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(square,)),0,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node1,)),1,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(triangle,)),1,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node2,)),1,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key1,)),1,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(r,)),1,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key0,)),1,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(square,)),1,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node1,)),2,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(triangle,)),2,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node2,)),2,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key1,)),2,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(r,)),2,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key0,)),2,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(square,)),2,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node1,)),3,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(triangle,)),3,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node2,)),3,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key1,)),3,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(r,)),3,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key0,)),3,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(square,)),3,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node2,)),4,1).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node1,)),4,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(triangle,)),4,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key1,)),4,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(r,)),4,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key0,)),4,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(square,)),4,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node1,)),5,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(triangle,)),5,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node2,)),5,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key1,)),5,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(r,)),5,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key0,)),5,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(square,)),5,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node2,)),6,1).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node1,)),6,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(triangle,)),6,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key1,)),6,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(r,)),6,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key0,)),6,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(square,)),6,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node2,)),7,1).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node1,)),7,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(triangle,)),7,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key1,)),7,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(r,)),7,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key0,)),7,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(square,)),7,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node1,)),8,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(triangle,)),8,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node2,)),8,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key1,)),8,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(r,)),8,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key0,)),8,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(square,)),8,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node2,)),9,1).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node1,)),9,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(triangle,)),9,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key1,)),9,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(r,)),9,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key0,)),9,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(square,)),9,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node2,)),10,1).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node1,)),10,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(triangle,)),10,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key1,)),10,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(r,)),10,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key0,)),10,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(square,)),10,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node2,)),11,1).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node1,)),11,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(triangle,)),11,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key1,)),11,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(r,)),11,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key0,)),11,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(square,)),11,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node2,)),12,1).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node1,)),12,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(triangle,)),12,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key1,)),12,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(r,)),12,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key0,)),12,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(square,)),12,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node2,)),13,1).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node1,)),13,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(triangle,)),13,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key1,)),13,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(r,)),13,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key0,)),13,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(square,)),13,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node2,)),14,1).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node1,)),14,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(triangle,)),14,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key1,)),14,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(r,)),14,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key0,)),14,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(square,)),14,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node2,)),15,1).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node1,)),15,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(triangle,)),15,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key1,)),15,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(r,)),15,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key0,)),15,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(square,)),15,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node2,)),16,1).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node1,)),16,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(triangle,)),16,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key1,)),16,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(r,)),16,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key0,)),16,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(square,)),16,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node2,)),17,1).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node1,)),17,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(triangle,)),17,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key1,)),17,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(r,)),17,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key0,)),17,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(square,)),17,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node2,)),18,1).
fval(3,(inter_er_overlap_verum_er_left_opencell,(node1,)),18,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(triangle,)),18,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key1,)),18,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(r,)),18,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(key0,)),18,0).
fval(3,(inter_er_overlap_verum_er_left_opencell,(square,)),18,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node1,)),0,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(triangle,)),0,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node2,)),0,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key1,)),0,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key0,)),0,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(r,)),0,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(square,)),0,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node1,)),1,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(triangle,)),1,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node2,)),1,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key1,)),1,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key0,)),1,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(r,)),1,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(square,)),1,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node1,)),2,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(triangle,)),2,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node2,)),2,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key1,)),2,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key0,)),2,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(r,)),2,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(square,)),2,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node1,)),3,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(triangle,)),3,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node2,)),3,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key1,)),3,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key0,)),3,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(r,)),3,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(square,)),3,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node2,)),4,1).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node1,)),4,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(triangle,)),4,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key1,)),4,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key0,)),4,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(r,)),4,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(square,)),4,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node1,)),5,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(triangle,)),5,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node2,)),5,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key1,)),5,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key0,)),5,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(r,)),5,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(square,)),5,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node2,)),6,1).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node1,)),6,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(triangle,)),6,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key1,)),6,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key0,)),6,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(r,)),6,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(square,)),6,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node2,)),7,1).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node1,)),7,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(triangle,)),7,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key1,)),7,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key0,)),7,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(r,)),7,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(square,)),7,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node1,)),8,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(triangle,)),8,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node2,)),8,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key1,)),8,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key0,)),8,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(r,)),8,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(square,)),8,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node1,)),9,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(triangle,)),9,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node2,)),9,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key1,)),9,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key0,)),9,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(r,)),9,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(square,)),9,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node2,)),10,1).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node1,)),10,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(triangle,)),10,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key1,)),10,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key0,)),10,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(r,)),10,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(square,)),10,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node1,)),11,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(triangle,)),11,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node2,)),11,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key1,)),11,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key0,)),11,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(r,)),11,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(square,)),11,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node2,)),12,1).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node1,)),12,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(triangle,)),12,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key1,)),12,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key0,)),12,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(r,)),12,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(square,)),12,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node2,)),13,1).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node1,)),13,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(triangle,)),13,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key1,)),13,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key0,)),13,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(r,)),13,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(square,)),13,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node1,)),14,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(triangle,)),14,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node2,)),14,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key1,)),14,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key0,)),14,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(r,)),14,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(square,)),14,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node2,)),15,1).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node1,)),15,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(triangle,)),15,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key1,)),15,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key0,)),15,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(r,)),15,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(square,)),15,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node1,)),16,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(triangle,)),16,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node2,)),16,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key1,)),16,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key0,)),16,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(r,)),16,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(square,)),16,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node1,)),17,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(triangle,)),17,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node2,)),17,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key1,)),17,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key0,)),17,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(r,)),17,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(square,)),17,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node2,)),18,1).
fval(3,(inter_er_overlap_robot_er_left_opencell,(node1,)),18,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(triangle,)),18,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key1,)),18,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(key0,)),18,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(r,)),18,0).
fval(3,(inter_er_overlap_robot_er_left_opencell,(square,)),18,0).
fval(3,(comp_smaller_inv_left,(key1,node2)),1).
fval(3,(comp_smaller_inv_left,(r,node2)),1).
fval(3,(comp_smaller_inv_left,(key0,node2)),1).
fval(3,(comp_smaller_inv_left,(node2,triangle)),0).
fval(3,(comp_smaller_inv_left,(key0,r)),0).
fval(3,(comp_smaller_inv_left,(triangle,key0)),0).
fval(3,(comp_smaller_inv_left,(node2,key1)),0).
fval(3,(comp_smaller_inv_left,(triangle,r)),0).
fval(3,(comp_smaller_inv_left,(key1,square)),0).
fval(3,(comp_smaller_inv_left,(node1,square)),0).
fval(3,(comp_smaller_inv_left,(r,key0)),0).
fval(3,(comp_smaller_inv_left,(key1,node1)),0).
fval(3,(comp_smaller_inv_left,(triangle,square)),0).
fval(3,(comp_smaller_inv_left,(key0,square)),0).
fval(3,(comp_smaller_inv_left,(square,r)),0).
fval(3,(comp_smaller_inv_left,(square,key0)),0).
fval(3,(comp_smaller_inv_left,(key1,triangle)),0).
fval(3,(comp_smaller_inv_left,(triangle,node1)),0).
fval(3,(comp_smaller_inv_left,(node2,key0)),0).
fval(3,(comp_smaller_inv_left,(node2,r)),0).
fval(3,(comp_smaller_inv_left,(key0,node1)),0).
fval(3,(comp_smaller_inv_left,(node1,triangle)),0).
fval(3,(comp_smaller_inv_left,(r,square)),0).
fval(3,(comp_smaller_inv_left,(node1,key1)),0).
fval(3,(comp_smaller_inv_left,(node1,node2)),0).
fval(3,(comp_smaller_inv_left,(key0,triangle)),0).
fval(3,(comp_smaller_inv_left,(triangle,node2)),0).
fval(3,(comp_smaller_inv_left,(triangle,key1)),0).
fval(3,(comp_smaller_inv_left,(r,node1)),0).
fval(3,(comp_smaller_inv_left,(key0,key1)),0).
fval(3,(comp_smaller_inv_left,(node2,square)),0).
fval(3,(comp_smaller_inv_left,(square,node1)),0).
fval(3,(comp_smaller_inv_left,(key1,key0)),0).
fval(3,(comp_smaller_inv_left,(r,triangle)),0).
fval(3,(comp_smaller_inv_left,(node2,node1)),0).
fval(3,(comp_smaller_inv_left,(key1,r)),0).
fval(3,(comp_smaller_inv_left,(r,key1)),0).
fval(3,(comp_smaller_inv_left,(square,triangle)),0).
fval(3,(comp_smaller_inv_left,(node1,key0)),0).
fval(3,(comp_smaller_inv_left,(square,node2)),0).
fval(3,(comp_smaller_inv_left,(square,key1)),0).
fval(3,(comp_smaller_inv_left,(node1,r)),0).
fval(3,(key,(key1,)),1).
fval(3,(key,(key0,)),1).
fval(3,(key,(node1,)),0).
fval(3,(key,(triangle,)),0).
fval(3,(key,(node2,)),0).
fval(3,(key,(r,)),0).
fval(3,(key,(square,)),0).
fval(3,(comp_overlap_inv_below,(node2,triangle)),0).
fval(3,(comp_overlap_inv_below,(key0,r)),0).
fval(3,(comp_overlap_inv_below,(node2,key1)),0).
fval(3,(comp_overlap_inv_below,(triangle,key0)),0).
fval(3,(comp_overlap_inv_below,(triangle,r)),0).
fval(3,(comp_overlap_inv_below,(key1,square)),0).
fval(3,(comp_overlap_inv_below,(node1,square)),0).
fval(3,(comp_overlap_inv_below,(r,key0)),0).
fval(3,(comp_overlap_inv_below,(key1,node1)),0).
fval(3,(comp_overlap_inv_below,(triangle,square)),0).
fval(3,(comp_overlap_inv_below,(key0,square)),0).
fval(3,(comp_overlap_inv_below,(square,r)),0).
fval(3,(comp_overlap_inv_below,(square,key0)),0).
fval(3,(comp_overlap_inv_below,(key1,triangle)),0).
fval(3,(comp_overlap_inv_below,(triangle,node1)),0).
fval(3,(comp_overlap_inv_below,(node2,key0)),0).
fval(3,(comp_overlap_inv_below,(key1,node2)),0).
fval(3,(comp_overlap_inv_below,(node2,r)),0).
fval(3,(comp_overlap_inv_below,(key0,node1)),0).
fval(3,(comp_overlap_inv_below,(node1,triangle)),0).
fval(3,(comp_overlap_inv_below,(node1,node2)),0).
fval(3,(comp_overlap_inv_below,(r,square)),0).
fval(3,(comp_overlap_inv_below,(node1,key1)),0).
fval(3,(comp_overlap_inv_below,(key0,triangle)),0).
fval(3,(comp_overlap_inv_below,(key0,node2)),0).
fval(3,(comp_overlap_inv_below,(r,node1)),0).
fval(3,(comp_overlap_inv_below,(triangle,node2)),0).
fval(3,(comp_overlap_inv_below,(triangle,key1)),0).
fval(3,(comp_overlap_inv_below,(key0,key1)),0).
fval(3,(comp_overlap_inv_below,(node2,square)),0).
fval(3,(comp_overlap_inv_below,(square,node1)),0).
fval(3,(comp_overlap_inv_below,(r,node2)),0).
fval(3,(comp_overlap_inv_below,(node2,node1)),0).
fval(3,(comp_overlap_inv_below,(key1,r)),0).
fval(3,(comp_overlap_inv_below,(key1,key0)),0).
fval(3,(comp_overlap_inv_below,(r,triangle)),0).
fval(3,(comp_overlap_inv_below,(r,key1)),0).
fval(3,(comp_overlap_inv_below,(square,triangle)),0).
fval(3,(comp_overlap_inv_below,(node1,key0)),0).
fval(3,(comp_overlap_inv_below,(square,node2)),0).
fval(3,(comp_overlap_inv_below,(square,key1)),0).
fval(3,(comp_overlap_inv_below,(node1,r)),0).
fval(3,(inter_opencell_er_left_verum,(node1,)),0,0).
fval(3,(inter_opencell_er_left_verum,(triangle,)),0,0).
fval(3,(inter_opencell_er_left_verum,(node2,)),0,0).
fval(3,(inter_opencell_er_left_verum,(key1,)),0,0).
fval(3,(inter_opencell_er_left_verum,(r,)),0,0).
fval(3,(inter_opencell_er_left_verum,(key0,)),0,0).
fval(3,(inter_opencell_er_left_verum,(square,)),0,0).
fval(3,(inter_opencell_er_left_verum,(node1,)),1,0).
fval(3,(inter_opencell_er_left_verum,(triangle,)),1,0).
fval(3,(inter_opencell_er_left_verum,(node2,)),1,0).
fval(3,(inter_opencell_er_left_verum,(key1,)),1,0).
fval(3,(inter_opencell_er_left_verum,(r,)),1,0).
fval(3,(inter_opencell_er_left_verum,(key0,)),1,0).
fval(3,(inter_opencell_er_left_verum,(square,)),1,0).
fval(3,(inter_opencell_er_left_verum,(node1,)),2,0).
fval(3,(inter_opencell_er_left_verum,(triangle,)),2,0).
fval(3,(inter_opencell_er_left_verum,(node2,)),2,0).
fval(3,(inter_opencell_er_left_verum,(key1,)),2,0).
fval(3,(inter_opencell_er_left_verum,(r,)),2,0).
fval(3,(inter_opencell_er_left_verum,(key0,)),2,0).
fval(3,(inter_opencell_er_left_verum,(square,)),2,0).
fval(3,(inter_opencell_er_left_verum,(node2,)),3,1).
fval(3,(inter_opencell_er_left_verum,(node1,)),3,0).
fval(3,(inter_opencell_er_left_verum,(triangle,)),3,0).
fval(3,(inter_opencell_er_left_verum,(key1,)),3,0).
fval(3,(inter_opencell_er_left_verum,(r,)),3,0).
fval(3,(inter_opencell_er_left_verum,(key0,)),3,0).
fval(3,(inter_opencell_er_left_verum,(square,)),3,0).
fval(3,(inter_opencell_er_left_verum,(node2,)),4,1).
fval(3,(inter_opencell_er_left_verum,(node1,)),4,0).
fval(3,(inter_opencell_er_left_verum,(triangle,)),4,0).
fval(3,(inter_opencell_er_left_verum,(key1,)),4,0).
fval(3,(inter_opencell_er_left_verum,(r,)),4,0).
fval(3,(inter_opencell_er_left_verum,(key0,)),4,0).
fval(3,(inter_opencell_er_left_verum,(square,)),4,0).
fval(3,(inter_opencell_er_left_verum,(node2,)),5,1).
fval(3,(inter_opencell_er_left_verum,(node1,)),5,0).
fval(3,(inter_opencell_er_left_verum,(triangle,)),5,0).
fval(3,(inter_opencell_er_left_verum,(key1,)),5,0).
fval(3,(inter_opencell_er_left_verum,(r,)),5,0).
fval(3,(inter_opencell_er_left_verum,(key0,)),5,0).
fval(3,(inter_opencell_er_left_verum,(square,)),5,0).
fval(3,(inter_opencell_er_left_verum,(node2,)),6,1).
fval(3,(inter_opencell_er_left_verum,(node1,)),6,0).
fval(3,(inter_opencell_er_left_verum,(triangle,)),6,0).
fval(3,(inter_opencell_er_left_verum,(key1,)),6,0).
fval(3,(inter_opencell_er_left_verum,(r,)),6,0).
fval(3,(inter_opencell_er_left_verum,(key0,)),6,0).
fval(3,(inter_opencell_er_left_verum,(square,)),6,0).
fval(3,(inter_opencell_er_left_verum,(node2,)),7,1).
fval(3,(inter_opencell_er_left_verum,(node1,)),7,0).
fval(3,(inter_opencell_er_left_verum,(triangle,)),7,0).
fval(3,(inter_opencell_er_left_verum,(key1,)),7,0).
fval(3,(inter_opencell_er_left_verum,(r,)),7,0).
fval(3,(inter_opencell_er_left_verum,(key0,)),7,0).
fval(3,(inter_opencell_er_left_verum,(square,)),7,0).
fval(3,(inter_opencell_er_left_verum,(node2,)),8,1).
fval(3,(inter_opencell_er_left_verum,(node1,)),8,0).
fval(3,(inter_opencell_er_left_verum,(triangle,)),8,0).
fval(3,(inter_opencell_er_left_verum,(key1,)),8,0).
fval(3,(inter_opencell_er_left_verum,(r,)),8,0).
fval(3,(inter_opencell_er_left_verum,(key0,)),8,0).
fval(3,(inter_opencell_er_left_verum,(square,)),8,0).
fval(3,(inter_opencell_er_left_verum,(node2,)),9,1).
fval(3,(inter_opencell_er_left_verum,(node1,)),9,0).
fval(3,(inter_opencell_er_left_verum,(triangle,)),9,0).
fval(3,(inter_opencell_er_left_verum,(key1,)),9,0).
fval(3,(inter_opencell_er_left_verum,(r,)),9,0).
fval(3,(inter_opencell_er_left_verum,(key0,)),9,0).
fval(3,(inter_opencell_er_left_verum,(square,)),9,0).
fval(3,(inter_opencell_er_left_verum,(node2,)),10,1).
fval(3,(inter_opencell_er_left_verum,(node1,)),10,0).
fval(3,(inter_opencell_er_left_verum,(triangle,)),10,0).
fval(3,(inter_opencell_er_left_verum,(key1,)),10,0).
fval(3,(inter_opencell_er_left_verum,(r,)),10,0).
fval(3,(inter_opencell_er_left_verum,(key0,)),10,0).
fval(3,(inter_opencell_er_left_verum,(square,)),10,0).
fval(3,(inter_opencell_er_left_verum,(node2,)),11,1).
fval(3,(inter_opencell_er_left_verum,(node1,)),11,0).
fval(3,(inter_opencell_er_left_verum,(triangle,)),11,0).
fval(3,(inter_opencell_er_left_verum,(key1,)),11,0).
fval(3,(inter_opencell_er_left_verum,(r,)),11,0).
fval(3,(inter_opencell_er_left_verum,(key0,)),11,0).
fval(3,(inter_opencell_er_left_verum,(square,)),11,0).
fval(3,(inter_opencell_er_left_verum,(node2,)),12,1).
fval(3,(inter_opencell_er_left_verum,(node1,)),12,0).
fval(3,(inter_opencell_er_left_verum,(triangle,)),12,0).
fval(3,(inter_opencell_er_left_verum,(key1,)),12,0).
fval(3,(inter_opencell_er_left_verum,(r,)),12,0).
fval(3,(inter_opencell_er_left_verum,(key0,)),12,0).
fval(3,(inter_opencell_er_left_verum,(square,)),12,0).
fval(3,(inter_opencell_er_left_verum,(node2,)),13,1).
fval(3,(inter_opencell_er_left_verum,(node1,)),13,0).
fval(3,(inter_opencell_er_left_verum,(triangle,)),13,0).
fval(3,(inter_opencell_er_left_verum,(key1,)),13,0).
fval(3,(inter_opencell_er_left_verum,(r,)),13,0).
fval(3,(inter_opencell_er_left_verum,(key0,)),13,0).
fval(3,(inter_opencell_er_left_verum,(square,)),13,0).
fval(3,(inter_opencell_er_left_verum,(node2,)),14,1).
fval(3,(inter_opencell_er_left_verum,(node1,)),14,0).
fval(3,(inter_opencell_er_left_verum,(triangle,)),14,0).
fval(3,(inter_opencell_er_left_verum,(key1,)),14,0).
fval(3,(inter_opencell_er_left_verum,(r,)),14,0).
fval(3,(inter_opencell_er_left_verum,(key0,)),14,0).
fval(3,(inter_opencell_er_left_verum,(square,)),14,0).
fval(3,(inter_opencell_er_left_verum,(node2,)),15,1).
fval(3,(inter_opencell_er_left_verum,(node1,)),15,0).
fval(3,(inter_opencell_er_left_verum,(triangle,)),15,0).
fval(3,(inter_opencell_er_left_verum,(key1,)),15,0).
fval(3,(inter_opencell_er_left_verum,(r,)),15,0).
fval(3,(inter_opencell_er_left_verum,(key0,)),15,0).
fval(3,(inter_opencell_er_left_verum,(square,)),15,0).
fval(3,(inter_opencell_er_left_verum,(node2,)),16,1).
fval(3,(inter_opencell_er_left_verum,(node1,)),16,0).
fval(3,(inter_opencell_er_left_verum,(triangle,)),16,0).
fval(3,(inter_opencell_er_left_verum,(key1,)),16,0).
fval(3,(inter_opencell_er_left_verum,(r,)),16,0).
fval(3,(inter_opencell_er_left_verum,(key0,)),16,0).
fval(3,(inter_opencell_er_left_verum,(square,)),16,0).
fval(3,(inter_opencell_er_left_verum,(node2,)),17,1).
fval(3,(inter_opencell_er_left_verum,(node1,)),17,0).
fval(3,(inter_opencell_er_left_verum,(triangle,)),17,0).
fval(3,(inter_opencell_er_left_verum,(key1,)),17,0).
fval(3,(inter_opencell_er_left_verum,(r,)),17,0).
fval(3,(inter_opencell_er_left_verum,(key0,)),17,0).
fval(3,(inter_opencell_er_left_verum,(square,)),17,0).
fval(3,(inter_opencell_er_left_verum,(node2,)),18,1).
fval(3,(inter_opencell_er_left_verum,(node1,)),18,0).
fval(3,(inter_opencell_er_left_verum,(triangle,)),18,0).
fval(3,(inter_opencell_er_left_verum,(key1,)),18,0).
fval(3,(inter_opencell_er_left_verum,(r,)),18,0).
fval(3,(inter_opencell_er_left_verum,(key0,)),18,0).
fval(3,(inter_opencell_er_left_verum,(square,)),18,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node1,)),0,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(triangle,)),0,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node2,)),0,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key1,)),0,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key0,)),0,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(r,)),0,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(square,)),0,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node1,)),1,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(triangle,)),1,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node2,)),1,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key1,)),1,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key0,)),1,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(r,)),1,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(square,)),1,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node1,)),2,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(triangle,)),2,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node2,)),2,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key1,)),2,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key0,)),2,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(r,)),2,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(square,)),2,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node1,)),3,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(triangle,)),3,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node2,)),3,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key1,)),3,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key0,)),3,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(r,)),3,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(square,)),3,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node2,)),4,1).
fval(3,(inter_er_left_verum_er_overlap_verum,(node1,)),4,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(triangle,)),4,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key1,)),4,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key0,)),4,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(r,)),4,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(square,)),4,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node1,)),5,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(triangle,)),5,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node2,)),5,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key1,)),5,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key0,)),5,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(r,)),5,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(square,)),5,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node2,)),6,1).
fval(3,(inter_er_left_verum_er_overlap_verum,(node1,)),6,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(triangle,)),6,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key1,)),6,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key0,)),6,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(r,)),6,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(square,)),6,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node2,)),7,1).
fval(3,(inter_er_left_verum_er_overlap_verum,(node1,)),7,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(triangle,)),7,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key1,)),7,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key0,)),7,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(r,)),7,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(square,)),7,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node1,)),8,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(triangle,)),8,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node2,)),8,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key1,)),8,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key0,)),8,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(r,)),8,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(square,)),8,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node2,)),9,1).
fval(3,(inter_er_left_verum_er_overlap_verum,(node1,)),9,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(triangle,)),9,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key1,)),9,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key0,)),9,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(r,)),9,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(square,)),9,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node2,)),10,1).
fval(3,(inter_er_left_verum_er_overlap_verum,(node1,)),10,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(triangle,)),10,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key1,)),10,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key0,)),10,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(r,)),10,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(square,)),10,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node2,)),11,1).
fval(3,(inter_er_left_verum_er_overlap_verum,(node1,)),11,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(triangle,)),11,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key1,)),11,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key0,)),11,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(r,)),11,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(square,)),11,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node2,)),12,1).
fval(3,(inter_er_left_verum_er_overlap_verum,(node1,)),12,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(triangle,)),12,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key1,)),12,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key0,)),12,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(r,)),12,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(square,)),12,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node2,)),13,1).
fval(3,(inter_er_left_verum_er_overlap_verum,(node1,)),13,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(triangle,)),13,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key1,)),13,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key0,)),13,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(r,)),13,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(square,)),13,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node2,)),14,1).
fval(3,(inter_er_left_verum_er_overlap_verum,(node1,)),14,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(triangle,)),14,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key1,)),14,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key0,)),14,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(r,)),14,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(square,)),14,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node2,)),15,1).
fval(3,(inter_er_left_verum_er_overlap_verum,(node1,)),15,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(triangle,)),15,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key1,)),15,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key0,)),15,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(r,)),15,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(square,)),15,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node2,)),16,1).
fval(3,(inter_er_left_verum_er_overlap_verum,(node1,)),16,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(triangle,)),16,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key1,)),16,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key0,)),16,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(r,)),16,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(square,)),16,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node2,)),17,1).
fval(3,(inter_er_left_verum_er_overlap_verum,(node1,)),17,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(triangle,)),17,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key1,)),17,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key0,)),17,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(r,)),17,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(square,)),17,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(node2,)),18,1).
fval(3,(inter_er_left_verum_er_overlap_verum,(node1,)),18,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(triangle,)),18,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key1,)),18,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(key0,)),18,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(r,)),18,0).
fval(3,(inter_er_left_verum_er_overlap_verum,(square,)),18,0).
fval(3,(er_shape_verum,(key1,)),1).
fval(3,(er_shape_verum,(key0,)),1).
fval(3,(er_shape_verum,(node2,)),1).
fval(3,(er_shape_verum,(node1,)),0).
fval(3,(er_shape_verum,(r,)),0).
fval(3,(er_shape_verum,(triangle,)),0).
fval(3,(er_shape_verum,(square,)),0).
fval(3,(er_overlap_robot,(node1,)),0,1).
fval(3,(er_overlap_robot,(triangle,)),0,0).
fval(3,(er_overlap_robot,(node2,)),0,0).
fval(3,(er_overlap_robot,(key1,)),0,0).
fval(3,(er_overlap_robot,(key0,)),0,0).
fval(3,(er_overlap_robot,(r,)),0,0).
fval(3,(er_overlap_robot,(square,)),0,0).
fval(3,(er_overlap_robot,(node1,)),1,1).
fval(3,(er_overlap_robot,(triangle,)),1,0).
fval(3,(er_overlap_robot,(node2,)),1,0).
fval(3,(er_overlap_robot,(key1,)),1,0).
fval(3,(er_overlap_robot,(key0,)),1,0).
fval(3,(er_overlap_robot,(r,)),1,0).
fval(3,(er_overlap_robot,(square,)),1,0).
fval(3,(er_overlap_robot,(node1,)),2,1).
fval(3,(er_overlap_robot,(triangle,)),2,0).
fval(3,(er_overlap_robot,(node2,)),2,0).
fval(3,(er_overlap_robot,(key1,)),2,0).
fval(3,(er_overlap_robot,(key0,)),2,0).
fval(3,(er_overlap_robot,(r,)),2,0).
fval(3,(er_overlap_robot,(square,)),2,0).
fval(3,(er_overlap_robot,(node1,)),3,1).
fval(3,(er_overlap_robot,(triangle,)),3,0).
fval(3,(er_overlap_robot,(node2,)),3,0).
fval(3,(er_overlap_robot,(key1,)),3,0).
fval(3,(er_overlap_robot,(key0,)),3,0).
fval(3,(er_overlap_robot,(r,)),3,0).
fval(3,(er_overlap_robot,(square,)),3,0).
fval(3,(er_overlap_robot,(node2,)),4,1).
fval(3,(er_overlap_robot,(node1,)),4,0).
fval(3,(er_overlap_robot,(triangle,)),4,0).
fval(3,(er_overlap_robot,(key1,)),4,0).
fval(3,(er_overlap_robot,(key0,)),4,0).
fval(3,(er_overlap_robot,(r,)),4,0).
fval(3,(er_overlap_robot,(square,)),4,0).
fval(3,(er_overlap_robot,(node1,)),5,1).
fval(3,(er_overlap_robot,(triangle,)),5,0).
fval(3,(er_overlap_robot,(node2,)),5,0).
fval(3,(er_overlap_robot,(key1,)),5,0).
fval(3,(er_overlap_robot,(key0,)),5,0).
fval(3,(er_overlap_robot,(r,)),5,0).
fval(3,(er_overlap_robot,(square,)),5,0).
fval(3,(er_overlap_robot,(node2,)),6,1).
fval(3,(er_overlap_robot,(node1,)),6,0).
fval(3,(er_overlap_robot,(triangle,)),6,0).
fval(3,(er_overlap_robot,(key1,)),6,0).
fval(3,(er_overlap_robot,(key0,)),6,0).
fval(3,(er_overlap_robot,(r,)),6,0).
fval(3,(er_overlap_robot,(square,)),6,0).
fval(3,(er_overlap_robot,(node2,)),7,1).
fval(3,(er_overlap_robot,(node1,)),7,0).
fval(3,(er_overlap_robot,(triangle,)),7,0).
fval(3,(er_overlap_robot,(key1,)),7,0).
fval(3,(er_overlap_robot,(key0,)),7,0).
fval(3,(er_overlap_robot,(r,)),7,0).
fval(3,(er_overlap_robot,(square,)),7,0).
fval(3,(er_overlap_robot,(node1,)),8,1).
fval(3,(er_overlap_robot,(triangle,)),8,0).
fval(3,(er_overlap_robot,(node2,)),8,0).
fval(3,(er_overlap_robot,(key1,)),8,0).
fval(3,(er_overlap_robot,(key0,)),8,0).
fval(3,(er_overlap_robot,(r,)),8,0).
fval(3,(er_overlap_robot,(square,)),8,0).
fval(3,(er_overlap_robot,(node1,)),9,1).
fval(3,(er_overlap_robot,(triangle,)),9,0).
fval(3,(er_overlap_robot,(node2,)),9,0).
fval(3,(er_overlap_robot,(key1,)),9,0).
fval(3,(er_overlap_robot,(key0,)),9,0).
fval(3,(er_overlap_robot,(r,)),9,0).
fval(3,(er_overlap_robot,(square,)),9,0).
fval(3,(er_overlap_robot,(node2,)),10,1).
fval(3,(er_overlap_robot,(node1,)),10,0).
fval(3,(er_overlap_robot,(triangle,)),10,0).
fval(3,(er_overlap_robot,(key1,)),10,0).
fval(3,(er_overlap_robot,(key0,)),10,0).
fval(3,(er_overlap_robot,(r,)),10,0).
fval(3,(er_overlap_robot,(square,)),10,0).
fval(3,(er_overlap_robot,(node1,)),11,1).
fval(3,(er_overlap_robot,(triangle,)),11,0).
fval(3,(er_overlap_robot,(node2,)),11,0).
fval(3,(er_overlap_robot,(key1,)),11,0).
fval(3,(er_overlap_robot,(key0,)),11,0).
fval(3,(er_overlap_robot,(r,)),11,0).
fval(3,(er_overlap_robot,(square,)),11,0).
fval(3,(er_overlap_robot,(node2,)),12,1).
fval(3,(er_overlap_robot,(node1,)),12,0).
fval(3,(er_overlap_robot,(triangle,)),12,0).
fval(3,(er_overlap_robot,(key1,)),12,0).
fval(3,(er_overlap_robot,(key0,)),12,0).
fval(3,(er_overlap_robot,(r,)),12,0).
fval(3,(er_overlap_robot,(square,)),12,0).
fval(3,(er_overlap_robot,(node2,)),13,1).
fval(3,(er_overlap_robot,(node1,)),13,0).
fval(3,(er_overlap_robot,(triangle,)),13,0).
fval(3,(er_overlap_robot,(key1,)),13,0).
fval(3,(er_overlap_robot,(key0,)),13,0).
fval(3,(er_overlap_robot,(r,)),13,0).
fval(3,(er_overlap_robot,(square,)),13,0).
fval(3,(er_overlap_robot,(node1,)),14,1).
fval(3,(er_overlap_robot,(triangle,)),14,0).
fval(3,(er_overlap_robot,(node2,)),14,0).
fval(3,(er_overlap_robot,(key1,)),14,0).
fval(3,(er_overlap_robot,(key0,)),14,0).
fval(3,(er_overlap_robot,(r,)),14,0).
fval(3,(er_overlap_robot,(square,)),14,0).
fval(3,(er_overlap_robot,(node2,)),15,1).
fval(3,(er_overlap_robot,(node1,)),15,0).
fval(3,(er_overlap_robot,(triangle,)),15,0).
fval(3,(er_overlap_robot,(key1,)),15,0).
fval(3,(er_overlap_robot,(key0,)),15,0).
fval(3,(er_overlap_robot,(r,)),15,0).
fval(3,(er_overlap_robot,(square,)),15,0).
fval(3,(er_overlap_robot,(node1,)),16,1).
fval(3,(er_overlap_robot,(triangle,)),16,0).
fval(3,(er_overlap_robot,(node2,)),16,0).
fval(3,(er_overlap_robot,(key1,)),16,0).
fval(3,(er_overlap_robot,(key0,)),16,0).
fval(3,(er_overlap_robot,(r,)),16,0).
fval(3,(er_overlap_robot,(square,)),16,0).
fval(3,(er_overlap_robot,(node1,)),17,1).
fval(3,(er_overlap_robot,(triangle,)),17,0).
fval(3,(er_overlap_robot,(node2,)),17,0).
fval(3,(er_overlap_robot,(key1,)),17,0).
fval(3,(er_overlap_robot,(key0,)),17,0).
fval(3,(er_overlap_robot,(r,)),17,0).
fval(3,(er_overlap_robot,(square,)),17,0).
fval(3,(er_overlap_robot,(node2,)),18,1).
fval(3,(er_overlap_robot,(node1,)),18,0).
fval(3,(er_overlap_robot,(triangle,)),18,0).
fval(3,(er_overlap_robot,(key1,)),18,0).
fval(3,(er_overlap_robot,(key0,)),18,0).
fval(3,(er_overlap_robot,(r,)),18,0).
fval(3,(er_overlap_robot,(square,)),18,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node1,)),0,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(triangle,)),0,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node2,)),0,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key1,)),0,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key0,)),0,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(r,)),0,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(square,)),0,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node1,)),1,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(triangle,)),1,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node2,)),1,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key1,)),1,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key0,)),1,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(r,)),1,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(square,)),1,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node1,)),2,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(triangle,)),2,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node2,)),2,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key1,)),2,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key0,)),2,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(r,)),2,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(square,)),2,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node1,)),3,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(triangle,)),3,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node2,)),3,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key1,)),3,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key0,)),3,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(r,)),3,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(square,)),3,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node2,)),4,1).
fval(3,(inter_er_left_verum_er_overlap_robot,(node1,)),4,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(triangle,)),4,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key1,)),4,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key0,)),4,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(r,)),4,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(square,)),4,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node1,)),5,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(triangle,)),5,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node2,)),5,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key1,)),5,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key0,)),5,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(r,)),5,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(square,)),5,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node2,)),6,1).
fval(3,(inter_er_left_verum_er_overlap_robot,(node1,)),6,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(triangle,)),6,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key1,)),6,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key0,)),6,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(r,)),6,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(square,)),6,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node2,)),7,1).
fval(3,(inter_er_left_verum_er_overlap_robot,(node1,)),7,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(triangle,)),7,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key1,)),7,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key0,)),7,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(r,)),7,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(square,)),7,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node1,)),8,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(triangle,)),8,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node2,)),8,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key1,)),8,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key0,)),8,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(r,)),8,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(square,)),8,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node1,)),9,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(triangle,)),9,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node2,)),9,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key1,)),9,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key0,)),9,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(r,)),9,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(square,)),9,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node2,)),10,1).
fval(3,(inter_er_left_verum_er_overlap_robot,(node1,)),10,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(triangle,)),10,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key1,)),10,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key0,)),10,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(r,)),10,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(square,)),10,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node1,)),11,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(triangle,)),11,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node2,)),11,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key1,)),11,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key0,)),11,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(r,)),11,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(square,)),11,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node2,)),12,1).
fval(3,(inter_er_left_verum_er_overlap_robot,(node1,)),12,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(triangle,)),12,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key1,)),12,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key0,)),12,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(r,)),12,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(square,)),12,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node2,)),13,1).
fval(3,(inter_er_left_verum_er_overlap_robot,(node1,)),13,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(triangle,)),13,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key1,)),13,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key0,)),13,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(r,)),13,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(square,)),13,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node1,)),14,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(triangle,)),14,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node2,)),14,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key1,)),14,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key0,)),14,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(r,)),14,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(square,)),14,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node2,)),15,1).
fval(3,(inter_er_left_verum_er_overlap_robot,(node1,)),15,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(triangle,)),15,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key1,)),15,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key0,)),15,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(r,)),15,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(square,)),15,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node1,)),16,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(triangle,)),16,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node2,)),16,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key1,)),16,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key0,)),16,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(r,)),16,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(square,)),16,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node1,)),17,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(triangle,)),17,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node2,)),17,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key1,)),17,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key0,)),17,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(r,)),17,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(square,)),17,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(node2,)),18,1).
fval(3,(inter_er_left_verum_er_overlap_robot,(node1,)),18,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(triangle,)),18,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key1,)),18,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(key0,)),18,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(r,)),18,0).
fval(3,(inter_er_left_verum_er_overlap_robot,(square,)),18,0).
fval(3,(comp_overlap_inv_left,(key1,node2)),0,1).
fval(3,(comp_overlap_inv_left,(r,node2)),0,1).
fval(3,(comp_overlap_inv_left,(key0,node2)),0,1).
fval(3,(comp_overlap_inv_left,(node2,triangle)),0,0).
fval(3,(comp_overlap_inv_left,(key0,r)),0,0).
fval(3,(comp_overlap_inv_left,(triangle,key0)),0,0).
fval(3,(comp_overlap_inv_left,(node2,key1)),0,0).
fval(3,(comp_overlap_inv_left,(triangle,r)),0,0).
fval(3,(comp_overlap_inv_left,(key1,square)),0,0).
fval(3,(comp_overlap_inv_left,(node1,square)),0,0).
fval(3,(comp_overlap_inv_left,(r,key0)),0,0).
fval(3,(comp_overlap_inv_left,(key1,node1)),0,0).
fval(3,(comp_overlap_inv_left,(triangle,square)),0,0).
fval(3,(comp_overlap_inv_left,(key0,square)),0,0).
fval(3,(comp_overlap_inv_left,(square,r)),0,0).
fval(3,(comp_overlap_inv_left,(square,key0)),0,0).
fval(3,(comp_overlap_inv_left,(key1,triangle)),0,0).
fval(3,(comp_overlap_inv_left,(triangle,node1)),0,0).
fval(3,(comp_overlap_inv_left,(node2,key0)),0,0).
fval(3,(comp_overlap_inv_left,(node2,r)),0,0).
fval(3,(comp_overlap_inv_left,(key0,node1)),0,0).
fval(3,(comp_overlap_inv_left,(node1,triangle)),0,0).
fval(3,(comp_overlap_inv_left,(r,square)),0,0).
fval(3,(comp_overlap_inv_left,(node1,key1)),0,0).
fval(3,(comp_overlap_inv_left,(node1,node2)),0,0).
fval(3,(comp_overlap_inv_left,(key0,triangle)),0,0).
fval(3,(comp_overlap_inv_left,(triangle,node2)),0,0).
fval(3,(comp_overlap_inv_left,(triangle,key1)),0,0).
fval(3,(comp_overlap_inv_left,(r,node1)),0,0).
fval(3,(comp_overlap_inv_left,(key0,key1)),0,0).
fval(3,(comp_overlap_inv_left,(node2,square)),0,0).
fval(3,(comp_overlap_inv_left,(square,node1)),0,0).
fval(3,(comp_overlap_inv_left,(key1,key0)),0,0).
fval(3,(comp_overlap_inv_left,(r,triangle)),0,0).
fval(3,(comp_overlap_inv_left,(node2,node1)),0,0).
fval(3,(comp_overlap_inv_left,(key1,r)),0,0).
fval(3,(comp_overlap_inv_left,(r,key1)),0,0).
fval(3,(comp_overlap_inv_left,(square,triangle)),0,0).
fval(3,(comp_overlap_inv_left,(node1,key0)),0,0).
fval(3,(comp_overlap_inv_left,(square,node2)),0,0).
fval(3,(comp_overlap_inv_left,(square,key1)),0,0).
fval(3,(comp_overlap_inv_left,(node1,r)),0,0).
fval(3,(comp_overlap_inv_left,(key1,node2)),1,1).
fval(3,(comp_overlap_inv_left,(r,node2)),1,1).
fval(3,(comp_overlap_inv_left,(node2,triangle)),1,0).
fval(3,(comp_overlap_inv_left,(key0,r)),1,0).
fval(3,(comp_overlap_inv_left,(triangle,key0)),1,0).
fval(3,(comp_overlap_inv_left,(node2,key1)),1,0).
fval(3,(comp_overlap_inv_left,(triangle,r)),1,0).
fval(3,(comp_overlap_inv_left,(key1,square)),1,0).
fval(3,(comp_overlap_inv_left,(node1,square)),1,0).
fval(3,(comp_overlap_inv_left,(r,key0)),1,0).
fval(3,(comp_overlap_inv_left,(key1,node1)),1,0).
fval(3,(comp_overlap_inv_left,(triangle,square)),1,0).
fval(3,(comp_overlap_inv_left,(key0,square)),1,0).
fval(3,(comp_overlap_inv_left,(square,r)),1,0).
fval(3,(comp_overlap_inv_left,(square,key0)),1,0).
fval(3,(comp_overlap_inv_left,(key1,triangle)),1,0).
fval(3,(comp_overlap_inv_left,(triangle,node1)),1,0).
fval(3,(comp_overlap_inv_left,(node2,key0)),1,0).
fval(3,(comp_overlap_inv_left,(node2,r)),1,0).
fval(3,(comp_overlap_inv_left,(key0,node1)),1,0).
fval(3,(comp_overlap_inv_left,(node1,triangle)),1,0).
fval(3,(comp_overlap_inv_left,(r,square)),1,0).
fval(3,(comp_overlap_inv_left,(node1,key1)),1,0).
fval(3,(comp_overlap_inv_left,(node1,node2)),1,0).
fval(3,(comp_overlap_inv_left,(key0,triangle)),1,0).
fval(3,(comp_overlap_inv_left,(key0,node2)),1,0).
fval(3,(comp_overlap_inv_left,(triangle,node2)),1,0).
fval(3,(comp_overlap_inv_left,(triangle,key1)),1,0).
fval(3,(comp_overlap_inv_left,(r,node1)),1,0).
fval(3,(comp_overlap_inv_left,(key0,key1)),1,0).
fval(3,(comp_overlap_inv_left,(node2,square)),1,0).
fval(3,(comp_overlap_inv_left,(square,node1)),1,0).
fval(3,(comp_overlap_inv_left,(key1,key0)),1,0).
fval(3,(comp_overlap_inv_left,(r,triangle)),1,0).
fval(3,(comp_overlap_inv_left,(node2,node1)),1,0).
fval(3,(comp_overlap_inv_left,(key1,r)),1,0).
fval(3,(comp_overlap_inv_left,(r,key1)),1,0).
fval(3,(comp_overlap_inv_left,(square,triangle)),1,0).
fval(3,(comp_overlap_inv_left,(node1,key0)),1,0).
fval(3,(comp_overlap_inv_left,(square,node2)),1,0).
fval(3,(comp_overlap_inv_left,(square,key1)),1,0).
fval(3,(comp_overlap_inv_left,(node1,r)),1,0).
fval(3,(comp_overlap_inv_left,(r,node2)),2,1).
fval(3,(comp_overlap_inv_left,(key0,node2)),2,1).
fval(3,(comp_overlap_inv_left,(node2,triangle)),2,0).
fval(3,(comp_overlap_inv_left,(key0,r)),2,0).
fval(3,(comp_overlap_inv_left,(triangle,key0)),2,0).
fval(3,(comp_overlap_inv_left,(node2,key1)),2,0).
fval(3,(comp_overlap_inv_left,(triangle,r)),2,0).
fval(3,(comp_overlap_inv_left,(key1,square)),2,0).
fval(3,(comp_overlap_inv_left,(node1,square)),2,0).
fval(3,(comp_overlap_inv_left,(r,key0)),2,0).
fval(3,(comp_overlap_inv_left,(key1,node1)),2,0).
fval(3,(comp_overlap_inv_left,(triangle,square)),2,0).
fval(3,(comp_overlap_inv_left,(key0,square)),2,0).
fval(3,(comp_overlap_inv_left,(square,r)),2,0).
fval(3,(comp_overlap_inv_left,(square,key0)),2,0).
fval(3,(comp_overlap_inv_left,(key1,triangle)),2,0).
fval(3,(comp_overlap_inv_left,(triangle,node1)),2,0).
fval(3,(comp_overlap_inv_left,(node2,key0)),2,0).
fval(3,(comp_overlap_inv_left,(key1,node2)),2,0).
fval(3,(comp_overlap_inv_left,(node2,r)),2,0).
fval(3,(comp_overlap_inv_left,(key0,node1)),2,0).
fval(3,(comp_overlap_inv_left,(node1,triangle)),2,0).
fval(3,(comp_overlap_inv_left,(r,square)),2,0).
fval(3,(comp_overlap_inv_left,(node1,key1)),2,0).
fval(3,(comp_overlap_inv_left,(node1,node2)),2,0).
fval(3,(comp_overlap_inv_left,(key0,triangle)),2,0).
fval(3,(comp_overlap_inv_left,(triangle,node2)),2,0).
fval(3,(comp_overlap_inv_left,(triangle,key1)),2,0).
fval(3,(comp_overlap_inv_left,(r,node1)),2,0).
fval(3,(comp_overlap_inv_left,(key0,key1)),2,0).
fval(3,(comp_overlap_inv_left,(node2,square)),2,0).
fval(3,(comp_overlap_inv_left,(square,node1)),2,0).
fval(3,(comp_overlap_inv_left,(key1,key0)),2,0).
fval(3,(comp_overlap_inv_left,(r,triangle)),2,0).
fval(3,(comp_overlap_inv_left,(node2,node1)),2,0).
fval(3,(comp_overlap_inv_left,(key1,r)),2,0).
fval(3,(comp_overlap_inv_left,(r,key1)),2,0).
fval(3,(comp_overlap_inv_left,(square,triangle)),2,0).
fval(3,(comp_overlap_inv_left,(node1,key0)),2,0).
fval(3,(comp_overlap_inv_left,(square,node2)),2,0).
fval(3,(comp_overlap_inv_left,(square,key1)),2,0).
fval(3,(comp_overlap_inv_left,(node1,r)),2,0).
fval(3,(comp_overlap_inv_left,(r,node2)),3,1).
fval(3,(comp_overlap_inv_left,(key0,node2)),3,1).
fval(3,(comp_overlap_inv_left,(node2,triangle)),3,0).
fval(3,(comp_overlap_inv_left,(key0,r)),3,0).
fval(3,(comp_overlap_inv_left,(triangle,key0)),3,0).
fval(3,(comp_overlap_inv_left,(node2,key1)),3,0).
fval(3,(comp_overlap_inv_left,(triangle,r)),3,0).
fval(3,(comp_overlap_inv_left,(key1,square)),3,0).
fval(3,(comp_overlap_inv_left,(node1,square)),3,0).
fval(3,(comp_overlap_inv_left,(r,key0)),3,0).
fval(3,(comp_overlap_inv_left,(key1,node1)),3,0).
fval(3,(comp_overlap_inv_left,(triangle,square)),3,0).
fval(3,(comp_overlap_inv_left,(key0,square)),3,0).
fval(3,(comp_overlap_inv_left,(square,r)),3,0).
fval(3,(comp_overlap_inv_left,(square,key0)),3,0).
fval(3,(comp_overlap_inv_left,(key1,triangle)),3,0).
fval(3,(comp_overlap_inv_left,(triangle,node1)),3,0).
fval(3,(comp_overlap_inv_left,(node2,key0)),3,0).
fval(3,(comp_overlap_inv_left,(key1,node2)),3,0).
fval(3,(comp_overlap_inv_left,(node2,r)),3,0).
fval(3,(comp_overlap_inv_left,(key0,node1)),3,0).
fval(3,(comp_overlap_inv_left,(node1,triangle)),3,0).
fval(3,(comp_overlap_inv_left,(r,square)),3,0).
fval(3,(comp_overlap_inv_left,(node1,key1)),3,0).
fval(3,(comp_overlap_inv_left,(node1,node2)),3,0).
fval(3,(comp_overlap_inv_left,(key0,triangle)),3,0).
fval(3,(comp_overlap_inv_left,(triangle,node2)),3,0).
fval(3,(comp_overlap_inv_left,(triangle,key1)),3,0).
fval(3,(comp_overlap_inv_left,(r,node1)),3,0).
fval(3,(comp_overlap_inv_left,(key0,key1)),3,0).
fval(3,(comp_overlap_inv_left,(node2,square)),3,0).
fval(3,(comp_overlap_inv_left,(square,node1)),3,0).
fval(3,(comp_overlap_inv_left,(key1,key0)),3,0).
fval(3,(comp_overlap_inv_left,(r,triangle)),3,0).
fval(3,(comp_overlap_inv_left,(node2,node1)),3,0).
fval(3,(comp_overlap_inv_left,(key1,r)),3,0).
fval(3,(comp_overlap_inv_left,(r,key1)),3,0).
fval(3,(comp_overlap_inv_left,(square,triangle)),3,0).
fval(3,(comp_overlap_inv_left,(node1,key0)),3,0).
fval(3,(comp_overlap_inv_left,(square,node2)),3,0).
fval(3,(comp_overlap_inv_left,(square,key1)),3,0).
fval(3,(comp_overlap_inv_left,(node1,r)),3,0).
fval(3,(comp_overlap_inv_left,(key0,node2)),4,1).
fval(3,(comp_overlap_inv_left,(node2,triangle)),4,0).
fval(3,(comp_overlap_inv_left,(key0,r)),4,0).
fval(3,(comp_overlap_inv_left,(triangle,key0)),4,0).
fval(3,(comp_overlap_inv_left,(node2,key1)),4,0).
fval(3,(comp_overlap_inv_left,(triangle,r)),4,0).
fval(3,(comp_overlap_inv_left,(key1,square)),4,0).
fval(3,(comp_overlap_inv_left,(node1,square)),4,0).
fval(3,(comp_overlap_inv_left,(r,key0)),4,0).
fval(3,(comp_overlap_inv_left,(key1,node1)),4,0).
fval(3,(comp_overlap_inv_left,(triangle,square)),4,0).
fval(3,(comp_overlap_inv_left,(key0,square)),4,0).
fval(3,(comp_overlap_inv_left,(square,r)),4,0).
fval(3,(comp_overlap_inv_left,(square,key0)),4,0).
fval(3,(comp_overlap_inv_left,(key1,triangle)),4,0).
fval(3,(comp_overlap_inv_left,(triangle,node1)),4,0).
fval(3,(comp_overlap_inv_left,(node2,key0)),4,0).
fval(3,(comp_overlap_inv_left,(key1,node2)),4,0).
fval(3,(comp_overlap_inv_left,(node2,r)),4,0).
fval(3,(comp_overlap_inv_left,(key0,node1)),4,0).
fval(3,(comp_overlap_inv_left,(node1,triangle)),4,0).
fval(3,(comp_overlap_inv_left,(r,square)),4,0).
fval(3,(comp_overlap_inv_left,(node1,key1)),4,0).
fval(3,(comp_overlap_inv_left,(node1,node2)),4,0).
fval(3,(comp_overlap_inv_left,(key0,triangle)),4,0).
fval(3,(comp_overlap_inv_left,(triangle,node2)),4,0).
fval(3,(comp_overlap_inv_left,(triangle,key1)),4,0).
fval(3,(comp_overlap_inv_left,(r,node1)),4,0).
fval(3,(comp_overlap_inv_left,(key0,key1)),4,0).
fval(3,(comp_overlap_inv_left,(node2,square)),4,0).
fval(3,(comp_overlap_inv_left,(square,node1)),4,0).
fval(3,(comp_overlap_inv_left,(r,node2)),4,0).
fval(3,(comp_overlap_inv_left,(key1,key0)),4,0).
fval(3,(comp_overlap_inv_left,(r,triangle)),4,0).
fval(3,(comp_overlap_inv_left,(node2,node1)),4,0).
fval(3,(comp_overlap_inv_left,(key1,r)),4,0).
fval(3,(comp_overlap_inv_left,(r,key1)),4,0).
fval(3,(comp_overlap_inv_left,(square,triangle)),4,0).
fval(3,(comp_overlap_inv_left,(node1,key0)),4,0).
fval(3,(comp_overlap_inv_left,(square,node2)),4,0).
fval(3,(comp_overlap_inv_left,(square,key1)),4,0).
fval(3,(comp_overlap_inv_left,(node1,r)),4,0).
fval(3,(comp_overlap_inv_left,(key1,node2)),5,1).
fval(3,(comp_overlap_inv_left,(r,node2)),5,1).
fval(3,(comp_overlap_inv_left,(key0,node2)),5,1).
fval(3,(comp_overlap_inv_left,(node2,triangle)),5,0).
fval(3,(comp_overlap_inv_left,(key0,r)),5,0).
fval(3,(comp_overlap_inv_left,(triangle,key0)),5,0).
fval(3,(comp_overlap_inv_left,(node2,key1)),5,0).
fval(3,(comp_overlap_inv_left,(triangle,r)),5,0).
fval(3,(comp_overlap_inv_left,(key1,square)),5,0).
fval(3,(comp_overlap_inv_left,(node1,square)),5,0).
fval(3,(comp_overlap_inv_left,(r,key0)),5,0).
fval(3,(comp_overlap_inv_left,(key1,node1)),5,0).
fval(3,(comp_overlap_inv_left,(triangle,square)),5,0).
fval(3,(comp_overlap_inv_left,(key0,square)),5,0).
fval(3,(comp_overlap_inv_left,(square,r)),5,0).
fval(3,(comp_overlap_inv_left,(square,key0)),5,0).
fval(3,(comp_overlap_inv_left,(key1,triangle)),5,0).
fval(3,(comp_overlap_inv_left,(triangle,node1)),5,0).
fval(3,(comp_overlap_inv_left,(node2,key0)),5,0).
fval(3,(comp_overlap_inv_left,(node2,r)),5,0).
fval(3,(comp_overlap_inv_left,(key0,node1)),5,0).
fval(3,(comp_overlap_inv_left,(node1,triangle)),5,0).
fval(3,(comp_overlap_inv_left,(r,square)),5,0).
fval(3,(comp_overlap_inv_left,(node1,key1)),5,0).
fval(3,(comp_overlap_inv_left,(node1,node2)),5,0).
fval(3,(comp_overlap_inv_left,(key0,triangle)),5,0).
fval(3,(comp_overlap_inv_left,(triangle,node2)),5,0).
fval(3,(comp_overlap_inv_left,(triangle,key1)),5,0).
fval(3,(comp_overlap_inv_left,(r,node1)),5,0).
fval(3,(comp_overlap_inv_left,(key0,key1)),5,0).
fval(3,(comp_overlap_inv_left,(node2,square)),5,0).
fval(3,(comp_overlap_inv_left,(square,node1)),5,0).
fval(3,(comp_overlap_inv_left,(key1,key0)),5,0).
fval(3,(comp_overlap_inv_left,(r,triangle)),5,0).
fval(3,(comp_overlap_inv_left,(node2,node1)),5,0).
fval(3,(comp_overlap_inv_left,(key1,r)),5,0).
fval(3,(comp_overlap_inv_left,(r,key1)),5,0).
fval(3,(comp_overlap_inv_left,(square,triangle)),5,0).
fval(3,(comp_overlap_inv_left,(node1,key0)),5,0).
fval(3,(comp_overlap_inv_left,(square,node2)),5,0).
fval(3,(comp_overlap_inv_left,(square,key1)),5,0).
fval(3,(comp_overlap_inv_left,(node1,r)),5,0).
fval(3,(comp_overlap_inv_left,(key0,node2)),6,1).
fval(3,(comp_overlap_inv_left,(node2,triangle)),6,0).
fval(3,(comp_overlap_inv_left,(key0,r)),6,0).
fval(3,(comp_overlap_inv_left,(triangle,key0)),6,0).
fval(3,(comp_overlap_inv_left,(node2,key1)),6,0).
fval(3,(comp_overlap_inv_left,(triangle,r)),6,0).
fval(3,(comp_overlap_inv_left,(key1,square)),6,0).
fval(3,(comp_overlap_inv_left,(node1,square)),6,0).
fval(3,(comp_overlap_inv_left,(r,key0)),6,0).
fval(3,(comp_overlap_inv_left,(key1,node1)),6,0).
fval(3,(comp_overlap_inv_left,(triangle,square)),6,0).
fval(3,(comp_overlap_inv_left,(key0,square)),6,0).
fval(3,(comp_overlap_inv_left,(square,r)),6,0).
fval(3,(comp_overlap_inv_left,(square,key0)),6,0).
fval(3,(comp_overlap_inv_left,(key1,triangle)),6,0).
fval(3,(comp_overlap_inv_left,(triangle,node1)),6,0).
fval(3,(comp_overlap_inv_left,(node2,key0)),6,0).
fval(3,(comp_overlap_inv_left,(key1,node2)),6,0).
fval(3,(comp_overlap_inv_left,(node2,r)),6,0).
fval(3,(comp_overlap_inv_left,(key0,node1)),6,0).
fval(3,(comp_overlap_inv_left,(node1,triangle)),6,0).
fval(3,(comp_overlap_inv_left,(r,square)),6,0).
fval(3,(comp_overlap_inv_left,(node1,key1)),6,0).
fval(3,(comp_overlap_inv_left,(node1,node2)),6,0).
fval(3,(comp_overlap_inv_left,(key0,triangle)),6,0).
fval(3,(comp_overlap_inv_left,(triangle,node2)),6,0).
fval(3,(comp_overlap_inv_left,(triangle,key1)),6,0).
fval(3,(comp_overlap_inv_left,(r,node1)),6,0).
fval(3,(comp_overlap_inv_left,(key0,key1)),6,0).
fval(3,(comp_overlap_inv_left,(node2,square)),6,0).
fval(3,(comp_overlap_inv_left,(square,node1)),6,0).
fval(3,(comp_overlap_inv_left,(r,node2)),6,0).
fval(3,(comp_overlap_inv_left,(key1,key0)),6,0).
fval(3,(comp_overlap_inv_left,(r,triangle)),6,0).
fval(3,(comp_overlap_inv_left,(node2,node1)),6,0).
fval(3,(comp_overlap_inv_left,(key1,r)),6,0).
fval(3,(comp_overlap_inv_left,(r,key1)),6,0).
fval(3,(comp_overlap_inv_left,(square,triangle)),6,0).
fval(3,(comp_overlap_inv_left,(node1,key0)),6,0).
fval(3,(comp_overlap_inv_left,(square,node2)),6,0).
fval(3,(comp_overlap_inv_left,(square,key1)),6,0).
fval(3,(comp_overlap_inv_left,(node1,r)),6,0).
fval(3,(comp_overlap_inv_left,(key1,node2)),7,1).
fval(3,(comp_overlap_inv_left,(key0,node2)),7,1).
fval(3,(comp_overlap_inv_left,(node2,triangle)),7,0).
fval(3,(comp_overlap_inv_left,(key0,r)),7,0).
fval(3,(comp_overlap_inv_left,(triangle,key0)),7,0).
fval(3,(comp_overlap_inv_left,(node2,key1)),7,0).
fval(3,(comp_overlap_inv_left,(triangle,r)),7,0).
fval(3,(comp_overlap_inv_left,(key1,square)),7,0).
fval(3,(comp_overlap_inv_left,(node1,square)),7,0).
fval(3,(comp_overlap_inv_left,(r,key0)),7,0).
fval(3,(comp_overlap_inv_left,(key1,node1)),7,0).
fval(3,(comp_overlap_inv_left,(triangle,square)),7,0).
fval(3,(comp_overlap_inv_left,(key0,square)),7,0).
fval(3,(comp_overlap_inv_left,(square,r)),7,0).
fval(3,(comp_overlap_inv_left,(square,key0)),7,0).
fval(3,(comp_overlap_inv_left,(key1,triangle)),7,0).
fval(3,(comp_overlap_inv_left,(triangle,node1)),7,0).
fval(3,(comp_overlap_inv_left,(node2,key0)),7,0).
fval(3,(comp_overlap_inv_left,(node2,r)),7,0).
fval(3,(comp_overlap_inv_left,(key0,node1)),7,0).
fval(3,(comp_overlap_inv_left,(node1,triangle)),7,0).
fval(3,(comp_overlap_inv_left,(r,square)),7,0).
fval(3,(comp_overlap_inv_left,(node1,key1)),7,0).
fval(3,(comp_overlap_inv_left,(node1,node2)),7,0).
fval(3,(comp_overlap_inv_left,(key0,triangle)),7,0).
fval(3,(comp_overlap_inv_left,(triangle,node2)),7,0).
fval(3,(comp_overlap_inv_left,(triangle,key1)),7,0).
fval(3,(comp_overlap_inv_left,(r,node1)),7,0).
fval(3,(comp_overlap_inv_left,(key0,key1)),7,0).
fval(3,(comp_overlap_inv_left,(node2,square)),7,0).
fval(3,(comp_overlap_inv_left,(square,node1)),7,0).
fval(3,(comp_overlap_inv_left,(r,node2)),7,0).
fval(3,(comp_overlap_inv_left,(key1,key0)),7,0).
fval(3,(comp_overlap_inv_left,(r,triangle)),7,0).
fval(3,(comp_overlap_inv_left,(node2,node1)),7,0).
fval(3,(comp_overlap_inv_left,(key1,r)),7,0).
fval(3,(comp_overlap_inv_left,(r,key1)),7,0).
fval(3,(comp_overlap_inv_left,(square,triangle)),7,0).
fval(3,(comp_overlap_inv_left,(node1,key0)),7,0).
fval(3,(comp_overlap_inv_left,(square,node2)),7,0).
fval(3,(comp_overlap_inv_left,(square,key1)),7,0).
fval(3,(comp_overlap_inv_left,(node1,r)),7,0).
fval(3,(comp_overlap_inv_left,(key1,node2)),8,1).
fval(3,(comp_overlap_inv_left,(r,node2)),8,1).
fval(3,(comp_overlap_inv_left,(node2,triangle)),8,0).
fval(3,(comp_overlap_inv_left,(key0,r)),8,0).
fval(3,(comp_overlap_inv_left,(triangle,key0)),8,0).
fval(3,(comp_overlap_inv_left,(node2,key1)),8,0).
fval(3,(comp_overlap_inv_left,(triangle,r)),8,0).
fval(3,(comp_overlap_inv_left,(key1,square)),8,0).
fval(3,(comp_overlap_inv_left,(node1,square)),8,0).
fval(3,(comp_overlap_inv_left,(r,key0)),8,0).
fval(3,(comp_overlap_inv_left,(key1,node1)),8,0).
fval(3,(comp_overlap_inv_left,(triangle,square)),8,0).
fval(3,(comp_overlap_inv_left,(key0,square)),8,0).
fval(3,(comp_overlap_inv_left,(square,r)),8,0).
fval(3,(comp_overlap_inv_left,(square,key0)),8,0).
fval(3,(comp_overlap_inv_left,(key1,triangle)),8,0).
fval(3,(comp_overlap_inv_left,(triangle,node1)),8,0).
fval(3,(comp_overlap_inv_left,(node2,key0)),8,0).
fval(3,(comp_overlap_inv_left,(node2,r)),8,0).
fval(3,(comp_overlap_inv_left,(key0,node1)),8,0).
fval(3,(comp_overlap_inv_left,(node1,triangle)),8,0).
fval(3,(comp_overlap_inv_left,(r,square)),8,0).
fval(3,(comp_overlap_inv_left,(node1,key1)),8,0).
fval(3,(comp_overlap_inv_left,(node1,node2)),8,0).
fval(3,(comp_overlap_inv_left,(key0,triangle)),8,0).
fval(3,(comp_overlap_inv_left,(key0,node2)),8,0).
fval(3,(comp_overlap_inv_left,(triangle,node2)),8,0).
fval(3,(comp_overlap_inv_left,(triangle,key1)),8,0).
fval(3,(comp_overlap_inv_left,(r,node1)),8,0).
fval(3,(comp_overlap_inv_left,(key0,key1)),8,0).
fval(3,(comp_overlap_inv_left,(node2,square)),8,0).
fval(3,(comp_overlap_inv_left,(square,node1)),8,0).
fval(3,(comp_overlap_inv_left,(key1,key0)),8,0).
fval(3,(comp_overlap_inv_left,(r,triangle)),8,0).
fval(3,(comp_overlap_inv_left,(node2,node1)),8,0).
fval(3,(comp_overlap_inv_left,(key1,r)),8,0).
fval(3,(comp_overlap_inv_left,(r,key1)),8,0).
fval(3,(comp_overlap_inv_left,(square,triangle)),8,0).
fval(3,(comp_overlap_inv_left,(node1,key0)),8,0).
fval(3,(comp_overlap_inv_left,(square,node2)),8,0).
fval(3,(comp_overlap_inv_left,(square,key1)),8,0).
fval(3,(comp_overlap_inv_left,(node1,r)),8,0).
fval(3,(comp_overlap_inv_left,(r,node2)),9,1).
fval(3,(comp_overlap_inv_left,(key0,node2)),9,1).
fval(3,(comp_overlap_inv_left,(node2,triangle)),9,0).
fval(3,(comp_overlap_inv_left,(key0,r)),9,0).
fval(3,(comp_overlap_inv_left,(triangle,key0)),9,0).
fval(3,(comp_overlap_inv_left,(node2,key1)),9,0).
fval(3,(comp_overlap_inv_left,(triangle,r)),9,0).
fval(3,(comp_overlap_inv_left,(key1,square)),9,0).
fval(3,(comp_overlap_inv_left,(node1,square)),9,0).
fval(3,(comp_overlap_inv_left,(r,key0)),9,0).
fval(3,(comp_overlap_inv_left,(key1,node1)),9,0).
fval(3,(comp_overlap_inv_left,(triangle,square)),9,0).
fval(3,(comp_overlap_inv_left,(key0,square)),9,0).
fval(3,(comp_overlap_inv_left,(square,r)),9,0).
fval(3,(comp_overlap_inv_left,(square,key0)),9,0).
fval(3,(comp_overlap_inv_left,(key1,triangle)),9,0).
fval(3,(comp_overlap_inv_left,(triangle,node1)),9,0).
fval(3,(comp_overlap_inv_left,(node2,key0)),9,0).
fval(3,(comp_overlap_inv_left,(key1,node2)),9,0).
fval(3,(comp_overlap_inv_left,(node2,r)),9,0).
fval(3,(comp_overlap_inv_left,(key0,node1)),9,0).
fval(3,(comp_overlap_inv_left,(node1,triangle)),9,0).
fval(3,(comp_overlap_inv_left,(r,square)),9,0).
fval(3,(comp_overlap_inv_left,(node1,key1)),9,0).
fval(3,(comp_overlap_inv_left,(node1,node2)),9,0).
fval(3,(comp_overlap_inv_left,(key0,triangle)),9,0).
fval(3,(comp_overlap_inv_left,(triangle,node2)),9,0).
fval(3,(comp_overlap_inv_left,(triangle,key1)),9,0).
fval(3,(comp_overlap_inv_left,(r,node1)),9,0).
fval(3,(comp_overlap_inv_left,(key0,key1)),9,0).
fval(3,(comp_overlap_inv_left,(node2,square)),9,0).
fval(3,(comp_overlap_inv_left,(square,node1)),9,0).
fval(3,(comp_overlap_inv_left,(key1,key0)),9,0).
fval(3,(comp_overlap_inv_left,(r,triangle)),9,0).
fval(3,(comp_overlap_inv_left,(node2,node1)),9,0).
fval(3,(comp_overlap_inv_left,(key1,r)),9,0).
fval(3,(comp_overlap_inv_left,(r,key1)),9,0).
fval(3,(comp_overlap_inv_left,(square,triangle)),9,0).
fval(3,(comp_overlap_inv_left,(node1,key0)),9,0).
fval(3,(comp_overlap_inv_left,(square,node2)),9,0).
fval(3,(comp_overlap_inv_left,(square,key1)),9,0).
fval(3,(comp_overlap_inv_left,(node1,r)),9,0).
fval(3,(comp_overlap_inv_left,(key1,node2)),10,1).
fval(3,(comp_overlap_inv_left,(node2,triangle)),10,0).
fval(3,(comp_overlap_inv_left,(key0,r)),10,0).
fval(3,(comp_overlap_inv_left,(triangle,key0)),10,0).
fval(3,(comp_overlap_inv_left,(node2,key1)),10,0).
fval(3,(comp_overlap_inv_left,(triangle,r)),10,0).
fval(3,(comp_overlap_inv_left,(key1,square)),10,0).
fval(3,(comp_overlap_inv_left,(node1,square)),10,0).
fval(3,(comp_overlap_inv_left,(r,key0)),10,0).
fval(3,(comp_overlap_inv_left,(key1,node1)),10,0).
fval(3,(comp_overlap_inv_left,(triangle,square)),10,0).
fval(3,(comp_overlap_inv_left,(key0,square)),10,0).
fval(3,(comp_overlap_inv_left,(square,r)),10,0).
fval(3,(comp_overlap_inv_left,(square,key0)),10,0).
fval(3,(comp_overlap_inv_left,(key1,triangle)),10,0).
fval(3,(comp_overlap_inv_left,(triangle,node1)),10,0).
fval(3,(comp_overlap_inv_left,(node2,key0)),10,0).
fval(3,(comp_overlap_inv_left,(node2,r)),10,0).
fval(3,(comp_overlap_inv_left,(key0,node1)),10,0).
fval(3,(comp_overlap_inv_left,(node1,triangle)),10,0).
fval(3,(comp_overlap_inv_left,(r,square)),10,0).
fval(3,(comp_overlap_inv_left,(node1,key1)),10,0).
fval(3,(comp_overlap_inv_left,(node1,node2)),10,0).
fval(3,(comp_overlap_inv_left,(key0,triangle)),10,0).
fval(3,(comp_overlap_inv_left,(key0,node2)),10,0).
fval(3,(comp_overlap_inv_left,(triangle,node2)),10,0).
fval(3,(comp_overlap_inv_left,(triangle,key1)),10,0).
fval(3,(comp_overlap_inv_left,(r,node1)),10,0).
fval(3,(comp_overlap_inv_left,(key0,key1)),10,0).
fval(3,(comp_overlap_inv_left,(node2,square)),10,0).
fval(3,(comp_overlap_inv_left,(square,node1)),10,0).
fval(3,(comp_overlap_inv_left,(r,node2)),10,0).
fval(3,(comp_overlap_inv_left,(key1,key0)),10,0).
fval(3,(comp_overlap_inv_left,(r,triangle)),10,0).
fval(3,(comp_overlap_inv_left,(node2,node1)),10,0).
fval(3,(comp_overlap_inv_left,(key1,r)),10,0).
fval(3,(comp_overlap_inv_left,(r,key1)),10,0).
fval(3,(comp_overlap_inv_left,(square,triangle)),10,0).
fval(3,(comp_overlap_inv_left,(node1,key0)),10,0).
fval(3,(comp_overlap_inv_left,(square,node2)),10,0).
fval(3,(comp_overlap_inv_left,(square,key1)),10,0).
fval(3,(comp_overlap_inv_left,(node1,r)),10,0).
fval(3,(comp_overlap_inv_left,(r,node2)),11,1).
fval(3,(comp_overlap_inv_left,(node2,triangle)),11,0).
fval(3,(comp_overlap_inv_left,(key0,r)),11,0).
fval(3,(comp_overlap_inv_left,(triangle,key0)),11,0).
fval(3,(comp_overlap_inv_left,(node2,key1)),11,0).
fval(3,(comp_overlap_inv_left,(triangle,r)),11,0).
fval(3,(comp_overlap_inv_left,(key1,square)),11,0).
fval(3,(comp_overlap_inv_left,(node1,square)),11,0).
fval(3,(comp_overlap_inv_left,(r,key0)),11,0).
fval(3,(comp_overlap_inv_left,(key1,node1)),11,0).
fval(3,(comp_overlap_inv_left,(triangle,square)),11,0).
fval(3,(comp_overlap_inv_left,(key0,square)),11,0).
fval(3,(comp_overlap_inv_left,(square,r)),11,0).
fval(3,(comp_overlap_inv_left,(square,key0)),11,0).
fval(3,(comp_overlap_inv_left,(key1,triangle)),11,0).
fval(3,(comp_overlap_inv_left,(triangle,node1)),11,0).
fval(3,(comp_overlap_inv_left,(node2,key0)),11,0).
fval(3,(comp_overlap_inv_left,(key1,node2)),11,0).
fval(3,(comp_overlap_inv_left,(node2,r)),11,0).
fval(3,(comp_overlap_inv_left,(key0,node1)),11,0).
fval(3,(comp_overlap_inv_left,(node1,triangle)),11,0).
fval(3,(comp_overlap_inv_left,(r,square)),11,0).
fval(3,(comp_overlap_inv_left,(node1,key1)),11,0).
fval(3,(comp_overlap_inv_left,(node1,node2)),11,0).
fval(3,(comp_overlap_inv_left,(key0,triangle)),11,0).
fval(3,(comp_overlap_inv_left,(key0,node2)),11,0).
fval(3,(comp_overlap_inv_left,(triangle,node2)),11,0).
fval(3,(comp_overlap_inv_left,(triangle,key1)),11,0).
fval(3,(comp_overlap_inv_left,(r,node1)),11,0).
fval(3,(comp_overlap_inv_left,(key0,key1)),11,0).
fval(3,(comp_overlap_inv_left,(node2,square)),11,0).
fval(3,(comp_overlap_inv_left,(square,node1)),11,0).
fval(3,(comp_overlap_inv_left,(key1,key0)),11,0).
fval(3,(comp_overlap_inv_left,(r,triangle)),11,0).
fval(3,(comp_overlap_inv_left,(node2,node1)),11,0).
fval(3,(comp_overlap_inv_left,(key1,r)),11,0).
fval(3,(comp_overlap_inv_left,(r,key1)),11,0).
fval(3,(comp_overlap_inv_left,(square,triangle)),11,0).
fval(3,(comp_overlap_inv_left,(node1,key0)),11,0).
fval(3,(comp_overlap_inv_left,(square,node2)),11,0).
fval(3,(comp_overlap_inv_left,(square,key1)),11,0).
fval(3,(comp_overlap_inv_left,(node1,r)),11,0).
fval(3,(comp_overlap_inv_left,(key1,node2)),12,1).
fval(3,(comp_overlap_inv_left,(node2,triangle)),12,0).
fval(3,(comp_overlap_inv_left,(key0,r)),12,0).
fval(3,(comp_overlap_inv_left,(triangle,key0)),12,0).
fval(3,(comp_overlap_inv_left,(node2,key1)),12,0).
fval(3,(comp_overlap_inv_left,(triangle,r)),12,0).
fval(3,(comp_overlap_inv_left,(key1,square)),12,0).
fval(3,(comp_overlap_inv_left,(node1,square)),12,0).
fval(3,(comp_overlap_inv_left,(r,key0)),12,0).
fval(3,(comp_overlap_inv_left,(key1,node1)),12,0).
fval(3,(comp_overlap_inv_left,(triangle,square)),12,0).
fval(3,(comp_overlap_inv_left,(key0,square)),12,0).
fval(3,(comp_overlap_inv_left,(square,r)),12,0).
fval(3,(comp_overlap_inv_left,(square,key0)),12,0).
fval(3,(comp_overlap_inv_left,(key1,triangle)),12,0).
fval(3,(comp_overlap_inv_left,(triangle,node1)),12,0).
fval(3,(comp_overlap_inv_left,(node2,key0)),12,0).
fval(3,(comp_overlap_inv_left,(node2,r)),12,0).
fval(3,(comp_overlap_inv_left,(key0,node1)),12,0).
fval(3,(comp_overlap_inv_left,(node1,triangle)),12,0).
fval(3,(comp_overlap_inv_left,(r,square)),12,0).
fval(3,(comp_overlap_inv_left,(node1,key1)),12,0).
fval(3,(comp_overlap_inv_left,(node1,node2)),12,0).
fval(3,(comp_overlap_inv_left,(key0,triangle)),12,0).
fval(3,(comp_overlap_inv_left,(key0,node2)),12,0).
fval(3,(comp_overlap_inv_left,(triangle,node2)),12,0).
fval(3,(comp_overlap_inv_left,(triangle,key1)),12,0).
fval(3,(comp_overlap_inv_left,(r,node1)),12,0).
fval(3,(comp_overlap_inv_left,(key0,key1)),12,0).
fval(3,(comp_overlap_inv_left,(node2,square)),12,0).
fval(3,(comp_overlap_inv_left,(square,node1)),12,0).
fval(3,(comp_overlap_inv_left,(r,node2)),12,0).
fval(3,(comp_overlap_inv_left,(key1,key0)),12,0).
fval(3,(comp_overlap_inv_left,(r,triangle)),12,0).
fval(3,(comp_overlap_inv_left,(node2,node1)),12,0).
fval(3,(comp_overlap_inv_left,(key1,r)),12,0).
fval(3,(comp_overlap_inv_left,(r,key1)),12,0).
fval(3,(comp_overlap_inv_left,(square,triangle)),12,0).
fval(3,(comp_overlap_inv_left,(node1,key0)),12,0).
fval(3,(comp_overlap_inv_left,(square,node2)),12,0).
fval(3,(comp_overlap_inv_left,(square,key1)),12,0).
fval(3,(comp_overlap_inv_left,(node1,r)),12,0).
fval(3,(comp_overlap_inv_left,(node2,triangle)),13,0).
fval(3,(comp_overlap_inv_left,(key0,r)),13,0).
fval(3,(comp_overlap_inv_left,(triangle,key0)),13,0).
fval(3,(comp_overlap_inv_left,(node2,key1)),13,0).
fval(3,(comp_overlap_inv_left,(triangle,r)),13,0).
fval(3,(comp_overlap_inv_left,(key1,square)),13,0).
fval(3,(comp_overlap_inv_left,(node1,square)),13,0).
fval(3,(comp_overlap_inv_left,(r,key0)),13,0).
fval(3,(comp_overlap_inv_left,(key1,node1)),13,0).
fval(3,(comp_overlap_inv_left,(triangle,square)),13,0).
fval(3,(comp_overlap_inv_left,(key0,square)),13,0).
fval(3,(comp_overlap_inv_left,(square,r)),13,0).
fval(3,(comp_overlap_inv_left,(square,key0)),13,0).
fval(3,(comp_overlap_inv_left,(key1,triangle)),13,0).
fval(3,(comp_overlap_inv_left,(triangle,node1)),13,0).
fval(3,(comp_overlap_inv_left,(node2,key0)),13,0).
fval(3,(comp_overlap_inv_left,(key1,node2)),13,0).
fval(3,(comp_overlap_inv_left,(node2,r)),13,0).
fval(3,(comp_overlap_inv_left,(key0,node1)),13,0).
fval(3,(comp_overlap_inv_left,(node1,triangle)),13,0).
fval(3,(comp_overlap_inv_left,(r,square)),13,0).
fval(3,(comp_overlap_inv_left,(node1,key1)),13,0).
fval(3,(comp_overlap_inv_left,(node1,node2)),13,0).
fval(3,(comp_overlap_inv_left,(key0,triangle)),13,0).
fval(3,(comp_overlap_inv_left,(key0,node2)),13,0).
fval(3,(comp_overlap_inv_left,(triangle,node2)),13,0).
fval(3,(comp_overlap_inv_left,(triangle,key1)),13,0).
fval(3,(comp_overlap_inv_left,(r,node1)),13,0).
fval(3,(comp_overlap_inv_left,(key0,key1)),13,0).
fval(3,(comp_overlap_inv_left,(node2,square)),13,0).
fval(3,(comp_overlap_inv_left,(square,node1)),13,0).
fval(3,(comp_overlap_inv_left,(r,node2)),13,0).
fval(3,(comp_overlap_inv_left,(key1,key0)),13,0).
fval(3,(comp_overlap_inv_left,(r,triangle)),13,0).
fval(3,(comp_overlap_inv_left,(node2,node1)),13,0).
fval(3,(comp_overlap_inv_left,(key1,r)),13,0).
fval(3,(comp_overlap_inv_left,(r,key1)),13,0).
fval(3,(comp_overlap_inv_left,(square,triangle)),13,0).
fval(3,(comp_overlap_inv_left,(node1,key0)),13,0).
fval(3,(comp_overlap_inv_left,(square,node2)),13,0).
fval(3,(comp_overlap_inv_left,(square,key1)),13,0).
fval(3,(comp_overlap_inv_left,(node1,r)),13,0).
fval(3,(comp_overlap_inv_left,(key1,node2)),14,1).
fval(3,(comp_overlap_inv_left,(r,node2)),14,1).
fval(3,(comp_overlap_inv_left,(node2,triangle)),14,0).
fval(3,(comp_overlap_inv_left,(key0,r)),14,0).
fval(3,(comp_overlap_inv_left,(triangle,key0)),14,0).
fval(3,(comp_overlap_inv_left,(node2,key1)),14,0).
fval(3,(comp_overlap_inv_left,(triangle,r)),14,0).
fval(3,(comp_overlap_inv_left,(key1,square)),14,0).
fval(3,(comp_overlap_inv_left,(node1,square)),14,0).
fval(3,(comp_overlap_inv_left,(r,key0)),14,0).
fval(3,(comp_overlap_inv_left,(key1,node1)),14,0).
fval(3,(comp_overlap_inv_left,(triangle,square)),14,0).
fval(3,(comp_overlap_inv_left,(key0,square)),14,0).
fval(3,(comp_overlap_inv_left,(square,r)),14,0).
fval(3,(comp_overlap_inv_left,(square,key0)),14,0).
fval(3,(comp_overlap_inv_left,(key1,triangle)),14,0).
fval(3,(comp_overlap_inv_left,(triangle,node1)),14,0).
fval(3,(comp_overlap_inv_left,(node2,key0)),14,0).
fval(3,(comp_overlap_inv_left,(node2,r)),14,0).
fval(3,(comp_overlap_inv_left,(key0,node1)),14,0).
fval(3,(comp_overlap_inv_left,(node1,triangle)),14,0).
fval(3,(comp_overlap_inv_left,(r,square)),14,0).
fval(3,(comp_overlap_inv_left,(node1,key1)),14,0).
fval(3,(comp_overlap_inv_left,(node1,node2)),14,0).
fval(3,(comp_overlap_inv_left,(key0,triangle)),14,0).
fval(3,(comp_overlap_inv_left,(key0,node2)),14,0).
fval(3,(comp_overlap_inv_left,(triangle,node2)),14,0).
fval(3,(comp_overlap_inv_left,(triangle,key1)),14,0).
fval(3,(comp_overlap_inv_left,(r,node1)),14,0).
fval(3,(comp_overlap_inv_left,(key0,key1)),14,0).
fval(3,(comp_overlap_inv_left,(node2,square)),14,0).
fval(3,(comp_overlap_inv_left,(square,node1)),14,0).
fval(3,(comp_overlap_inv_left,(key1,key0)),14,0).
fval(3,(comp_overlap_inv_left,(r,triangle)),14,0).
fval(3,(comp_overlap_inv_left,(node2,node1)),14,0).
fval(3,(comp_overlap_inv_left,(key1,r)),14,0).
fval(3,(comp_overlap_inv_left,(r,key1)),14,0).
fval(3,(comp_overlap_inv_left,(square,triangle)),14,0).
fval(3,(comp_overlap_inv_left,(node1,key0)),14,0).
fval(3,(comp_overlap_inv_left,(square,node2)),14,0).
fval(3,(comp_overlap_inv_left,(square,key1)),14,0).
fval(3,(comp_overlap_inv_left,(node1,r)),14,0).
fval(3,(comp_overlap_inv_left,(node2,triangle)),15,0).
fval(3,(comp_overlap_inv_left,(key0,r)),15,0).
fval(3,(comp_overlap_inv_left,(triangle,key0)),15,0).
fval(3,(comp_overlap_inv_left,(node2,key1)),15,0).
fval(3,(comp_overlap_inv_left,(triangle,r)),15,0).
fval(3,(comp_overlap_inv_left,(key1,square)),15,0).
fval(3,(comp_overlap_inv_left,(node1,square)),15,0).
fval(3,(comp_overlap_inv_left,(r,key0)),15,0).
fval(3,(comp_overlap_inv_left,(key1,node1)),15,0).
fval(3,(comp_overlap_inv_left,(triangle,square)),15,0).
fval(3,(comp_overlap_inv_left,(key0,square)),15,0).
fval(3,(comp_overlap_inv_left,(square,r)),15,0).
fval(3,(comp_overlap_inv_left,(square,key0)),15,0).
fval(3,(comp_overlap_inv_left,(key1,triangle)),15,0).
fval(3,(comp_overlap_inv_left,(triangle,node1)),15,0).
fval(3,(comp_overlap_inv_left,(node2,key0)),15,0).
fval(3,(comp_overlap_inv_left,(key1,node2)),15,0).
fval(3,(comp_overlap_inv_left,(node2,r)),15,0).
fval(3,(comp_overlap_inv_left,(key0,node1)),15,0).
fval(3,(comp_overlap_inv_left,(node1,triangle)),15,0).
fval(3,(comp_overlap_inv_left,(r,square)),15,0).
fval(3,(comp_overlap_inv_left,(node1,key1)),15,0).
fval(3,(comp_overlap_inv_left,(node1,node2)),15,0).
fval(3,(comp_overlap_inv_left,(key0,triangle)),15,0).
fval(3,(comp_overlap_inv_left,(key0,node2)),15,0).
fval(3,(comp_overlap_inv_left,(triangle,node2)),15,0).
fval(3,(comp_overlap_inv_left,(triangle,key1)),15,0).
fval(3,(comp_overlap_inv_left,(r,node1)),15,0).
fval(3,(comp_overlap_inv_left,(key0,key1)),15,0).
fval(3,(comp_overlap_inv_left,(node2,square)),15,0).
fval(3,(comp_overlap_inv_left,(square,node1)),15,0).
fval(3,(comp_overlap_inv_left,(r,node2)),15,0).
fval(3,(comp_overlap_inv_left,(key1,key0)),15,0).
fval(3,(comp_overlap_inv_left,(r,triangle)),15,0).
fval(3,(comp_overlap_inv_left,(node2,node1)),15,0).
fval(3,(comp_overlap_inv_left,(key1,r)),15,0).
fval(3,(comp_overlap_inv_left,(r,key1)),15,0).
fval(3,(comp_overlap_inv_left,(square,triangle)),15,0).
fval(3,(comp_overlap_inv_left,(node1,key0)),15,0).
fval(3,(comp_overlap_inv_left,(square,node2)),15,0).
fval(3,(comp_overlap_inv_left,(square,key1)),15,0).
fval(3,(comp_overlap_inv_left,(node1,r)),15,0).
fval(3,(comp_overlap_inv_left,(r,node2)),16,1).
fval(3,(comp_overlap_inv_left,(node2,triangle)),16,0).
fval(3,(comp_overlap_inv_left,(key0,r)),16,0).
fval(3,(comp_overlap_inv_left,(triangle,key0)),16,0).
fval(3,(comp_overlap_inv_left,(node2,key1)),16,0).
fval(3,(comp_overlap_inv_left,(triangle,r)),16,0).
fval(3,(comp_overlap_inv_left,(key1,square)),16,0).
fval(3,(comp_overlap_inv_left,(node1,square)),16,0).
fval(3,(comp_overlap_inv_left,(r,key0)),16,0).
fval(3,(comp_overlap_inv_left,(key1,node1)),16,0).
fval(3,(comp_overlap_inv_left,(triangle,square)),16,0).
fval(3,(comp_overlap_inv_left,(key0,square)),16,0).
fval(3,(comp_overlap_inv_left,(square,r)),16,0).
fval(3,(comp_overlap_inv_left,(square,key0)),16,0).
fval(3,(comp_overlap_inv_left,(key1,triangle)),16,0).
fval(3,(comp_overlap_inv_left,(triangle,node1)),16,0).
fval(3,(comp_overlap_inv_left,(node2,key0)),16,0).
fval(3,(comp_overlap_inv_left,(key1,node2)),16,0).
fval(3,(comp_overlap_inv_left,(node2,r)),16,0).
fval(3,(comp_overlap_inv_left,(key0,node1)),16,0).
fval(3,(comp_overlap_inv_left,(node1,triangle)),16,0).
fval(3,(comp_overlap_inv_left,(r,square)),16,0).
fval(3,(comp_overlap_inv_left,(node1,key1)),16,0).
fval(3,(comp_overlap_inv_left,(node1,node2)),16,0).
fval(3,(comp_overlap_inv_left,(key0,triangle)),16,0).
fval(3,(comp_overlap_inv_left,(key0,node2)),16,0).
fval(3,(comp_overlap_inv_left,(triangle,node2)),16,0).
fval(3,(comp_overlap_inv_left,(triangle,key1)),16,0).
fval(3,(comp_overlap_inv_left,(r,node1)),16,0).
fval(3,(comp_overlap_inv_left,(key0,key1)),16,0).
fval(3,(comp_overlap_inv_left,(node2,square)),16,0).
fval(3,(comp_overlap_inv_left,(square,node1)),16,0).
fval(3,(comp_overlap_inv_left,(key1,key0)),16,0).
fval(3,(comp_overlap_inv_left,(r,triangle)),16,0).
fval(3,(comp_overlap_inv_left,(node2,node1)),16,0).
fval(3,(comp_overlap_inv_left,(key1,r)),16,0).
fval(3,(comp_overlap_inv_left,(r,key1)),16,0).
fval(3,(comp_overlap_inv_left,(square,triangle)),16,0).
fval(3,(comp_overlap_inv_left,(node1,key0)),16,0).
fval(3,(comp_overlap_inv_left,(square,node2)),16,0).
fval(3,(comp_overlap_inv_left,(square,key1)),16,0).
fval(3,(comp_overlap_inv_left,(node1,r)),16,0).
fval(3,(comp_overlap_inv_left,(r,node2)),17,1).
fval(3,(comp_overlap_inv_left,(node2,triangle)),17,0).
fval(3,(comp_overlap_inv_left,(key0,r)),17,0).
fval(3,(comp_overlap_inv_left,(triangle,key0)),17,0).
fval(3,(comp_overlap_inv_left,(node2,key1)),17,0).
fval(3,(comp_overlap_inv_left,(triangle,r)),17,0).
fval(3,(comp_overlap_inv_left,(key1,square)),17,0).
fval(3,(comp_overlap_inv_left,(node1,square)),17,0).
fval(3,(comp_overlap_inv_left,(r,key0)),17,0).
fval(3,(comp_overlap_inv_left,(key1,node1)),17,0).
fval(3,(comp_overlap_inv_left,(triangle,square)),17,0).
fval(3,(comp_overlap_inv_left,(key0,square)),17,0).
fval(3,(comp_overlap_inv_left,(square,r)),17,0).
fval(3,(comp_overlap_inv_left,(square,key0)),17,0).
fval(3,(comp_overlap_inv_left,(key1,triangle)),17,0).
fval(3,(comp_overlap_inv_left,(triangle,node1)),17,0).
fval(3,(comp_overlap_inv_left,(node2,key0)),17,0).
fval(3,(comp_overlap_inv_left,(key1,node2)),17,0).
fval(3,(comp_overlap_inv_left,(node2,r)),17,0).
fval(3,(comp_overlap_inv_left,(key0,node1)),17,0).
fval(3,(comp_overlap_inv_left,(node1,triangle)),17,0).
fval(3,(comp_overlap_inv_left,(r,square)),17,0).
fval(3,(comp_overlap_inv_left,(node1,key1)),17,0).
fval(3,(comp_overlap_inv_left,(node1,node2)),17,0).
fval(3,(comp_overlap_inv_left,(key0,triangle)),17,0).
fval(3,(comp_overlap_inv_left,(key0,node2)),17,0).
fval(3,(comp_overlap_inv_left,(triangle,node2)),17,0).
fval(3,(comp_overlap_inv_left,(triangle,key1)),17,0).
fval(3,(comp_overlap_inv_left,(r,node1)),17,0).
fval(3,(comp_overlap_inv_left,(key0,key1)),17,0).
fval(3,(comp_overlap_inv_left,(node2,square)),17,0).
fval(3,(comp_overlap_inv_left,(square,node1)),17,0).
fval(3,(comp_overlap_inv_left,(key1,key0)),17,0).
fval(3,(comp_overlap_inv_left,(r,triangle)),17,0).
fval(3,(comp_overlap_inv_left,(node2,node1)),17,0).
fval(3,(comp_overlap_inv_left,(key1,r)),17,0).
fval(3,(comp_overlap_inv_left,(r,key1)),17,0).
fval(3,(comp_overlap_inv_left,(square,triangle)),17,0).
fval(3,(comp_overlap_inv_left,(node1,key0)),17,0).
fval(3,(comp_overlap_inv_left,(square,node2)),17,0).
fval(3,(comp_overlap_inv_left,(square,key1)),17,0).
fval(3,(comp_overlap_inv_left,(node1,r)),17,0).
fval(3,(comp_overlap_inv_left,(node2,triangle)),18,0).
fval(3,(comp_overlap_inv_left,(key0,r)),18,0).
fval(3,(comp_overlap_inv_left,(triangle,key0)),18,0).
fval(3,(comp_overlap_inv_left,(node2,key1)),18,0).
fval(3,(comp_overlap_inv_left,(triangle,r)),18,0).
fval(3,(comp_overlap_inv_left,(key1,square)),18,0).
fval(3,(comp_overlap_inv_left,(node1,square)),18,0).
fval(3,(comp_overlap_inv_left,(r,key0)),18,0).
fval(3,(comp_overlap_inv_left,(key1,node1)),18,0).
fval(3,(comp_overlap_inv_left,(triangle,square)),18,0).
fval(3,(comp_overlap_inv_left,(key0,square)),18,0).
fval(3,(comp_overlap_inv_left,(square,r)),18,0).
fval(3,(comp_overlap_inv_left,(square,key0)),18,0).
fval(3,(comp_overlap_inv_left,(key1,triangle)),18,0).
fval(3,(comp_overlap_inv_left,(triangle,node1)),18,0).
fval(3,(comp_overlap_inv_left,(node2,key0)),18,0).
fval(3,(comp_overlap_inv_left,(key1,node2)),18,0).
fval(3,(comp_overlap_inv_left,(node2,r)),18,0).
fval(3,(comp_overlap_inv_left,(key0,node1)),18,0).
fval(3,(comp_overlap_inv_left,(node1,triangle)),18,0).
fval(3,(comp_overlap_inv_left,(r,square)),18,0).
fval(3,(comp_overlap_inv_left,(node1,key1)),18,0).
fval(3,(comp_overlap_inv_left,(node1,node2)),18,0).
fval(3,(comp_overlap_inv_left,(key0,triangle)),18,0).
fval(3,(comp_overlap_inv_left,(key0,node2)),18,0).
fval(3,(comp_overlap_inv_left,(triangle,node2)),18,0).
fval(3,(comp_overlap_inv_left,(triangle,key1)),18,0).
fval(3,(comp_overlap_inv_left,(r,node1)),18,0).
fval(3,(comp_overlap_inv_left,(key0,key1)),18,0).
fval(3,(comp_overlap_inv_left,(node2,square)),18,0).
fval(3,(comp_overlap_inv_left,(square,node1)),18,0).
fval(3,(comp_overlap_inv_left,(r,node2)),18,0).
fval(3,(comp_overlap_inv_left,(key1,key0)),18,0).
fval(3,(comp_overlap_inv_left,(r,triangle)),18,0).
fval(3,(comp_overlap_inv_left,(node2,node1)),18,0).
fval(3,(comp_overlap_inv_left,(key1,r)),18,0).
fval(3,(comp_overlap_inv_left,(r,key1)),18,0).
fval(3,(comp_overlap_inv_left,(square,triangle)),18,0).
fval(3,(comp_overlap_inv_left,(node1,key0)),18,0).
fval(3,(comp_overlap_inv_left,(square,node2)),18,0).
fval(3,(comp_overlap_inv_left,(square,key1)),18,0).
fval(3,(comp_overlap_inv_left,(node1,r)),18,0).
fval(3,(inv_smaller,(node2,key0)),1).
fval(3,(inv_smaller,(node1,key1)),1).
fval(3,(inv_smaller,(node2,key1)),1).
fval(3,(inv_smaller,(node1,key0)),1).
fval(3,(inv_smaller,(node2,r)),1).
fval(3,(inv_smaller,(node1,r)),1).
fval(3,(inv_smaller,(node2,triangle)),0).
fval(3,(inv_smaller,(key0,r)),0).
fval(3,(inv_smaller,(triangle,key0)),0).
fval(3,(inv_smaller,(triangle,r)),0).
fval(3,(inv_smaller,(key1,square)),0).
fval(3,(inv_smaller,(node1,square)),0).
fval(3,(inv_smaller,(r,key0)),0).
fval(3,(inv_smaller,(key1,node1)),0).
fval(3,(inv_smaller,(triangle,square)),0).
fval(3,(inv_smaller,(key0,square)),0).
fval(3,(inv_smaller,(square,r)),0).
fval(3,(inv_smaller,(square,key0)),0).
fval(3,(inv_smaller,(key1,triangle)),0).
fval(3,(inv_smaller,(triangle,node1)),0).
fval(3,(inv_smaller,(key1,node2)),0).
fval(3,(inv_smaller,(key0,node1)),0).
fval(3,(inv_smaller,(node1,triangle)),0).
fval(3,(inv_smaller,(node1,node2)),0).
fval(3,(inv_smaller,(r,square)),0).
fval(3,(inv_smaller,(key0,triangle)),0).
fval(3,(inv_smaller,(key0,node2)),0).
fval(3,(inv_smaller,(triangle,node2)),0).
fval(3,(inv_smaller,(triangle,key1)),0).
fval(3,(inv_smaller,(r,node1)),0).
fval(3,(inv_smaller,(key0,key1)),0).
fval(3,(inv_smaller,(node2,square)),0).
fval(3,(inv_smaller,(square,node1)),0).
fval(3,(inv_smaller,(r,node2)),0).
fval(3,(inv_smaller,(node2,node1)),0).
fval(3,(inv_smaller,(key1,r)),0).
fval(3,(inv_smaller,(key1,key0)),0).
fval(3,(inv_smaller,(r,triangle)),0).
fval(3,(inv_smaller,(r,key1)),0).
fval(3,(inv_smaller,(square,triangle)),0).
fval(3,(inv_smaller,(square,node2)),0).
fval(3,(inv_smaller,(square,key1)),0).
fval(3,(inter_key_er_smaller_lockedcell,(key1,)),0,1).
fval(3,(inter_key_er_smaller_lockedcell,(key0,)),0,1).
fval(3,(inter_key_er_smaller_lockedcell,(node1,)),0,0).
fval(3,(inter_key_er_smaller_lockedcell,(triangle,)),0,0).
fval(3,(inter_key_er_smaller_lockedcell,(node2,)),0,0).
fval(3,(inter_key_er_smaller_lockedcell,(r,)),0,0).
fval(3,(inter_key_er_smaller_lockedcell,(square,)),0,0).
fval(3,(inter_key_er_smaller_lockedcell,(key1,)),1,1).
fval(3,(inter_key_er_smaller_lockedcell,(key0,)),1,1).
fval(3,(inter_key_er_smaller_lockedcell,(node1,)),1,0).
fval(3,(inter_key_er_smaller_lockedcell,(triangle,)),1,0).
fval(3,(inter_key_er_smaller_lockedcell,(node2,)),1,0).
fval(3,(inter_key_er_smaller_lockedcell,(r,)),1,0).
fval(3,(inter_key_er_smaller_lockedcell,(square,)),1,0).
fval(3,(inter_key_er_smaller_lockedcell,(key1,)),2,1).
fval(3,(inter_key_er_smaller_lockedcell,(key0,)),2,1).
fval(3,(inter_key_er_smaller_lockedcell,(node1,)),2,0).
fval(3,(inter_key_er_smaller_lockedcell,(triangle,)),2,0).
fval(3,(inter_key_er_smaller_lockedcell,(node2,)),2,0).
fval(3,(inter_key_er_smaller_lockedcell,(r,)),2,0).
fval(3,(inter_key_er_smaller_lockedcell,(square,)),2,0).
fval(3,(inter_key_er_smaller_lockedcell,(node1,)),3,0).
fval(3,(inter_key_er_smaller_lockedcell,(triangle,)),3,0).
fval(3,(inter_key_er_smaller_lockedcell,(node2,)),3,0).
fval(3,(inter_key_er_smaller_lockedcell,(key1,)),3,0).
fval(3,(inter_key_er_smaller_lockedcell,(key0,)),3,0).
fval(3,(inter_key_er_smaller_lockedcell,(r,)),3,0).
fval(3,(inter_key_er_smaller_lockedcell,(square,)),3,0).
fval(3,(inter_key_er_smaller_lockedcell,(node1,)),4,0).
fval(3,(inter_key_er_smaller_lockedcell,(triangle,)),4,0).
fval(3,(inter_key_er_smaller_lockedcell,(node2,)),4,0).
fval(3,(inter_key_er_smaller_lockedcell,(key1,)),4,0).
fval(3,(inter_key_er_smaller_lockedcell,(key0,)),4,0).
fval(3,(inter_key_er_smaller_lockedcell,(r,)),4,0).
fval(3,(inter_key_er_smaller_lockedcell,(square,)),4,0).
fval(3,(inter_key_er_smaller_lockedcell,(node1,)),5,0).
fval(3,(inter_key_er_smaller_lockedcell,(triangle,)),5,0).
fval(3,(inter_key_er_smaller_lockedcell,(node2,)),5,0).
fval(3,(inter_key_er_smaller_lockedcell,(key1,)),5,0).
fval(3,(inter_key_er_smaller_lockedcell,(key0,)),5,0).
fval(3,(inter_key_er_smaller_lockedcell,(r,)),5,0).
fval(3,(inter_key_er_smaller_lockedcell,(square,)),5,0).
fval(3,(inter_key_er_smaller_lockedcell,(node1,)),6,0).
fval(3,(inter_key_er_smaller_lockedcell,(triangle,)),6,0).
fval(3,(inter_key_er_smaller_lockedcell,(node2,)),6,0).
fval(3,(inter_key_er_smaller_lockedcell,(key1,)),6,0).
fval(3,(inter_key_er_smaller_lockedcell,(key0,)),6,0).
fval(3,(inter_key_er_smaller_lockedcell,(r,)),6,0).
fval(3,(inter_key_er_smaller_lockedcell,(square,)),6,0).
fval(3,(inter_key_er_smaller_lockedcell,(node1,)),7,0).
fval(3,(inter_key_er_smaller_lockedcell,(triangle,)),7,0).
fval(3,(inter_key_er_smaller_lockedcell,(node2,)),7,0).
fval(3,(inter_key_er_smaller_lockedcell,(key1,)),7,0).
fval(3,(inter_key_er_smaller_lockedcell,(key0,)),7,0).
fval(3,(inter_key_er_smaller_lockedcell,(r,)),7,0).
fval(3,(inter_key_er_smaller_lockedcell,(square,)),7,0).
fval(3,(inter_key_er_smaller_lockedcell,(node1,)),8,0).
fval(3,(inter_key_er_smaller_lockedcell,(triangle,)),8,0).
fval(3,(inter_key_er_smaller_lockedcell,(node2,)),8,0).
fval(3,(inter_key_er_smaller_lockedcell,(key1,)),8,0).
fval(3,(inter_key_er_smaller_lockedcell,(key0,)),8,0).
fval(3,(inter_key_er_smaller_lockedcell,(r,)),8,0).
fval(3,(inter_key_er_smaller_lockedcell,(square,)),8,0).
fval(3,(inter_key_er_smaller_lockedcell,(node1,)),9,0).
fval(3,(inter_key_er_smaller_lockedcell,(triangle,)),9,0).
fval(3,(inter_key_er_smaller_lockedcell,(node2,)),9,0).
fval(3,(inter_key_er_smaller_lockedcell,(key1,)),9,0).
fval(3,(inter_key_er_smaller_lockedcell,(key0,)),9,0).
fval(3,(inter_key_er_smaller_lockedcell,(r,)),9,0).
fval(3,(inter_key_er_smaller_lockedcell,(square,)),9,0).
fval(3,(inter_key_er_smaller_lockedcell,(node1,)),10,0).
fval(3,(inter_key_er_smaller_lockedcell,(triangle,)),10,0).
fval(3,(inter_key_er_smaller_lockedcell,(node2,)),10,0).
fval(3,(inter_key_er_smaller_lockedcell,(key1,)),10,0).
fval(3,(inter_key_er_smaller_lockedcell,(key0,)),10,0).
fval(3,(inter_key_er_smaller_lockedcell,(r,)),10,0).
fval(3,(inter_key_er_smaller_lockedcell,(square,)),10,0).
fval(3,(inter_key_er_smaller_lockedcell,(node1,)),11,0).
fval(3,(inter_key_er_smaller_lockedcell,(triangle,)),11,0).
fval(3,(inter_key_er_smaller_lockedcell,(node2,)),11,0).
fval(3,(inter_key_er_smaller_lockedcell,(key1,)),11,0).
fval(3,(inter_key_er_smaller_lockedcell,(key0,)),11,0).
fval(3,(inter_key_er_smaller_lockedcell,(r,)),11,0).
fval(3,(inter_key_er_smaller_lockedcell,(square,)),11,0).
fval(3,(inter_key_er_smaller_lockedcell,(node1,)),12,0).
fval(3,(inter_key_er_smaller_lockedcell,(triangle,)),12,0).
fval(3,(inter_key_er_smaller_lockedcell,(node2,)),12,0).
fval(3,(inter_key_er_smaller_lockedcell,(key1,)),12,0).
fval(3,(inter_key_er_smaller_lockedcell,(key0,)),12,0).
fval(3,(inter_key_er_smaller_lockedcell,(r,)),12,0).
fval(3,(inter_key_er_smaller_lockedcell,(square,)),12,0).
fval(3,(inter_key_er_smaller_lockedcell,(node1,)),13,0).
fval(3,(inter_key_er_smaller_lockedcell,(triangle,)),13,0).
fval(3,(inter_key_er_smaller_lockedcell,(node2,)),13,0).
fval(3,(inter_key_er_smaller_lockedcell,(key1,)),13,0).
fval(3,(inter_key_er_smaller_lockedcell,(key0,)),13,0).
fval(3,(inter_key_er_smaller_lockedcell,(r,)),13,0).
fval(3,(inter_key_er_smaller_lockedcell,(square,)),13,0).
fval(3,(inter_key_er_smaller_lockedcell,(node1,)),14,0).
fval(3,(inter_key_er_smaller_lockedcell,(triangle,)),14,0).
fval(3,(inter_key_er_smaller_lockedcell,(node2,)),14,0).
fval(3,(inter_key_er_smaller_lockedcell,(key1,)),14,0).
fval(3,(inter_key_er_smaller_lockedcell,(key0,)),14,0).
fval(3,(inter_key_er_smaller_lockedcell,(r,)),14,0).
fval(3,(inter_key_er_smaller_lockedcell,(square,)),14,0).
fval(3,(inter_key_er_smaller_lockedcell,(node1,)),15,0).
fval(3,(inter_key_er_smaller_lockedcell,(triangle,)),15,0).
fval(3,(inter_key_er_smaller_lockedcell,(node2,)),15,0).
fval(3,(inter_key_er_smaller_lockedcell,(key1,)),15,0).
fval(3,(inter_key_er_smaller_lockedcell,(key0,)),15,0).
fval(3,(inter_key_er_smaller_lockedcell,(r,)),15,0).
fval(3,(inter_key_er_smaller_lockedcell,(square,)),15,0).
fval(3,(inter_key_er_smaller_lockedcell,(node1,)),16,0).
fval(3,(inter_key_er_smaller_lockedcell,(triangle,)),16,0).
fval(3,(inter_key_er_smaller_lockedcell,(node2,)),16,0).
fval(3,(inter_key_er_smaller_lockedcell,(key1,)),16,0).
fval(3,(inter_key_er_smaller_lockedcell,(key0,)),16,0).
fval(3,(inter_key_er_smaller_lockedcell,(r,)),16,0).
fval(3,(inter_key_er_smaller_lockedcell,(square,)),16,0).
fval(3,(inter_key_er_smaller_lockedcell,(node1,)),17,0).
fval(3,(inter_key_er_smaller_lockedcell,(triangle,)),17,0).
fval(3,(inter_key_er_smaller_lockedcell,(node2,)),17,0).
fval(3,(inter_key_er_smaller_lockedcell,(key1,)),17,0).
fval(3,(inter_key_er_smaller_lockedcell,(key0,)),17,0).
fval(3,(inter_key_er_smaller_lockedcell,(r,)),17,0).
fval(3,(inter_key_er_smaller_lockedcell,(square,)),17,0).
fval(3,(inter_key_er_smaller_lockedcell,(node1,)),18,0).
fval(3,(inter_key_er_smaller_lockedcell,(triangle,)),18,0).
fval(3,(inter_key_er_smaller_lockedcell,(node2,)),18,0).
fval(3,(inter_key_er_smaller_lockedcell,(key1,)),18,0).
fval(3,(inter_key_er_smaller_lockedcell,(key0,)),18,0).
fval(3,(inter_key_er_smaller_lockedcell,(r,)),18,0).
fval(3,(inter_key_er_smaller_lockedcell,(square,)),18,0).
fval(3,(shape,(key0,square)),1).
fval(3,(shape,(key1,triangle)),1).
fval(3,(shape,(node2,triangle)),1).
fval(3,(shape,(triangle,key0)),0).
fval(3,(shape,(triangle,r)),0).
fval(3,(shape,(key0,r)),0).
fval(3,(shape,(node2,key1)),0).
fval(3,(shape,(key1,square)),0).
fval(3,(shape,(node1,square)),0).
fval(3,(shape,(r,key0)),0).
fval(3,(shape,(key1,node1)),0).
fval(3,(shape,(triangle,square)),0).
fval(3,(shape,(square,r)),0).
fval(3,(shape,(square,key0)),0).
fval(3,(shape,(node2,key0)),0).
fval(3,(shape,(triangle,node1)),0).
fval(3,(shape,(key1,node2)),0).
fval(3,(shape,(node2,r)),0).
fval(3,(shape,(key0,node1)),0).
fval(3,(shape,(node1,triangle)),0).
fval(3,(shape,(node1,node2)),0).
fval(3,(shape,(node1,key1)),0).
fval(3,(shape,(r,square)),0).
fval(3,(shape,(key0,triangle)),0).
fval(3,(shape,(triangle,key1)),0).
fval(3,(shape,(r,node1)),0).
fval(3,(shape,(key0,node2)),0).
fval(3,(shape,(triangle,node2)),0).
fval(3,(shape,(key0,key1)),0).
fval(3,(shape,(node2,square)),0).
fval(3,(shape,(node1,key0)),0).
fval(3,(shape,(square,node1)),0).
fval(3,(shape,(r,node2)),0).
fval(3,(shape,(node2,node1)),0).
fval(3,(shape,(r,triangle)),0).
fval(3,(shape,(key1,r)),0).
fval(3,(shape,(key1,key0)),0).
fval(3,(shape,(r,key1)),0).
fval(3,(shape,(square,triangle)),0).
fval(3,(shape,(node1,r)),0).
fval(3,(shape,(square,node2)),0).
fval(3,(shape,(square,key1)),0).
fval(3,(comp_left_inv_left,(node2,triangle)),0).
fval(3,(comp_left_inv_left,(key0,r)),0).
fval(3,(comp_left_inv_left,(triangle,key0)),0).
fval(3,(comp_left_inv_left,(node2,key1)),0).
fval(3,(comp_left_inv_left,(triangle,r)),0).
fval(3,(comp_left_inv_left,(key1,square)),0).
fval(3,(comp_left_inv_left,(node1,square)),0).
fval(3,(comp_left_inv_left,(r,key0)),0).
fval(3,(comp_left_inv_left,(key1,node1)),0).
fval(3,(comp_left_inv_left,(triangle,square)),0).
fval(3,(comp_left_inv_left,(key0,square)),0).
fval(3,(comp_left_inv_left,(square,r)),0).
fval(3,(comp_left_inv_left,(square,key0)),0).
fval(3,(comp_left_inv_left,(node2,key0)),0).
fval(3,(comp_left_inv_left,(triangle,node1)),0).
fval(3,(comp_left_inv_left,(key1,triangle)),0).
fval(3,(comp_left_inv_left,(key1,node2)),0).
fval(3,(comp_left_inv_left,(node2,r)),0).
fval(3,(comp_left_inv_left,(key0,node1)),0).
fval(3,(comp_left_inv_left,(node1,triangle)),0).
fval(3,(comp_left_inv_left,(r,square)),0).
fval(3,(comp_left_inv_left,(node1,key1)),0).
fval(3,(comp_left_inv_left,(node1,node2)),0).
fval(3,(comp_left_inv_left,(key0,triangle)),0).
fval(3,(comp_left_inv_left,(key0,node2)),0).
fval(3,(comp_left_inv_left,(triangle,node2)),0).
fval(3,(comp_left_inv_left,(triangle,key1)),0).
fval(3,(comp_left_inv_left,(r,node1)),0).
fval(3,(comp_left_inv_left,(key0,key1)),0).
fval(3,(comp_left_inv_left,(node2,square)),0).
fval(3,(comp_left_inv_left,(node1,key0)),0).
fval(3,(comp_left_inv_left,(square,node1)),0).
fval(3,(comp_left_inv_left,(r,node2)),0).
fval(3,(comp_left_inv_left,(key1,r)),0).
fval(3,(comp_left_inv_left,(key1,key0)),0).
fval(3,(comp_left_inv_left,(r,triangle)),0).
fval(3,(comp_left_inv_left,(node2,node1)),0).
fval(3,(comp_left_inv_left,(r,key1)),0).
fval(3,(comp_left_inv_left,(square,triangle)),0).
fval(3,(comp_left_inv_left,(node1,r)),0).
fval(3,(comp_left_inv_left,(square,node2)),0).
fval(3,(comp_left_inv_left,(square,key1)),0).
fval(3,(inv_left,(node1,node2)),1).
fval(3,(inv_left,(node2,triangle)),0).
fval(3,(inv_left,(triangle,key0)),0).
fval(3,(inv_left,(triangle,r)),0).
fval(3,(inv_left,(key0,r)),0).
fval(3,(inv_left,(node2,key1)),0).
fval(3,(inv_left,(key1,square)),0).
fval(3,(inv_left,(node1,square)),0).
fval(3,(inv_left,(r,key0)),0).
fval(3,(inv_left,(key1,node1)),0).
fval(3,(inv_left,(triangle,square)),0).
fval(3,(inv_left,(key0,square)),0).
fval(3,(inv_left,(square,key0)),0).
fval(3,(inv_left,(square,r)),0).
fval(3,(inv_left,(key1,triangle)),0).
fval(3,(inv_left,(triangle,node1)),0).
fval(3,(inv_left,(node2,key0)),0).
fval(3,(inv_left,(key1,node2)),0).
fval(3,(inv_left,(node2,r)),0).
fval(3,(inv_left,(key0,node1)),0).
fval(3,(inv_left,(node1,triangle)),0).
fval(3,(inv_left,(r,square)),0).
fval(3,(inv_left,(node1,key1)),0).
fval(3,(inv_left,(key0,triangle)),0).
fval(3,(inv_left,(triangle,node2)),0).
fval(3,(inv_left,(triangle,key1)),0).
fval(3,(inv_left,(r,node1)),0).
fval(3,(inv_left,(key0,node2)),0).
fval(3,(inv_left,(key0,key1)),0).
fval(3,(inv_left,(node2,square)),0).
fval(3,(inv_left,(node1,key0)),0).
fval(3,(inv_left,(square,node1)),0).
fval(3,(inv_left,(r,node2)),0).
fval(3,(inv_left,(key1,key0)),0).
fval(3,(inv_left,(r,triangle)),0).
fval(3,(inv_left,(node2,node1)),0).
fval(3,(inv_left,(key1,r)),0).
fval(3,(inv_left,(r,key1)),0).
fval(3,(inv_left,(square,triangle)),0).
fval(3,(inv_left,(node1,r)),0).
fval(3,(inv_left,(square,node2)),0).
fval(3,(inv_left,(square,key1)),0).
fval(3,(comp_inv_below_inv_overlap,(node2,triangle)),0).
fval(3,(comp_inv_below_inv_overlap,(triangle,r)),0).
fval(3,(comp_inv_below_inv_overlap,(key0,r)),0).
fval(3,(comp_inv_below_inv_overlap,(node2,key1)),0).
fval(3,(comp_inv_below_inv_overlap,(triangle,key0)),0).
fval(3,(comp_inv_below_inv_overlap,(key1,square)),0).
fval(3,(comp_inv_below_inv_overlap,(node1,square)),0).
fval(3,(comp_inv_below_inv_overlap,(r,key0)),0).
fval(3,(comp_inv_below_inv_overlap,(key1,node1)),0).
fval(3,(comp_inv_below_inv_overlap,(triangle,square)),0).
fval(3,(comp_inv_below_inv_overlap,(key0,square)),0).
fval(3,(comp_inv_below_inv_overlap,(square,r)),0).
fval(3,(comp_inv_below_inv_overlap,(square,key0)),0).
fval(3,(comp_inv_below_inv_overlap,(key1,triangle)),0).
fval(3,(comp_inv_below_inv_overlap,(triangle,node1)),0).
fval(3,(comp_inv_below_inv_overlap,(node2,key0)),0).
fval(3,(comp_inv_below_inv_overlap,(key1,node2)),0).
fval(3,(comp_inv_below_inv_overlap,(node2,r)),0).
fval(3,(comp_inv_below_inv_overlap,(key0,node1)),0).
fval(3,(comp_inv_below_inv_overlap,(node1,triangle)),0).
fval(3,(comp_inv_below_inv_overlap,(node1,node2)),0).
fval(3,(comp_inv_below_inv_overlap,(r,square)),0).
fval(3,(comp_inv_below_inv_overlap,(node1,key1)),0).
fval(3,(comp_inv_below_inv_overlap,(key0,triangle)),0).
fval(3,(comp_inv_below_inv_overlap,(key0,node2)),0).
fval(3,(comp_inv_below_inv_overlap,(r,node1)),0).
fval(3,(comp_inv_below_inv_overlap,(triangle,node2)),0).
fval(3,(comp_inv_below_inv_overlap,(triangle,key1)),0).
fval(3,(comp_inv_below_inv_overlap,(key0,key1)),0).
fval(3,(comp_inv_below_inv_overlap,(node1,key0)),0).
fval(3,(comp_inv_below_inv_overlap,(node2,square)),0).
fval(3,(comp_inv_below_inv_overlap,(square,node1)),0).
fval(3,(comp_inv_below_inv_overlap,(r,node2)),0).
fval(3,(comp_inv_below_inv_overlap,(node2,node1)),0).
fval(3,(comp_inv_below_inv_overlap,(r,triangle)),0).
fval(3,(comp_inv_below_inv_overlap,(key1,r)),0).
fval(3,(comp_inv_below_inv_overlap,(key1,key0)),0).
fval(3,(comp_inv_below_inv_overlap,(r,key1)),0).
fval(3,(comp_inv_below_inv_overlap,(square,triangle)),0).
fval(3,(comp_inv_below_inv_overlap,(node1,r)),0).
fval(3,(comp_inv_below_inv_overlap,(square,node2)),0).
fval(3,(comp_inv_below_inv_overlap,(square,key1)),0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node1,)),0,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(triangle,)),0,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node2,)),0,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key1,)),0,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(r,)),0,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key0,)),0,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(square,)),0,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node1,)),1,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(triangle,)),1,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node2,)),1,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key1,)),1,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(r,)),1,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key0,)),1,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(square,)),1,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node1,)),2,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(triangle,)),2,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node2,)),2,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key1,)),2,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(r,)),2,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key0,)),2,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(square,)),2,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node1,)),3,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(triangle,)),3,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node2,)),3,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key1,)),3,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(r,)),3,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key0,)),3,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(square,)),3,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node2,)),4,1).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node1,)),4,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(triangle,)),4,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key1,)),4,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(r,)),4,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key0,)),4,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(square,)),4,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node1,)),5,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(triangle,)),5,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node2,)),5,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key1,)),5,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(r,)),5,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key0,)),5,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(square,)),5,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node2,)),6,1).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node1,)),6,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(triangle,)),6,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key1,)),6,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(r,)),6,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key0,)),6,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(square,)),6,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node2,)),7,1).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node1,)),7,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(triangle,)),7,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key1,)),7,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(r,)),7,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key0,)),7,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(square,)),7,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node1,)),8,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(triangle,)),8,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node2,)),8,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key1,)),8,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(r,)),8,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key0,)),8,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(square,)),8,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node1,)),9,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(triangle,)),9,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node2,)),9,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key1,)),9,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(r,)),9,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key0,)),9,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(square,)),9,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node2,)),10,1).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node1,)),10,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(triangle,)),10,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key1,)),10,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(r,)),10,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key0,)),10,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(square,)),10,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node1,)),11,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(triangle,)),11,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node2,)),11,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key1,)),11,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(r,)),11,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key0,)),11,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(square,)),11,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node2,)),12,1).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node1,)),12,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(triangle,)),12,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key1,)),12,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(r,)),12,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key0,)),12,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(square,)),12,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node2,)),13,1).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node1,)),13,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(triangle,)),13,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key1,)),13,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(r,)),13,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key0,)),13,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(square,)),13,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node1,)),14,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(triangle,)),14,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node2,)),14,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key1,)),14,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(r,)),14,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key0,)),14,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(square,)),14,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node2,)),15,1).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node1,)),15,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(triangle,)),15,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key1,)),15,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(r,)),15,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key0,)),15,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(square,)),15,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node1,)),16,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(triangle,)),16,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node2,)),16,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key1,)),16,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(r,)),16,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key0,)),16,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(square,)),16,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node1,)),17,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(triangle,)),17,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node2,)),17,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key1,)),17,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(r,)),17,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key0,)),17,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(square,)),17,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node2,)),18,1).
fval(3,(inter_er_shape_verum_er_overlap_robot,(node1,)),18,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(triangle,)),18,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key1,)),18,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(r,)),18,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(key0,)),18,0).
fval(3,(inter_er_shape_verum_er_overlap_robot,(square,)),18,0).
fval(3,(inter_er_below_verum_er_overlap_verum,(node1,)),0).
fval(3,(inter_er_below_verum_er_overlap_verum,(triangle,)),0).
fval(3,(inter_er_below_verum_er_overlap_verum,(node2,)),0).
fval(3,(inter_er_below_verum_er_overlap_verum,(key1,)),0).
fval(3,(inter_er_below_verum_er_overlap_verum,(r,)),0).
fval(3,(inter_er_below_verum_er_overlap_verum,(key0,)),0).
fval(3,(inter_er_below_verum_er_overlap_verum,(square,)),0).
fval(3,(er_below_verum,(node1,)),0).
fval(3,(er_below_verum,(triangle,)),0).
fval(3,(er_below_verum,(node2,)),0).
fval(3,(er_below_verum,(key1,)),0).
fval(3,(er_below_verum,(r,)),0).
fval(3,(er_below_verum,(key0,)),0).
fval(3,(er_below_verum,(square,)),0).
fval(3,(er_below_opencell,(node1,)),0).
fval(3,(er_below_opencell,(triangle,)),0).
fval(3,(er_below_opencell,(node2,)),0).
fval(3,(er_below_opencell,(key1,)),0).
fval(3,(er_below_opencell,(r,)),0).
fval(3,(er_below_opencell,(key0,)),0).
fval(3,(er_below_opencell,(square,)),0).
fval(3,(inter_er_overlap_robot_er_below_lockedcell,(node1,)),0).
fval(3,(inter_er_overlap_robot_er_below_lockedcell,(triangle,)),0).
fval(3,(inter_er_overlap_robot_er_below_lockedcell,(node2,)),0).
fval(3,(inter_er_overlap_robot_er_below_lockedcell,(key1,)),0).
fval(3,(inter_er_overlap_robot_er_below_lockedcell,(r,)),0).
fval(3,(inter_er_overlap_robot_er_below_lockedcell,(key0,)),0).
fval(3,(inter_er_overlap_robot_er_below_lockedcell,(square,)),0).
fval(3,(inter_er_left_verum_er_overlap_key,(node1,)),0,0).
fval(3,(inter_er_left_verum_er_overlap_key,(triangle,)),0,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node2,)),0,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key1,)),0,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key0,)),0,0).
fval(3,(inter_er_left_verum_er_overlap_key,(r,)),0,0).
fval(3,(inter_er_left_verum_er_overlap_key,(square,)),0,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node1,)),1,0).
fval(3,(inter_er_left_verum_er_overlap_key,(triangle,)),1,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node2,)),1,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key1,)),1,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key0,)),1,0).
fval(3,(inter_er_left_verum_er_overlap_key,(r,)),1,0).
fval(3,(inter_er_left_verum_er_overlap_key,(square,)),1,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node1,)),2,0).
fval(3,(inter_er_left_verum_er_overlap_key,(triangle,)),2,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node2,)),2,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key1,)),2,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key0,)),2,0).
fval(3,(inter_er_left_verum_er_overlap_key,(r,)),2,0).
fval(3,(inter_er_left_verum_er_overlap_key,(square,)),2,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node1,)),3,0).
fval(3,(inter_er_left_verum_er_overlap_key,(triangle,)),3,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node2,)),3,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key1,)),3,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key0,)),3,0).
fval(3,(inter_er_left_verum_er_overlap_key,(r,)),3,0).
fval(3,(inter_er_left_verum_er_overlap_key,(square,)),3,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node1,)),4,0).
fval(3,(inter_er_left_verum_er_overlap_key,(triangle,)),4,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node2,)),4,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key1,)),4,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key0,)),4,0).
fval(3,(inter_er_left_verum_er_overlap_key,(r,)),4,0).
fval(3,(inter_er_left_verum_er_overlap_key,(square,)),4,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node1,)),5,0).
fval(3,(inter_er_left_verum_er_overlap_key,(triangle,)),5,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node2,)),5,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key1,)),5,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key0,)),5,0).
fval(3,(inter_er_left_verum_er_overlap_key,(r,)),5,0).
fval(3,(inter_er_left_verum_er_overlap_key,(square,)),5,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node2,)),6,1).
fval(3,(inter_er_left_verum_er_overlap_key,(node1,)),6,0).
fval(3,(inter_er_left_verum_er_overlap_key,(triangle,)),6,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key1,)),6,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key0,)),6,0).
fval(3,(inter_er_left_verum_er_overlap_key,(r,)),6,0).
fval(3,(inter_er_left_verum_er_overlap_key,(square,)),6,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node1,)),7,0).
fval(3,(inter_er_left_verum_er_overlap_key,(triangle,)),7,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node2,)),7,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key1,)),7,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key0,)),7,0).
fval(3,(inter_er_left_verum_er_overlap_key,(r,)),7,0).
fval(3,(inter_er_left_verum_er_overlap_key,(square,)),7,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node1,)),8,0).
fval(3,(inter_er_left_verum_er_overlap_key,(triangle,)),8,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node2,)),8,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key1,)),8,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key0,)),8,0).
fval(3,(inter_er_left_verum_er_overlap_key,(r,)),8,0).
fval(3,(inter_er_left_verum_er_overlap_key,(square,)),8,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node2,)),9,1).
fval(3,(inter_er_left_verum_er_overlap_key,(node1,)),9,0).
fval(3,(inter_er_left_verum_er_overlap_key,(triangle,)),9,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key1,)),9,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key0,)),9,0).
fval(3,(inter_er_left_verum_er_overlap_key,(r,)),9,0).
fval(3,(inter_er_left_verum_er_overlap_key,(square,)),9,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node1,)),10,0).
fval(3,(inter_er_left_verum_er_overlap_key,(triangle,)),10,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node2,)),10,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key1,)),10,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key0,)),10,0).
fval(3,(inter_er_left_verum_er_overlap_key,(r,)),10,0).
fval(3,(inter_er_left_verum_er_overlap_key,(square,)),10,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node2,)),11,1).
fval(3,(inter_er_left_verum_er_overlap_key,(node1,)),11,0).
fval(3,(inter_er_left_verum_er_overlap_key,(triangle,)),11,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key1,)),11,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key0,)),11,0).
fval(3,(inter_er_left_verum_er_overlap_key,(r,)),11,0).
fval(3,(inter_er_left_verum_er_overlap_key,(square,)),11,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node2,)),12,1).
fval(3,(inter_er_left_verum_er_overlap_key,(node1,)),12,0).
fval(3,(inter_er_left_verum_er_overlap_key,(triangle,)),12,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key1,)),12,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key0,)),12,0).
fval(3,(inter_er_left_verum_er_overlap_key,(r,)),12,0).
fval(3,(inter_er_left_verum_er_overlap_key,(square,)),12,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node2,)),13,1).
fval(3,(inter_er_left_verum_er_overlap_key,(node1,)),13,0).
fval(3,(inter_er_left_verum_er_overlap_key,(triangle,)),13,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key1,)),13,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key0,)),13,0).
fval(3,(inter_er_left_verum_er_overlap_key,(r,)),13,0).
fval(3,(inter_er_left_verum_er_overlap_key,(square,)),13,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node2,)),14,1).
fval(3,(inter_er_left_verum_er_overlap_key,(node1,)),14,0).
fval(3,(inter_er_left_verum_er_overlap_key,(triangle,)),14,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key1,)),14,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key0,)),14,0).
fval(3,(inter_er_left_verum_er_overlap_key,(r,)),14,0).
fval(3,(inter_er_left_verum_er_overlap_key,(square,)),14,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node2,)),15,1).
fval(3,(inter_er_left_verum_er_overlap_key,(node1,)),15,0).
fval(3,(inter_er_left_verum_er_overlap_key,(triangle,)),15,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key1,)),15,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key0,)),15,0).
fval(3,(inter_er_left_verum_er_overlap_key,(r,)),15,0).
fval(3,(inter_er_left_verum_er_overlap_key,(square,)),15,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node2,)),16,1).
fval(3,(inter_er_left_verum_er_overlap_key,(node1,)),16,0).
fval(3,(inter_er_left_verum_er_overlap_key,(triangle,)),16,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key1,)),16,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key0,)),16,0).
fval(3,(inter_er_left_verum_er_overlap_key,(r,)),16,0).
fval(3,(inter_er_left_verum_er_overlap_key,(square,)),16,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node2,)),17,1).
fval(3,(inter_er_left_verum_er_overlap_key,(node1,)),17,0).
fval(3,(inter_er_left_verum_er_overlap_key,(triangle,)),17,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key1,)),17,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key0,)),17,0).
fval(3,(inter_er_left_verum_er_overlap_key,(r,)),17,0).
fval(3,(inter_er_left_verum_er_overlap_key,(square,)),17,0).
fval(3,(inter_er_left_verum_er_overlap_key,(node2,)),18,1).
fval(3,(inter_er_left_verum_er_overlap_key,(node1,)),18,0).
fval(3,(inter_er_left_verum_er_overlap_key,(triangle,)),18,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key1,)),18,0).
fval(3,(inter_er_left_verum_er_overlap_key,(key0,)),18,0).
fval(3,(inter_er_left_verum_er_overlap_key,(r,)),18,0).
fval(3,(inter_er_left_verum_er_overlap_key,(square,)),18,0).
fval(3,(er_overlap_verum,(key1,)),0,1).
fval(3,(er_overlap_verum,(key0,)),0,1).
fval(3,(er_overlap_verum,(r,)),0,1).
fval(3,(er_overlap_verum,(node1,)),0,1).
fval(3,(er_overlap_verum,(triangle,)),0,0).
fval(3,(er_overlap_verum,(square,)),0,0).
fval(3,(er_overlap_verum,(node2,)),0,0).
fval(3,(er_overlap_verum,(key1,)),1,1).
fval(3,(er_overlap_verum,(node1,)),1,1).
fval(3,(er_overlap_verum,(r,)),1,1).
fval(3,(er_overlap_verum,(key0,)),1,0).
fval(3,(er_overlap_verum,(triangle,)),1,0).
fval(3,(er_overlap_verum,(square,)),1,0).
fval(3,(er_overlap_verum,(node2,)),1,0).
fval(3,(er_overlap_verum,(key0,)),2,1).
fval(3,(er_overlap_verum,(r,)),2,1).
fval(3,(er_overlap_verum,(node1,)),2,1).
fval(3,(er_overlap_verum,(key1,)),2,0).
fval(3,(er_overlap_verum,(triangle,)),2,0).
fval(3,(er_overlap_verum,(square,)),2,0).
fval(3,(er_overlap_verum,(node2,)),2,0).
fval(3,(er_overlap_verum,(key0,)),3,1).
fval(3,(er_overlap_verum,(r,)),3,1).
fval(3,(er_overlap_verum,(node1,)),3,1).
fval(3,(er_overlap_verum,(key1,)),3,0).
fval(3,(er_overlap_verum,(triangle,)),3,0).
fval(3,(er_overlap_verum,(square,)),3,0).
fval(3,(er_overlap_verum,(node2,)),3,0).
fval(3,(er_overlap_verum,(key0,)),4,1).
fval(3,(er_overlap_verum,(r,)),4,1).
fval(3,(er_overlap_verum,(node1,)),4,1).
fval(3,(er_overlap_verum,(node2,)),4,1).
fval(3,(er_overlap_verum,(key1,)),4,0).
fval(3,(er_overlap_verum,(triangle,)),4,0).
fval(3,(er_overlap_verum,(square,)),4,0).
fval(3,(er_overlap_verum,(key1,)),5,1).
fval(3,(er_overlap_verum,(key0,)),5,1).
fval(3,(er_overlap_verum,(r,)),5,1).
fval(3,(er_overlap_verum,(node1,)),5,1).
fval(3,(er_overlap_verum,(triangle,)),5,0).
fval(3,(er_overlap_verum,(square,)),5,0).
fval(3,(er_overlap_verum,(node2,)),5,0).
fval(3,(er_overlap_verum,(node1,)),6,1).
fval(3,(er_overlap_verum,(node2,)),6,1).
fval(3,(er_overlap_verum,(key1,)),6,1).
fval(3,(er_overlap_verum,(r,)),6,1).
fval(3,(er_overlap_verum,(key0,)),6,1).
fval(3,(er_overlap_verum,(triangle,)),6,0).
fval(3,(er_overlap_verum,(square,)),6,0).
fval(3,(er_overlap_verum,(node1,)),7,1).
fval(3,(er_overlap_verum,(node2,)),7,1).
fval(3,(er_overlap_verum,(key1,)),7,1).
fval(3,(er_overlap_verum,(r,)),7,1).
fval(3,(er_overlap_verum,(key0,)),7,1).
fval(3,(er_overlap_verum,(triangle,)),7,0).
fval(3,(er_overlap_verum,(square,)),7,0).
fval(3,(er_overlap_verum,(key1,)),8,1).
fval(3,(er_overlap_verum,(node1,)),8,1).
fval(3,(er_overlap_verum,(r,)),8,1).
fval(3,(er_overlap_verum,(key0,)),8,0).
fval(3,(er_overlap_verum,(triangle,)),8,0).
fval(3,(er_overlap_verum,(square,)),8,0).
fval(3,(er_overlap_verum,(node2,)),8,0).
fval(3,(er_overlap_verum,(node1,)),9,1).
fval(3,(er_overlap_verum,(node2,)),9,1).
fval(3,(er_overlap_verum,(key1,)),9,1).
fval(3,(er_overlap_verum,(r,)),9,1).
fval(3,(er_overlap_verum,(key0,)),9,1).
fval(3,(er_overlap_verum,(triangle,)),9,0).
fval(3,(er_overlap_verum,(square,)),9,0).
fval(3,(er_overlap_verum,(key1,)),10,1).
fval(3,(er_overlap_verum,(node1,)),10,1).
fval(3,(er_overlap_verum,(r,)),10,1).
fval(3,(er_overlap_verum,(node2,)),10,1).
fval(3,(er_overlap_verum,(key0,)),10,0).
fval(3,(er_overlap_verum,(triangle,)),10,0).
fval(3,(er_overlap_verum,(square,)),10,0).
fval(3,(er_overlap_verum,(key1,)),11,1).
fval(3,(er_overlap_verum,(node1,)),11,1).
fval(3,(er_overlap_verum,(r,)),11,1).
fval(3,(er_overlap_verum,(node2,)),11,1).
fval(3,(er_overlap_verum,(key0,)),11,0).
fval(3,(er_overlap_verum,(triangle,)),11,0).
fval(3,(er_overlap_verum,(square,)),11,0).
fval(3,(er_overlap_verum,(node1,)),12,1).
fval(3,(er_overlap_verum,(node2,)),12,1).
fval(3,(er_overlap_verum,(key1,)),12,1).
fval(3,(er_overlap_verum,(r,)),12,1).
fval(3,(er_overlap_verum,(key0,)),12,1).
fval(3,(er_overlap_verum,(triangle,)),12,0).
fval(3,(er_overlap_verum,(square,)),12,0).
fval(3,(er_overlap_verum,(key1,)),13,1).
fval(3,(er_overlap_verum,(r,)),13,1).
fval(3,(er_overlap_verum,(node2,)),13,1).
fval(3,(er_overlap_verum,(node1,)),13,0).
fval(3,(er_overlap_verum,(key0,)),13,0).
fval(3,(er_overlap_verum,(triangle,)),13,0).
fval(3,(er_overlap_verum,(square,)),13,0).
fval(3,(er_overlap_verum,(node1,)),14,1).
fval(3,(er_overlap_verum,(node2,)),14,1).
fval(3,(er_overlap_verum,(key1,)),14,1).
fval(3,(er_overlap_verum,(r,)),14,1).
fval(3,(er_overlap_verum,(key0,)),14,1).
fval(3,(er_overlap_verum,(triangle,)),14,0).
fval(3,(er_overlap_verum,(square,)),14,0).
fval(3,(er_overlap_verum,(key1,)),15,1).
fval(3,(er_overlap_verum,(key0,)),15,1).
fval(3,(er_overlap_verum,(r,)),15,1).
fval(3,(er_overlap_verum,(node2,)),15,1).
fval(3,(er_overlap_verum,(node1,)),15,0).
fval(3,(er_overlap_verum,(triangle,)),15,0).
fval(3,(er_overlap_verum,(square,)),15,0).
fval(3,(er_overlap_verum,(key0,)),16,1).
fval(3,(er_overlap_verum,(r,)),16,1).
fval(3,(er_overlap_verum,(node1,)),16,1).
fval(3,(er_overlap_verum,(node2,)),16,1).
fval(3,(er_overlap_verum,(key1,)),16,0).
fval(3,(er_overlap_verum,(triangle,)),16,0).
fval(3,(er_overlap_verum,(square,)),16,0).
fval(3,(er_overlap_verum,(node1,)),17,1).
fval(3,(er_overlap_verum,(node2,)),17,1).
fval(3,(er_overlap_verum,(key1,)),17,1).
fval(3,(er_overlap_verum,(r,)),17,1).
fval(3,(er_overlap_verum,(key0,)),17,1).
fval(3,(er_overlap_verum,(triangle,)),17,0).
fval(3,(er_overlap_verum,(square,)),17,0).
fval(3,(er_overlap_verum,(key0,)),18,1).
fval(3,(er_overlap_verum,(r,)),18,1).
fval(3,(er_overlap_verum,(node2,)),18,1).
fval(3,(er_overlap_verum,(key1,)),18,0).
fval(3,(er_overlap_verum,(node1,)),18,0).
fval(3,(er_overlap_verum,(triangle,)),18,0).
fval(3,(er_overlap_verum,(square,)),18,0).
fval(3,(opencell,(node1,)),0,1).
fval(3,(opencell,(triangle,)),0,0).
fval(3,(opencell,(node2,)),0,0).
fval(3,(opencell,(key1,)),0,0).
fval(3,(opencell,(r,)),0,0).
fval(3,(opencell,(key0,)),0,0).
fval(3,(opencell,(square,)),0,0).
fval(3,(opencell,(node1,)),1,1).
fval(3,(opencell,(triangle,)),1,0).
fval(3,(opencell,(node2,)),1,0).
fval(3,(opencell,(key1,)),1,0).
fval(3,(opencell,(r,)),1,0).
fval(3,(opencell,(key0,)),1,0).
fval(3,(opencell,(square,)),1,0).
fval(3,(opencell,(node1,)),2,1).
fval(3,(opencell,(triangle,)),2,0).
fval(3,(opencell,(node2,)),2,0).
fval(3,(opencell,(key1,)),2,0).
fval(3,(opencell,(r,)),2,0).
fval(3,(opencell,(key0,)),2,0).
fval(3,(opencell,(square,)),2,0).
fval(3,(opencell,(node1,)),3,1).
fval(3,(opencell,(node2,)),3,1).
fval(3,(opencell,(triangle,)),3,0).
fval(3,(opencell,(key1,)),3,0).
fval(3,(opencell,(r,)),3,0).
fval(3,(opencell,(key0,)),3,0).
fval(3,(opencell,(square,)),3,0).
fval(3,(opencell,(node1,)),4,1).
fval(3,(opencell,(node2,)),4,1).
fval(3,(opencell,(triangle,)),4,0).
fval(3,(opencell,(key1,)),4,0).
fval(3,(opencell,(r,)),4,0).
fval(3,(opencell,(key0,)),4,0).
fval(3,(opencell,(square,)),4,0).
fval(3,(opencell,(node1,)),5,1).
fval(3,(opencell,(node2,)),5,1).
fval(3,(opencell,(triangle,)),5,0).
fval(3,(opencell,(key1,)),5,0).
fval(3,(opencell,(r,)),5,0).
fval(3,(opencell,(key0,)),5,0).
fval(3,(opencell,(square,)),5,0).
fval(3,(opencell,(node1,)),6,1).
fval(3,(opencell,(node2,)),6,1).
fval(3,(opencell,(triangle,)),6,0).
fval(3,(opencell,(key1,)),6,0).
fval(3,(opencell,(r,)),6,0).
fval(3,(opencell,(key0,)),6,0).
fval(3,(opencell,(square,)),6,0).
fval(3,(opencell,(node1,)),7,1).
fval(3,(opencell,(node2,)),7,1).
fval(3,(opencell,(triangle,)),7,0).
fval(3,(opencell,(key1,)),7,0).
fval(3,(opencell,(r,)),7,0).
fval(3,(opencell,(key0,)),7,0).
fval(3,(opencell,(square,)),7,0).
fval(3,(opencell,(node1,)),8,1).
fval(3,(opencell,(node2,)),8,1).
fval(3,(opencell,(triangle,)),8,0).
fval(3,(opencell,(key1,)),8,0).
fval(3,(opencell,(r,)),8,0).
fval(3,(opencell,(key0,)),8,0).
fval(3,(opencell,(square,)),8,0).
fval(3,(opencell,(node1,)),9,1).
fval(3,(opencell,(node2,)),9,1).
fval(3,(opencell,(triangle,)),9,0).
fval(3,(opencell,(key1,)),9,0).
fval(3,(opencell,(r,)),9,0).
fval(3,(opencell,(key0,)),9,0).
fval(3,(opencell,(square,)),9,0).
fval(3,(opencell,(node1,)),10,1).
fval(3,(opencell,(node2,)),10,1).
fval(3,(opencell,(triangle,)),10,0).
fval(3,(opencell,(key1,)),10,0).
fval(3,(opencell,(r,)),10,0).
fval(3,(opencell,(key0,)),10,0).
fval(3,(opencell,(square,)),10,0).
fval(3,(opencell,(node1,)),11,1).
fval(3,(opencell,(node2,)),11,1).
fval(3,(opencell,(triangle,)),11,0).
fval(3,(opencell,(key1,)),11,0).
fval(3,(opencell,(r,)),11,0).
fval(3,(opencell,(key0,)),11,0).
fval(3,(opencell,(square,)),11,0).
fval(3,(opencell,(node1,)),12,1).
fval(3,(opencell,(node2,)),12,1).
fval(3,(opencell,(triangle,)),12,0).
fval(3,(opencell,(key1,)),12,0).
fval(3,(opencell,(r,)),12,0).
fval(3,(opencell,(key0,)),12,0).
fval(3,(opencell,(square,)),12,0).
fval(3,(opencell,(node1,)),13,1).
fval(3,(opencell,(node2,)),13,1).
fval(3,(opencell,(triangle,)),13,0).
fval(3,(opencell,(key1,)),13,0).
fval(3,(opencell,(r,)),13,0).
fval(3,(opencell,(key0,)),13,0).
fval(3,(opencell,(square,)),13,0).
fval(3,(opencell,(node1,)),14,1).
fval(3,(opencell,(node2,)),14,1).
fval(3,(opencell,(triangle,)),14,0).
fval(3,(opencell,(key1,)),14,0).
fval(3,(opencell,(r,)),14,0).
fval(3,(opencell,(key0,)),14,0).
fval(3,(opencell,(square,)),14,0).
fval(3,(opencell,(node1,)),15,1).
fval(3,(opencell,(node2,)),15,1).
fval(3,(opencell,(triangle,)),15,0).
fval(3,(opencell,(key1,)),15,0).
fval(3,(opencell,(r,)),15,0).
fval(3,(opencell,(key0,)),15,0).
fval(3,(opencell,(square,)),15,0).
fval(3,(opencell,(node1,)),16,1).
fval(3,(opencell,(node2,)),16,1).
fval(3,(opencell,(triangle,)),16,0).
fval(3,(opencell,(key1,)),16,0).
fval(3,(opencell,(r,)),16,0).
fval(3,(opencell,(key0,)),16,0).
fval(3,(opencell,(square,)),16,0).
fval(3,(opencell,(node1,)),17,1).
fval(3,(opencell,(node2,)),17,1).
fval(3,(opencell,(triangle,)),17,0).
fval(3,(opencell,(key1,)),17,0).
fval(3,(opencell,(r,)),17,0).
fval(3,(opencell,(key0,)),17,0).
fval(3,(opencell,(square,)),17,0).
fval(3,(opencell,(node1,)),18,1).
fval(3,(opencell,(node2,)),18,1).
fval(3,(opencell,(triangle,)),18,0).
fval(3,(opencell,(key1,)),18,0).
fval(3,(opencell,(r,)),18,0).
fval(3,(opencell,(key0,)),18,0).
fval(3,(opencell,(square,)),18,0).
fval(3,(inter_er_left_verum_er_shape_verum,(node2,)),1).
fval(3,(inter_er_left_verum_er_shape_verum,(node1,)),0).
fval(3,(inter_er_left_verum_er_shape_verum,(triangle,)),0).
fval(3,(inter_er_left_verum_er_shape_verum,(key1,)),0).
fval(3,(inter_er_left_verum_er_shape_verum,(key0,)),0).
fval(3,(inter_er_left_verum_er_shape_verum,(r,)),0).
fval(3,(inter_er_left_verum_er_shape_verum,(square,)),0).
fval(3,(subset_opencell_er_overlap_verum,(0,)),0,1).
fval(3,(subset_opencell_er_overlap_verum,(0,)),1,1).
fval(3,(subset_opencell_er_overlap_verum,(0,)),2,1).
fval(3,(subset_opencell_er_overlap_verum,(0,)),3,0).
fval(3,(subset_opencell_er_overlap_verum,(0,)),4,1).
fval(3,(subset_opencell_er_overlap_verum,(0,)),5,0).
fval(3,(subset_opencell_er_overlap_verum,(0,)),6,1).
fval(3,(subset_opencell_er_overlap_verum,(0,)),7,1).
fval(3,(subset_opencell_er_overlap_verum,(0,)),8,0).
fval(3,(subset_opencell_er_overlap_verum,(0,)),9,1).
fval(3,(subset_opencell_er_overlap_verum,(0,)),10,1).
fval(3,(subset_opencell_er_overlap_verum,(0,)),11,1).
fval(3,(subset_opencell_er_overlap_verum,(0,)),12,1).
fval(3,(subset_opencell_er_overlap_verum,(0,)),13,0).
fval(3,(subset_opencell_er_overlap_verum,(0,)),14,1).
fval(3,(subset_opencell_er_overlap_verum,(0,)),15,0).
fval(3,(subset_opencell_er_overlap_verum,(0,)),16,1).
fval(3,(subset_opencell_er_overlap_verum,(0,)),17,1).
fval(3,(subset_opencell_er_overlap_verum,(0,)),18,0).
fval(3,(comp_smaller_inv_smaller,(key0,r)),1).
fval(3,(comp_smaller_inv_smaller,(key1,key0)),1).
fval(3,(comp_smaller_inv_smaller,(key1,r)),1).
fval(3,(comp_smaller_inv_smaller,(r,key1)),1).
fval(3,(comp_smaller_inv_smaller,(key0,key1)),1).
fval(3,(comp_smaller_inv_smaller,(r,key0)),1).
fval(3,(comp_smaller_inv_smaller,(node2,triangle)),0).
fval(3,(comp_smaller_inv_smaller,(triangle,key0)),0).
fval(3,(comp_smaller_inv_smaller,(triangle,r)),0).
fval(3,(comp_smaller_inv_smaller,(node2,key1)),0).
fval(3,(comp_smaller_inv_smaller,(key1,square)),0).
fval(3,(comp_smaller_inv_smaller,(node1,square)),0).
fval(3,(comp_smaller_inv_smaller,(key1,node1)),0).
fval(3,(comp_smaller_inv_smaller,(triangle,square)),0).
fval(3,(comp_smaller_inv_smaller,(key0,square)),0).
fval(3,(comp_smaller_inv_smaller,(square,r)),0).
fval(3,(comp_smaller_inv_smaller,(square,key0)),0).
fval(3,(comp_smaller_inv_smaller,(node2,key0)),0).
fval(3,(comp_smaller_inv_smaller,(triangle,node1)),0).
fval(3,(comp_smaller_inv_smaller,(key1,triangle)),0).
fval(3,(comp_smaller_inv_smaller,(key1,node2)),0).
fval(3,(comp_smaller_inv_smaller,(node2,r)),0).
fval(3,(comp_smaller_inv_smaller,(key0,node1)),0).
fval(3,(comp_smaller_inv_smaller,(node1,triangle)),0).
fval(3,(comp_smaller_inv_smaller,(node1,node2)),0).
fval(3,(comp_smaller_inv_smaller,(r,square)),0).
fval(3,(comp_smaller_inv_smaller,(node1,key1)),0).
fval(3,(comp_smaller_inv_smaller,(key0,triangle)),0).
fval(3,(comp_smaller_inv_smaller,(triangle,key1)),0).
fval(3,(comp_smaller_inv_smaller,(r,node1)),0).
fval(3,(comp_smaller_inv_smaller,(key0,node2)),0).
fval(3,(comp_smaller_inv_smaller,(triangle,node2)),0).
fval(3,(comp_smaller_inv_smaller,(node1,key0)),0).
fval(3,(comp_smaller_inv_smaller,(node2,square)),0).
fval(3,(comp_smaller_inv_smaller,(square,node1)),0).
fval(3,(comp_smaller_inv_smaller,(r,node2)),0).
fval(3,(comp_smaller_inv_smaller,(node2,node1)),0).
fval(3,(comp_smaller_inv_smaller,(r,triangle)),0).
fval(3,(comp_smaller_inv_smaller,(square,triangle)),0).
fval(3,(comp_smaller_inv_smaller,(node1,r)),0).
fval(3,(comp_smaller_inv_smaller,(square,node2)),0).
fval(3,(comp_smaller_inv_smaller,(square,key1)),0).
fval(3,(comp_overlap_inv_smaller,(key0,r)),0,1).
fval(3,(comp_overlap_inv_smaller,(key1,r)),0,1).
fval(3,(comp_overlap_inv_smaller,(key1,key0)),0,1).
fval(3,(comp_overlap_inv_smaller,(r,key1)),0,1).
fval(3,(comp_overlap_inv_smaller,(key0,key1)),0,1).
fval(3,(comp_overlap_inv_smaller,(r,key0)),0,1).
fval(3,(comp_overlap_inv_smaller,(node2,triangle)),0,0).
fval(3,(comp_overlap_inv_smaller,(triangle,r)),0,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key0)),0,0).
fval(3,(comp_overlap_inv_smaller,(node2,key1)),0,0).
fval(3,(comp_overlap_inv_smaller,(key1,square)),0,0).
fval(3,(comp_overlap_inv_smaller,(node1,square)),0,0).
fval(3,(comp_overlap_inv_smaller,(key1,node1)),0,0).
fval(3,(comp_overlap_inv_smaller,(triangle,square)),0,0).
fval(3,(comp_overlap_inv_smaller,(key0,square)),0,0).
fval(3,(comp_overlap_inv_smaller,(square,r)),0,0).
fval(3,(comp_overlap_inv_smaller,(square,key0)),0,0).
fval(3,(comp_overlap_inv_smaller,(key1,triangle)),0,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node1)),0,0).
fval(3,(comp_overlap_inv_smaller,(node2,key0)),0,0).
fval(3,(comp_overlap_inv_smaller,(key1,node2)),0,0).
fval(3,(comp_overlap_inv_smaller,(node2,r)),0,0).
fval(3,(comp_overlap_inv_smaller,(key0,node1)),0,0).
fval(3,(comp_overlap_inv_smaller,(node1,triangle)),0,0).
fval(3,(comp_overlap_inv_smaller,(node1,node2)),0,0).
fval(3,(comp_overlap_inv_smaller,(r,square)),0,0).
fval(3,(comp_overlap_inv_smaller,(node1,key1)),0,0).
fval(3,(comp_overlap_inv_smaller,(key0,triangle)),0,0).
fval(3,(comp_overlap_inv_smaller,(key0,node2)),0,0).
fval(3,(comp_overlap_inv_smaller,(r,node1)),0,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node2)),0,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key1)),0,0).
fval(3,(comp_overlap_inv_smaller,(node1,key0)),0,0).
fval(3,(comp_overlap_inv_smaller,(node2,square)),0,0).
fval(3,(comp_overlap_inv_smaller,(square,node1)),0,0).
fval(3,(comp_overlap_inv_smaller,(r,node2)),0,0).
fval(3,(comp_overlap_inv_smaller,(node2,node1)),0,0).
fval(3,(comp_overlap_inv_smaller,(r,triangle)),0,0).
fval(3,(comp_overlap_inv_smaller,(square,triangle)),0,0).
fval(3,(comp_overlap_inv_smaller,(node1,r)),0,0).
fval(3,(comp_overlap_inv_smaller,(square,node2)),0,0).
fval(3,(comp_overlap_inv_smaller,(square,key1)),0,0).
fval(3,(comp_overlap_inv_smaller,(r,key1)),1,1).
fval(3,(comp_overlap_inv_smaller,(key1,r)),1,1).
fval(3,(comp_overlap_inv_smaller,(key1,key0)),1,1).
fval(3,(comp_overlap_inv_smaller,(r,key0)),1,1).
fval(3,(comp_overlap_inv_smaller,(node2,triangle)),1,0).
fval(3,(comp_overlap_inv_smaller,(triangle,r)),1,0).
fval(3,(comp_overlap_inv_smaller,(key0,r)),1,0).
fval(3,(comp_overlap_inv_smaller,(node2,key1)),1,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key0)),1,0).
fval(3,(comp_overlap_inv_smaller,(key1,square)),1,0).
fval(3,(comp_overlap_inv_smaller,(node1,square)),1,0).
fval(3,(comp_overlap_inv_smaller,(key1,node1)),1,0).
fval(3,(comp_overlap_inv_smaller,(triangle,square)),1,0).
fval(3,(comp_overlap_inv_smaller,(key0,square)),1,0).
fval(3,(comp_overlap_inv_smaller,(square,r)),1,0).
fval(3,(comp_overlap_inv_smaller,(square,key0)),1,0).
fval(3,(comp_overlap_inv_smaller,(key1,triangle)),1,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node1)),1,0).
fval(3,(comp_overlap_inv_smaller,(node2,key0)),1,0).
fval(3,(comp_overlap_inv_smaller,(key1,node2)),1,0).
fval(3,(comp_overlap_inv_smaller,(node2,r)),1,0).
fval(3,(comp_overlap_inv_smaller,(key0,node1)),1,0).
fval(3,(comp_overlap_inv_smaller,(node1,triangle)),1,0).
fval(3,(comp_overlap_inv_smaller,(node1,node2)),1,0).
fval(3,(comp_overlap_inv_smaller,(r,square)),1,0).
fval(3,(comp_overlap_inv_smaller,(node1,key1)),1,0).
fval(3,(comp_overlap_inv_smaller,(key0,triangle)),1,0).
fval(3,(comp_overlap_inv_smaller,(key0,node2)),1,0).
fval(3,(comp_overlap_inv_smaller,(r,node1)),1,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node2)),1,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key1)),1,0).
fval(3,(comp_overlap_inv_smaller,(key0,key1)),1,0).
fval(3,(comp_overlap_inv_smaller,(node1,key0)),1,0).
fval(3,(comp_overlap_inv_smaller,(node2,square)),1,0).
fval(3,(comp_overlap_inv_smaller,(square,node1)),1,0).
fval(3,(comp_overlap_inv_smaller,(r,node2)),1,0).
fval(3,(comp_overlap_inv_smaller,(node2,node1)),1,0).
fval(3,(comp_overlap_inv_smaller,(r,triangle)),1,0).
fval(3,(comp_overlap_inv_smaller,(square,triangle)),1,0).
fval(3,(comp_overlap_inv_smaller,(node1,r)),1,0).
fval(3,(comp_overlap_inv_smaller,(square,node2)),1,0).
fval(3,(comp_overlap_inv_smaller,(square,key1)),1,0).
fval(3,(comp_overlap_inv_smaller,(r,key1)),2,1).
fval(3,(comp_overlap_inv_smaller,(key0,r)),2,1).
fval(3,(comp_overlap_inv_smaller,(key0,key1)),2,1).
fval(3,(comp_overlap_inv_smaller,(r,key0)),2,1).
fval(3,(comp_overlap_inv_smaller,(node2,triangle)),2,0).
fval(3,(comp_overlap_inv_smaller,(triangle,r)),2,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key0)),2,0).
fval(3,(comp_overlap_inv_smaller,(node2,key1)),2,0).
fval(3,(comp_overlap_inv_smaller,(key1,square)),2,0).
fval(3,(comp_overlap_inv_smaller,(node1,square)),2,0).
fval(3,(comp_overlap_inv_smaller,(key1,node1)),2,0).
fval(3,(comp_overlap_inv_smaller,(triangle,square)),2,0).
fval(3,(comp_overlap_inv_smaller,(key0,square)),2,0).
fval(3,(comp_overlap_inv_smaller,(square,r)),2,0).
fval(3,(comp_overlap_inv_smaller,(square,key0)),2,0).
fval(3,(comp_overlap_inv_smaller,(key1,triangle)),2,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node1)),2,0).
fval(3,(comp_overlap_inv_smaller,(node2,key0)),2,0).
fval(3,(comp_overlap_inv_smaller,(key1,node2)),2,0).
fval(3,(comp_overlap_inv_smaller,(node2,r)),2,0).
fval(3,(comp_overlap_inv_smaller,(key0,node1)),2,0).
fval(3,(comp_overlap_inv_smaller,(node1,triangle)),2,0).
fval(3,(comp_overlap_inv_smaller,(node1,node2)),2,0).
fval(3,(comp_overlap_inv_smaller,(r,square)),2,0).
fval(3,(comp_overlap_inv_smaller,(node1,key1)),2,0).
fval(3,(comp_overlap_inv_smaller,(key0,triangle)),2,0).
fval(3,(comp_overlap_inv_smaller,(key0,node2)),2,0).
fval(3,(comp_overlap_inv_smaller,(r,node1)),2,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node2)),2,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key1)),2,0).
fval(3,(comp_overlap_inv_smaller,(node1,key0)),2,0).
fval(3,(comp_overlap_inv_smaller,(node2,square)),2,0).
fval(3,(comp_overlap_inv_smaller,(square,node1)),2,0).
fval(3,(comp_overlap_inv_smaller,(r,node2)),2,0).
fval(3,(comp_overlap_inv_smaller,(node2,node1)),2,0).
fval(3,(comp_overlap_inv_smaller,(key1,r)),2,0).
fval(3,(comp_overlap_inv_smaller,(key1,key0)),2,0).
fval(3,(comp_overlap_inv_smaller,(r,triangle)),2,0).
fval(3,(comp_overlap_inv_smaller,(square,triangle)),2,0).
fval(3,(comp_overlap_inv_smaller,(node1,r)),2,0).
fval(3,(comp_overlap_inv_smaller,(square,node2)),2,0).
fval(3,(comp_overlap_inv_smaller,(square,key1)),2,0).
fval(3,(comp_overlap_inv_smaller,(r,key1)),3,1).
fval(3,(comp_overlap_inv_smaller,(key0,r)),3,1).
fval(3,(comp_overlap_inv_smaller,(key0,key1)),3,1).
fval(3,(comp_overlap_inv_smaller,(r,key0)),3,1).
fval(3,(comp_overlap_inv_smaller,(node2,triangle)),3,0).
fval(3,(comp_overlap_inv_smaller,(triangle,r)),3,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key0)),3,0).
fval(3,(comp_overlap_inv_smaller,(node2,key1)),3,0).
fval(3,(comp_overlap_inv_smaller,(key1,square)),3,0).
fval(3,(comp_overlap_inv_smaller,(node1,square)),3,0).
fval(3,(comp_overlap_inv_smaller,(key1,node1)),3,0).
fval(3,(comp_overlap_inv_smaller,(triangle,square)),3,0).
fval(3,(comp_overlap_inv_smaller,(key0,square)),3,0).
fval(3,(comp_overlap_inv_smaller,(square,r)),3,0).
fval(3,(comp_overlap_inv_smaller,(square,key0)),3,0).
fval(3,(comp_overlap_inv_smaller,(key1,triangle)),3,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node1)),3,0).
fval(3,(comp_overlap_inv_smaller,(node2,key0)),3,0).
fval(3,(comp_overlap_inv_smaller,(key1,node2)),3,0).
fval(3,(comp_overlap_inv_smaller,(node2,r)),3,0).
fval(3,(comp_overlap_inv_smaller,(key0,node1)),3,0).
fval(3,(comp_overlap_inv_smaller,(node1,triangle)),3,0).
fval(3,(comp_overlap_inv_smaller,(node1,node2)),3,0).
fval(3,(comp_overlap_inv_smaller,(r,square)),3,0).
fval(3,(comp_overlap_inv_smaller,(node1,key1)),3,0).
fval(3,(comp_overlap_inv_smaller,(key0,triangle)),3,0).
fval(3,(comp_overlap_inv_smaller,(key0,node2)),3,0).
fval(3,(comp_overlap_inv_smaller,(r,node1)),3,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node2)),3,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key1)),3,0).
fval(3,(comp_overlap_inv_smaller,(node1,key0)),3,0).
fval(3,(comp_overlap_inv_smaller,(node2,square)),3,0).
fval(3,(comp_overlap_inv_smaller,(square,node1)),3,0).
fval(3,(comp_overlap_inv_smaller,(r,node2)),3,0).
fval(3,(comp_overlap_inv_smaller,(node2,node1)),3,0).
fval(3,(comp_overlap_inv_smaller,(key1,r)),3,0).
fval(3,(comp_overlap_inv_smaller,(key1,key0)),3,0).
fval(3,(comp_overlap_inv_smaller,(r,triangle)),3,0).
fval(3,(comp_overlap_inv_smaller,(square,triangle)),3,0).
fval(3,(comp_overlap_inv_smaller,(node1,r)),3,0).
fval(3,(comp_overlap_inv_smaller,(square,node2)),3,0).
fval(3,(comp_overlap_inv_smaller,(square,key1)),3,0).
fval(3,(comp_overlap_inv_smaller,(r,key1)),4,1).
fval(3,(comp_overlap_inv_smaller,(key0,r)),4,1).
fval(3,(comp_overlap_inv_smaller,(key0,key1)),4,1).
fval(3,(comp_overlap_inv_smaller,(r,key0)),4,1).
fval(3,(comp_overlap_inv_smaller,(node2,triangle)),4,0).
fval(3,(comp_overlap_inv_smaller,(triangle,r)),4,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key0)),4,0).
fval(3,(comp_overlap_inv_smaller,(node2,key1)),4,0).
fval(3,(comp_overlap_inv_smaller,(key1,square)),4,0).
fval(3,(comp_overlap_inv_smaller,(node1,square)),4,0).
fval(3,(comp_overlap_inv_smaller,(key1,node1)),4,0).
fval(3,(comp_overlap_inv_smaller,(triangle,square)),4,0).
fval(3,(comp_overlap_inv_smaller,(key0,square)),4,0).
fval(3,(comp_overlap_inv_smaller,(square,r)),4,0).
fval(3,(comp_overlap_inv_smaller,(square,key0)),4,0).
fval(3,(comp_overlap_inv_smaller,(key1,triangle)),4,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node1)),4,0).
fval(3,(comp_overlap_inv_smaller,(node2,key0)),4,0).
fval(3,(comp_overlap_inv_smaller,(key1,node2)),4,0).
fval(3,(comp_overlap_inv_smaller,(node2,r)),4,0).
fval(3,(comp_overlap_inv_smaller,(key0,node1)),4,0).
fval(3,(comp_overlap_inv_smaller,(node1,triangle)),4,0).
fval(3,(comp_overlap_inv_smaller,(node1,node2)),4,0).
fval(3,(comp_overlap_inv_smaller,(r,square)),4,0).
fval(3,(comp_overlap_inv_smaller,(node1,key1)),4,0).
fval(3,(comp_overlap_inv_smaller,(key0,triangle)),4,0).
fval(3,(comp_overlap_inv_smaller,(key0,node2)),4,0).
fval(3,(comp_overlap_inv_smaller,(r,node1)),4,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node2)),4,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key1)),4,0).
fval(3,(comp_overlap_inv_smaller,(node1,key0)),4,0).
fval(3,(comp_overlap_inv_smaller,(node2,square)),4,0).
fval(3,(comp_overlap_inv_smaller,(square,node1)),4,0).
fval(3,(comp_overlap_inv_smaller,(r,node2)),4,0).
fval(3,(comp_overlap_inv_smaller,(node2,node1)),4,0).
fval(3,(comp_overlap_inv_smaller,(key1,r)),4,0).
fval(3,(comp_overlap_inv_smaller,(key1,key0)),4,0).
fval(3,(comp_overlap_inv_smaller,(r,triangle)),4,0).
fval(3,(comp_overlap_inv_smaller,(square,triangle)),4,0).
fval(3,(comp_overlap_inv_smaller,(node1,r)),4,0).
fval(3,(comp_overlap_inv_smaller,(square,node2)),4,0).
fval(3,(comp_overlap_inv_smaller,(square,key1)),4,0).
fval(3,(comp_overlap_inv_smaller,(key0,r)),5,1).
fval(3,(comp_overlap_inv_smaller,(key1,r)),5,1).
fval(3,(comp_overlap_inv_smaller,(key1,key0)),5,1).
fval(3,(comp_overlap_inv_smaller,(r,key1)),5,1).
fval(3,(comp_overlap_inv_smaller,(key0,key1)),5,1).
fval(3,(comp_overlap_inv_smaller,(r,key0)),5,1).
fval(3,(comp_overlap_inv_smaller,(node2,triangle)),5,0).
fval(3,(comp_overlap_inv_smaller,(triangle,r)),5,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key0)),5,0).
fval(3,(comp_overlap_inv_smaller,(node2,key1)),5,0).
fval(3,(comp_overlap_inv_smaller,(key1,square)),5,0).
fval(3,(comp_overlap_inv_smaller,(node1,square)),5,0).
fval(3,(comp_overlap_inv_smaller,(key1,node1)),5,0).
fval(3,(comp_overlap_inv_smaller,(triangle,square)),5,0).
fval(3,(comp_overlap_inv_smaller,(key0,square)),5,0).
fval(3,(comp_overlap_inv_smaller,(square,r)),5,0).
fval(3,(comp_overlap_inv_smaller,(square,key0)),5,0).
fval(3,(comp_overlap_inv_smaller,(key1,triangle)),5,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node1)),5,0).
fval(3,(comp_overlap_inv_smaller,(node2,key0)),5,0).
fval(3,(comp_overlap_inv_smaller,(key1,node2)),5,0).
fval(3,(comp_overlap_inv_smaller,(node2,r)),5,0).
fval(3,(comp_overlap_inv_smaller,(key0,node1)),5,0).
fval(3,(comp_overlap_inv_smaller,(node1,triangle)),5,0).
fval(3,(comp_overlap_inv_smaller,(node1,node2)),5,0).
fval(3,(comp_overlap_inv_smaller,(r,square)),5,0).
fval(3,(comp_overlap_inv_smaller,(node1,key1)),5,0).
fval(3,(comp_overlap_inv_smaller,(key0,triangle)),5,0).
fval(3,(comp_overlap_inv_smaller,(key0,node2)),5,0).
fval(3,(comp_overlap_inv_smaller,(r,node1)),5,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node2)),5,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key1)),5,0).
fval(3,(comp_overlap_inv_smaller,(node1,key0)),5,0).
fval(3,(comp_overlap_inv_smaller,(node2,square)),5,0).
fval(3,(comp_overlap_inv_smaller,(square,node1)),5,0).
fval(3,(comp_overlap_inv_smaller,(r,node2)),5,0).
fval(3,(comp_overlap_inv_smaller,(node2,node1)),5,0).
fval(3,(comp_overlap_inv_smaller,(r,triangle)),5,0).
fval(3,(comp_overlap_inv_smaller,(square,triangle)),5,0).
fval(3,(comp_overlap_inv_smaller,(node1,r)),5,0).
fval(3,(comp_overlap_inv_smaller,(square,node2)),5,0).
fval(3,(comp_overlap_inv_smaller,(square,key1)),5,0).
fval(3,(comp_overlap_inv_smaller,(key0,r)),6,1).
fval(3,(comp_overlap_inv_smaller,(key1,r)),6,1).
fval(3,(comp_overlap_inv_smaller,(key1,key0)),6,1).
fval(3,(comp_overlap_inv_smaller,(r,key1)),6,1).
fval(3,(comp_overlap_inv_smaller,(key0,key1)),6,1).
fval(3,(comp_overlap_inv_smaller,(r,key0)),6,1).
fval(3,(comp_overlap_inv_smaller,(node2,triangle)),6,0).
fval(3,(comp_overlap_inv_smaller,(triangle,r)),6,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key0)),6,0).
fval(3,(comp_overlap_inv_smaller,(node2,key1)),6,0).
fval(3,(comp_overlap_inv_smaller,(key1,square)),6,0).
fval(3,(comp_overlap_inv_smaller,(node1,square)),6,0).
fval(3,(comp_overlap_inv_smaller,(key1,node1)),6,0).
fval(3,(comp_overlap_inv_smaller,(triangle,square)),6,0).
fval(3,(comp_overlap_inv_smaller,(key0,square)),6,0).
fval(3,(comp_overlap_inv_smaller,(square,r)),6,0).
fval(3,(comp_overlap_inv_smaller,(square,key0)),6,0).
fval(3,(comp_overlap_inv_smaller,(key1,triangle)),6,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node1)),6,0).
fval(3,(comp_overlap_inv_smaller,(node2,key0)),6,0).
fval(3,(comp_overlap_inv_smaller,(key1,node2)),6,0).
fval(3,(comp_overlap_inv_smaller,(node2,r)),6,0).
fval(3,(comp_overlap_inv_smaller,(key0,node1)),6,0).
fval(3,(comp_overlap_inv_smaller,(node1,triangle)),6,0).
fval(3,(comp_overlap_inv_smaller,(node1,node2)),6,0).
fval(3,(comp_overlap_inv_smaller,(r,square)),6,0).
fval(3,(comp_overlap_inv_smaller,(node1,key1)),6,0).
fval(3,(comp_overlap_inv_smaller,(key0,triangle)),6,0).
fval(3,(comp_overlap_inv_smaller,(key0,node2)),6,0).
fval(3,(comp_overlap_inv_smaller,(r,node1)),6,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node2)),6,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key1)),6,0).
fval(3,(comp_overlap_inv_smaller,(node1,key0)),6,0).
fval(3,(comp_overlap_inv_smaller,(node2,square)),6,0).
fval(3,(comp_overlap_inv_smaller,(square,node1)),6,0).
fval(3,(comp_overlap_inv_smaller,(r,node2)),6,0).
fval(3,(comp_overlap_inv_smaller,(node2,node1)),6,0).
fval(3,(comp_overlap_inv_smaller,(r,triangle)),6,0).
fval(3,(comp_overlap_inv_smaller,(square,triangle)),6,0).
fval(3,(comp_overlap_inv_smaller,(node1,r)),6,0).
fval(3,(comp_overlap_inv_smaller,(square,node2)),6,0).
fval(3,(comp_overlap_inv_smaller,(square,key1)),6,0).
fval(3,(comp_overlap_inv_smaller,(key0,r)),7,1).
fval(3,(comp_overlap_inv_smaller,(key1,r)),7,1).
fval(3,(comp_overlap_inv_smaller,(key1,key0)),7,1).
fval(3,(comp_overlap_inv_smaller,(r,key1)),7,1).
fval(3,(comp_overlap_inv_smaller,(key0,key1)),7,1).
fval(3,(comp_overlap_inv_smaller,(r,key0)),7,1).
fval(3,(comp_overlap_inv_smaller,(node2,triangle)),7,0).
fval(3,(comp_overlap_inv_smaller,(triangle,r)),7,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key0)),7,0).
fval(3,(comp_overlap_inv_smaller,(node2,key1)),7,0).
fval(3,(comp_overlap_inv_smaller,(key1,square)),7,0).
fval(3,(comp_overlap_inv_smaller,(node1,square)),7,0).
fval(3,(comp_overlap_inv_smaller,(key1,node1)),7,0).
fval(3,(comp_overlap_inv_smaller,(triangle,square)),7,0).
fval(3,(comp_overlap_inv_smaller,(key0,square)),7,0).
fval(3,(comp_overlap_inv_smaller,(square,r)),7,0).
fval(3,(comp_overlap_inv_smaller,(square,key0)),7,0).
fval(3,(comp_overlap_inv_smaller,(key1,triangle)),7,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node1)),7,0).
fval(3,(comp_overlap_inv_smaller,(node2,key0)),7,0).
fval(3,(comp_overlap_inv_smaller,(key1,node2)),7,0).
fval(3,(comp_overlap_inv_smaller,(node2,r)),7,0).
fval(3,(comp_overlap_inv_smaller,(key0,node1)),7,0).
fval(3,(comp_overlap_inv_smaller,(node1,triangle)),7,0).
fval(3,(comp_overlap_inv_smaller,(node1,node2)),7,0).
fval(3,(comp_overlap_inv_smaller,(r,square)),7,0).
fval(3,(comp_overlap_inv_smaller,(node1,key1)),7,0).
fval(3,(comp_overlap_inv_smaller,(key0,triangle)),7,0).
fval(3,(comp_overlap_inv_smaller,(key0,node2)),7,0).
fval(3,(comp_overlap_inv_smaller,(r,node1)),7,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node2)),7,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key1)),7,0).
fval(3,(comp_overlap_inv_smaller,(node1,key0)),7,0).
fval(3,(comp_overlap_inv_smaller,(node2,square)),7,0).
fval(3,(comp_overlap_inv_smaller,(square,node1)),7,0).
fval(3,(comp_overlap_inv_smaller,(r,node2)),7,0).
fval(3,(comp_overlap_inv_smaller,(node2,node1)),7,0).
fval(3,(comp_overlap_inv_smaller,(r,triangle)),7,0).
fval(3,(comp_overlap_inv_smaller,(square,triangle)),7,0).
fval(3,(comp_overlap_inv_smaller,(node1,r)),7,0).
fval(3,(comp_overlap_inv_smaller,(square,node2)),7,0).
fval(3,(comp_overlap_inv_smaller,(square,key1)),7,0).
fval(3,(comp_overlap_inv_smaller,(r,key1)),8,1).
fval(3,(comp_overlap_inv_smaller,(key1,r)),8,1).
fval(3,(comp_overlap_inv_smaller,(key1,key0)),8,1).
fval(3,(comp_overlap_inv_smaller,(r,key0)),8,1).
fval(3,(comp_overlap_inv_smaller,(node2,triangle)),8,0).
fval(3,(comp_overlap_inv_smaller,(triangle,r)),8,0).
fval(3,(comp_overlap_inv_smaller,(key0,r)),8,0).
fval(3,(comp_overlap_inv_smaller,(node2,key1)),8,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key0)),8,0).
fval(3,(comp_overlap_inv_smaller,(key1,square)),8,0).
fval(3,(comp_overlap_inv_smaller,(node1,square)),8,0).
fval(3,(comp_overlap_inv_smaller,(key1,node1)),8,0).
fval(3,(comp_overlap_inv_smaller,(triangle,square)),8,0).
fval(3,(comp_overlap_inv_smaller,(key0,square)),8,0).
fval(3,(comp_overlap_inv_smaller,(square,r)),8,0).
fval(3,(comp_overlap_inv_smaller,(square,key0)),8,0).
fval(3,(comp_overlap_inv_smaller,(key1,triangle)),8,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node1)),8,0).
fval(3,(comp_overlap_inv_smaller,(node2,key0)),8,0).
fval(3,(comp_overlap_inv_smaller,(key1,node2)),8,0).
fval(3,(comp_overlap_inv_smaller,(node2,r)),8,0).
fval(3,(comp_overlap_inv_smaller,(key0,node1)),8,0).
fval(3,(comp_overlap_inv_smaller,(node1,triangle)),8,0).
fval(3,(comp_overlap_inv_smaller,(node1,node2)),8,0).
fval(3,(comp_overlap_inv_smaller,(r,square)),8,0).
fval(3,(comp_overlap_inv_smaller,(node1,key1)),8,0).
fval(3,(comp_overlap_inv_smaller,(key0,triangle)),8,0).
fval(3,(comp_overlap_inv_smaller,(key0,node2)),8,0).
fval(3,(comp_overlap_inv_smaller,(r,node1)),8,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node2)),8,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key1)),8,0).
fval(3,(comp_overlap_inv_smaller,(key0,key1)),8,0).
fval(3,(comp_overlap_inv_smaller,(node1,key0)),8,0).
fval(3,(comp_overlap_inv_smaller,(node2,square)),8,0).
fval(3,(comp_overlap_inv_smaller,(square,node1)),8,0).
fval(3,(comp_overlap_inv_smaller,(r,node2)),8,0).
fval(3,(comp_overlap_inv_smaller,(node2,node1)),8,0).
fval(3,(comp_overlap_inv_smaller,(r,triangle)),8,0).
fval(3,(comp_overlap_inv_smaller,(square,triangle)),8,0).
fval(3,(comp_overlap_inv_smaller,(node1,r)),8,0).
fval(3,(comp_overlap_inv_smaller,(square,node2)),8,0).
fval(3,(comp_overlap_inv_smaller,(square,key1)),8,0).
fval(3,(comp_overlap_inv_smaller,(key0,r)),9,1).
fval(3,(comp_overlap_inv_smaller,(key1,r)),9,1).
fval(3,(comp_overlap_inv_smaller,(key1,key0)),9,1).
fval(3,(comp_overlap_inv_smaller,(r,key1)),9,1).
fval(3,(comp_overlap_inv_smaller,(key0,key1)),9,1).
fval(3,(comp_overlap_inv_smaller,(r,key0)),9,1).
fval(3,(comp_overlap_inv_smaller,(node2,triangle)),9,0).
fval(3,(comp_overlap_inv_smaller,(triangle,r)),9,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key0)),9,0).
fval(3,(comp_overlap_inv_smaller,(node2,key1)),9,0).
fval(3,(comp_overlap_inv_smaller,(key1,square)),9,0).
fval(3,(comp_overlap_inv_smaller,(node1,square)),9,0).
fval(3,(comp_overlap_inv_smaller,(key1,node1)),9,0).
fval(3,(comp_overlap_inv_smaller,(triangle,square)),9,0).
fval(3,(comp_overlap_inv_smaller,(key0,square)),9,0).
fval(3,(comp_overlap_inv_smaller,(square,r)),9,0).
fval(3,(comp_overlap_inv_smaller,(square,key0)),9,0).
fval(3,(comp_overlap_inv_smaller,(key1,triangle)),9,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node1)),9,0).
fval(3,(comp_overlap_inv_smaller,(node2,key0)),9,0).
fval(3,(comp_overlap_inv_smaller,(key1,node2)),9,0).
fval(3,(comp_overlap_inv_smaller,(node2,r)),9,0).
fval(3,(comp_overlap_inv_smaller,(key0,node1)),9,0).
fval(3,(comp_overlap_inv_smaller,(node1,triangle)),9,0).
fval(3,(comp_overlap_inv_smaller,(node1,node2)),9,0).
fval(3,(comp_overlap_inv_smaller,(r,square)),9,0).
fval(3,(comp_overlap_inv_smaller,(node1,key1)),9,0).
fval(3,(comp_overlap_inv_smaller,(key0,triangle)),9,0).
fval(3,(comp_overlap_inv_smaller,(key0,node2)),9,0).
fval(3,(comp_overlap_inv_smaller,(r,node1)),9,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node2)),9,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key1)),9,0).
fval(3,(comp_overlap_inv_smaller,(node1,key0)),9,0).
fval(3,(comp_overlap_inv_smaller,(node2,square)),9,0).
fval(3,(comp_overlap_inv_smaller,(square,node1)),9,0).
fval(3,(comp_overlap_inv_smaller,(r,node2)),9,0).
fval(3,(comp_overlap_inv_smaller,(node2,node1)),9,0).
fval(3,(comp_overlap_inv_smaller,(r,triangle)),9,0).
fval(3,(comp_overlap_inv_smaller,(square,triangle)),9,0).
fval(3,(comp_overlap_inv_smaller,(node1,r)),9,0).
fval(3,(comp_overlap_inv_smaller,(square,node2)),9,0).
fval(3,(comp_overlap_inv_smaller,(square,key1)),9,0).
fval(3,(comp_overlap_inv_smaller,(r,key1)),10,1).
fval(3,(comp_overlap_inv_smaller,(key1,r)),10,1).
fval(3,(comp_overlap_inv_smaller,(key1,key0)),10,1).
fval(3,(comp_overlap_inv_smaller,(r,key0)),10,1).
fval(3,(comp_overlap_inv_smaller,(node2,triangle)),10,0).
fval(3,(comp_overlap_inv_smaller,(triangle,r)),10,0).
fval(3,(comp_overlap_inv_smaller,(key0,r)),10,0).
fval(3,(comp_overlap_inv_smaller,(node2,key1)),10,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key0)),10,0).
fval(3,(comp_overlap_inv_smaller,(key1,square)),10,0).
fval(3,(comp_overlap_inv_smaller,(node1,square)),10,0).
fval(3,(comp_overlap_inv_smaller,(key1,node1)),10,0).
fval(3,(comp_overlap_inv_smaller,(triangle,square)),10,0).
fval(3,(comp_overlap_inv_smaller,(key0,square)),10,0).
fval(3,(comp_overlap_inv_smaller,(square,r)),10,0).
fval(3,(comp_overlap_inv_smaller,(square,key0)),10,0).
fval(3,(comp_overlap_inv_smaller,(key1,triangle)),10,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node1)),10,0).
fval(3,(comp_overlap_inv_smaller,(node2,key0)),10,0).
fval(3,(comp_overlap_inv_smaller,(key1,node2)),10,0).
fval(3,(comp_overlap_inv_smaller,(node2,r)),10,0).
fval(3,(comp_overlap_inv_smaller,(key0,node1)),10,0).
fval(3,(comp_overlap_inv_smaller,(node1,triangle)),10,0).
fval(3,(comp_overlap_inv_smaller,(node1,node2)),10,0).
fval(3,(comp_overlap_inv_smaller,(r,square)),10,0).
fval(3,(comp_overlap_inv_smaller,(node1,key1)),10,0).
fval(3,(comp_overlap_inv_smaller,(key0,triangle)),10,0).
fval(3,(comp_overlap_inv_smaller,(key0,node2)),10,0).
fval(3,(comp_overlap_inv_smaller,(r,node1)),10,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node2)),10,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key1)),10,0).
fval(3,(comp_overlap_inv_smaller,(key0,key1)),10,0).
fval(3,(comp_overlap_inv_smaller,(node1,key0)),10,0).
fval(3,(comp_overlap_inv_smaller,(node2,square)),10,0).
fval(3,(comp_overlap_inv_smaller,(square,node1)),10,0).
fval(3,(comp_overlap_inv_smaller,(r,node2)),10,0).
fval(3,(comp_overlap_inv_smaller,(node2,node1)),10,0).
fval(3,(comp_overlap_inv_smaller,(r,triangle)),10,0).
fval(3,(comp_overlap_inv_smaller,(square,triangle)),10,0).
fval(3,(comp_overlap_inv_smaller,(node1,r)),10,0).
fval(3,(comp_overlap_inv_smaller,(square,node2)),10,0).
fval(3,(comp_overlap_inv_smaller,(square,key1)),10,0).
fval(3,(comp_overlap_inv_smaller,(r,key1)),11,1).
fval(3,(comp_overlap_inv_smaller,(key1,r)),11,1).
fval(3,(comp_overlap_inv_smaller,(key1,key0)),11,1).
fval(3,(comp_overlap_inv_smaller,(r,key0)),11,1).
fval(3,(comp_overlap_inv_smaller,(node2,triangle)),11,0).
fval(3,(comp_overlap_inv_smaller,(triangle,r)),11,0).
fval(3,(comp_overlap_inv_smaller,(key0,r)),11,0).
fval(3,(comp_overlap_inv_smaller,(node2,key1)),11,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key0)),11,0).
fval(3,(comp_overlap_inv_smaller,(key1,square)),11,0).
fval(3,(comp_overlap_inv_smaller,(node1,square)),11,0).
fval(3,(comp_overlap_inv_smaller,(key1,node1)),11,0).
fval(3,(comp_overlap_inv_smaller,(triangle,square)),11,0).
fval(3,(comp_overlap_inv_smaller,(key0,square)),11,0).
fval(3,(comp_overlap_inv_smaller,(square,r)),11,0).
fval(3,(comp_overlap_inv_smaller,(square,key0)),11,0).
fval(3,(comp_overlap_inv_smaller,(key1,triangle)),11,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node1)),11,0).
fval(3,(comp_overlap_inv_smaller,(node2,key0)),11,0).
fval(3,(comp_overlap_inv_smaller,(key1,node2)),11,0).
fval(3,(comp_overlap_inv_smaller,(node2,r)),11,0).
fval(3,(comp_overlap_inv_smaller,(key0,node1)),11,0).
fval(3,(comp_overlap_inv_smaller,(node1,triangle)),11,0).
fval(3,(comp_overlap_inv_smaller,(node1,node2)),11,0).
fval(3,(comp_overlap_inv_smaller,(r,square)),11,0).
fval(3,(comp_overlap_inv_smaller,(node1,key1)),11,0).
fval(3,(comp_overlap_inv_smaller,(key0,triangle)),11,0).
fval(3,(comp_overlap_inv_smaller,(key0,node2)),11,0).
fval(3,(comp_overlap_inv_smaller,(r,node1)),11,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node2)),11,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key1)),11,0).
fval(3,(comp_overlap_inv_smaller,(key0,key1)),11,0).
fval(3,(comp_overlap_inv_smaller,(node1,key0)),11,0).
fval(3,(comp_overlap_inv_smaller,(node2,square)),11,0).
fval(3,(comp_overlap_inv_smaller,(square,node1)),11,0).
fval(3,(comp_overlap_inv_smaller,(r,node2)),11,0).
fval(3,(comp_overlap_inv_smaller,(node2,node1)),11,0).
fval(3,(comp_overlap_inv_smaller,(r,triangle)),11,0).
fval(3,(comp_overlap_inv_smaller,(square,triangle)),11,0).
fval(3,(comp_overlap_inv_smaller,(node1,r)),11,0).
fval(3,(comp_overlap_inv_smaller,(square,node2)),11,0).
fval(3,(comp_overlap_inv_smaller,(square,key1)),11,0).
fval(3,(comp_overlap_inv_smaller,(key0,r)),12,1).
fval(3,(comp_overlap_inv_smaller,(key1,r)),12,1).
fval(3,(comp_overlap_inv_smaller,(key1,key0)),12,1).
fval(3,(comp_overlap_inv_smaller,(r,key1)),12,1).
fval(3,(comp_overlap_inv_smaller,(key0,key1)),12,1).
fval(3,(comp_overlap_inv_smaller,(r,key0)),12,1).
fval(3,(comp_overlap_inv_smaller,(node2,triangle)),12,0).
fval(3,(comp_overlap_inv_smaller,(triangle,r)),12,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key0)),12,0).
fval(3,(comp_overlap_inv_smaller,(node2,key1)),12,0).
fval(3,(comp_overlap_inv_smaller,(key1,square)),12,0).
fval(3,(comp_overlap_inv_smaller,(node1,square)),12,0).
fval(3,(comp_overlap_inv_smaller,(key1,node1)),12,0).
fval(3,(comp_overlap_inv_smaller,(triangle,square)),12,0).
fval(3,(comp_overlap_inv_smaller,(key0,square)),12,0).
fval(3,(comp_overlap_inv_smaller,(square,r)),12,0).
fval(3,(comp_overlap_inv_smaller,(square,key0)),12,0).
fval(3,(comp_overlap_inv_smaller,(key1,triangle)),12,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node1)),12,0).
fval(3,(comp_overlap_inv_smaller,(node2,key0)),12,0).
fval(3,(comp_overlap_inv_smaller,(key1,node2)),12,0).
fval(3,(comp_overlap_inv_smaller,(node2,r)),12,0).
fval(3,(comp_overlap_inv_smaller,(key0,node1)),12,0).
fval(3,(comp_overlap_inv_smaller,(node1,triangle)),12,0).
fval(3,(comp_overlap_inv_smaller,(node1,node2)),12,0).
fval(3,(comp_overlap_inv_smaller,(r,square)),12,0).
fval(3,(comp_overlap_inv_smaller,(node1,key1)),12,0).
fval(3,(comp_overlap_inv_smaller,(key0,triangle)),12,0).
fval(3,(comp_overlap_inv_smaller,(key0,node2)),12,0).
fval(3,(comp_overlap_inv_smaller,(r,node1)),12,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node2)),12,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key1)),12,0).
fval(3,(comp_overlap_inv_smaller,(node1,key0)),12,0).
fval(3,(comp_overlap_inv_smaller,(node2,square)),12,0).
fval(3,(comp_overlap_inv_smaller,(square,node1)),12,0).
fval(3,(comp_overlap_inv_smaller,(r,node2)),12,0).
fval(3,(comp_overlap_inv_smaller,(node2,node1)),12,0).
fval(3,(comp_overlap_inv_smaller,(r,triangle)),12,0).
fval(3,(comp_overlap_inv_smaller,(square,triangle)),12,0).
fval(3,(comp_overlap_inv_smaller,(node1,r)),12,0).
fval(3,(comp_overlap_inv_smaller,(square,node2)),12,0).
fval(3,(comp_overlap_inv_smaller,(square,key1)),12,0).
fval(3,(comp_overlap_inv_smaller,(r,key1)),13,1).
fval(3,(comp_overlap_inv_smaller,(key1,r)),13,1).
fval(3,(comp_overlap_inv_smaller,(key1,key0)),13,1).
fval(3,(comp_overlap_inv_smaller,(r,key0)),13,1).
fval(3,(comp_overlap_inv_smaller,(node2,triangle)),13,0).
fval(3,(comp_overlap_inv_smaller,(triangle,r)),13,0).
fval(3,(comp_overlap_inv_smaller,(key0,r)),13,0).
fval(3,(comp_overlap_inv_smaller,(node2,key1)),13,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key0)),13,0).
fval(3,(comp_overlap_inv_smaller,(key1,square)),13,0).
fval(3,(comp_overlap_inv_smaller,(node1,square)),13,0).
fval(3,(comp_overlap_inv_smaller,(key1,node1)),13,0).
fval(3,(comp_overlap_inv_smaller,(triangle,square)),13,0).
fval(3,(comp_overlap_inv_smaller,(key0,square)),13,0).
fval(3,(comp_overlap_inv_smaller,(square,r)),13,0).
fval(3,(comp_overlap_inv_smaller,(square,key0)),13,0).
fval(3,(comp_overlap_inv_smaller,(key1,triangle)),13,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node1)),13,0).
fval(3,(comp_overlap_inv_smaller,(node2,key0)),13,0).
fval(3,(comp_overlap_inv_smaller,(key1,node2)),13,0).
fval(3,(comp_overlap_inv_smaller,(node2,r)),13,0).
fval(3,(comp_overlap_inv_smaller,(key0,node1)),13,0).
fval(3,(comp_overlap_inv_smaller,(node1,triangle)),13,0).
fval(3,(comp_overlap_inv_smaller,(node1,node2)),13,0).
fval(3,(comp_overlap_inv_smaller,(r,square)),13,0).
fval(3,(comp_overlap_inv_smaller,(node1,key1)),13,0).
fval(3,(comp_overlap_inv_smaller,(key0,triangle)),13,0).
fval(3,(comp_overlap_inv_smaller,(key0,node2)),13,0).
fval(3,(comp_overlap_inv_smaller,(r,node1)),13,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node2)),13,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key1)),13,0).
fval(3,(comp_overlap_inv_smaller,(key0,key1)),13,0).
fval(3,(comp_overlap_inv_smaller,(node1,key0)),13,0).
fval(3,(comp_overlap_inv_smaller,(node2,square)),13,0).
fval(3,(comp_overlap_inv_smaller,(square,node1)),13,0).
fval(3,(comp_overlap_inv_smaller,(r,node2)),13,0).
fval(3,(comp_overlap_inv_smaller,(node2,node1)),13,0).
fval(3,(comp_overlap_inv_smaller,(r,triangle)),13,0).
fval(3,(comp_overlap_inv_smaller,(square,triangle)),13,0).
fval(3,(comp_overlap_inv_smaller,(node1,r)),13,0).
fval(3,(comp_overlap_inv_smaller,(square,node2)),13,0).
fval(3,(comp_overlap_inv_smaller,(square,key1)),13,0).
fval(3,(comp_overlap_inv_smaller,(key0,r)),14,1).
fval(3,(comp_overlap_inv_smaller,(key1,r)),14,1).
fval(3,(comp_overlap_inv_smaller,(key1,key0)),14,1).
fval(3,(comp_overlap_inv_smaller,(r,key1)),14,1).
fval(3,(comp_overlap_inv_smaller,(key0,key1)),14,1).
fval(3,(comp_overlap_inv_smaller,(r,key0)),14,1).
fval(3,(comp_overlap_inv_smaller,(node2,triangle)),14,0).
fval(3,(comp_overlap_inv_smaller,(triangle,r)),14,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key0)),14,0).
fval(3,(comp_overlap_inv_smaller,(node2,key1)),14,0).
fval(3,(comp_overlap_inv_smaller,(key1,square)),14,0).
fval(3,(comp_overlap_inv_smaller,(node1,square)),14,0).
fval(3,(comp_overlap_inv_smaller,(key1,node1)),14,0).
fval(3,(comp_overlap_inv_smaller,(triangle,square)),14,0).
fval(3,(comp_overlap_inv_smaller,(key0,square)),14,0).
fval(3,(comp_overlap_inv_smaller,(square,r)),14,0).
fval(3,(comp_overlap_inv_smaller,(square,key0)),14,0).
fval(3,(comp_overlap_inv_smaller,(key1,triangle)),14,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node1)),14,0).
fval(3,(comp_overlap_inv_smaller,(node2,key0)),14,0).
fval(3,(comp_overlap_inv_smaller,(key1,node2)),14,0).
fval(3,(comp_overlap_inv_smaller,(node2,r)),14,0).
fval(3,(comp_overlap_inv_smaller,(key0,node1)),14,0).
fval(3,(comp_overlap_inv_smaller,(node1,triangle)),14,0).
fval(3,(comp_overlap_inv_smaller,(node1,node2)),14,0).
fval(3,(comp_overlap_inv_smaller,(r,square)),14,0).
fval(3,(comp_overlap_inv_smaller,(node1,key1)),14,0).
fval(3,(comp_overlap_inv_smaller,(key0,triangle)),14,0).
fval(3,(comp_overlap_inv_smaller,(key0,node2)),14,0).
fval(3,(comp_overlap_inv_smaller,(r,node1)),14,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node2)),14,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key1)),14,0).
fval(3,(comp_overlap_inv_smaller,(node1,key0)),14,0).
fval(3,(comp_overlap_inv_smaller,(node2,square)),14,0).
fval(3,(comp_overlap_inv_smaller,(square,node1)),14,0).
fval(3,(comp_overlap_inv_smaller,(r,node2)),14,0).
fval(3,(comp_overlap_inv_smaller,(node2,node1)),14,0).
fval(3,(comp_overlap_inv_smaller,(r,triangle)),14,0).
fval(3,(comp_overlap_inv_smaller,(square,triangle)),14,0).
fval(3,(comp_overlap_inv_smaller,(node1,r)),14,0).
fval(3,(comp_overlap_inv_smaller,(square,node2)),14,0).
fval(3,(comp_overlap_inv_smaller,(square,key1)),14,0).
fval(3,(comp_overlap_inv_smaller,(key0,r)),15,1).
fval(3,(comp_overlap_inv_smaller,(key1,r)),15,1).
fval(3,(comp_overlap_inv_smaller,(key1,key0)),15,1).
fval(3,(comp_overlap_inv_smaller,(r,key1)),15,1).
fval(3,(comp_overlap_inv_smaller,(key0,key1)),15,1).
fval(3,(comp_overlap_inv_smaller,(r,key0)),15,1).
fval(3,(comp_overlap_inv_smaller,(node2,triangle)),15,0).
fval(3,(comp_overlap_inv_smaller,(triangle,r)),15,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key0)),15,0).
fval(3,(comp_overlap_inv_smaller,(node2,key1)),15,0).
fval(3,(comp_overlap_inv_smaller,(key1,square)),15,0).
fval(3,(comp_overlap_inv_smaller,(node1,square)),15,0).
fval(3,(comp_overlap_inv_smaller,(key1,node1)),15,0).
fval(3,(comp_overlap_inv_smaller,(triangle,square)),15,0).
fval(3,(comp_overlap_inv_smaller,(key0,square)),15,0).
fval(3,(comp_overlap_inv_smaller,(square,r)),15,0).
fval(3,(comp_overlap_inv_smaller,(square,key0)),15,0).
fval(3,(comp_overlap_inv_smaller,(key1,triangle)),15,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node1)),15,0).
fval(3,(comp_overlap_inv_smaller,(node2,key0)),15,0).
fval(3,(comp_overlap_inv_smaller,(key1,node2)),15,0).
fval(3,(comp_overlap_inv_smaller,(node2,r)),15,0).
fval(3,(comp_overlap_inv_smaller,(key0,node1)),15,0).
fval(3,(comp_overlap_inv_smaller,(node1,triangle)),15,0).
fval(3,(comp_overlap_inv_smaller,(node1,node2)),15,0).
fval(3,(comp_overlap_inv_smaller,(r,square)),15,0).
fval(3,(comp_overlap_inv_smaller,(node1,key1)),15,0).
fval(3,(comp_overlap_inv_smaller,(key0,triangle)),15,0).
fval(3,(comp_overlap_inv_smaller,(key0,node2)),15,0).
fval(3,(comp_overlap_inv_smaller,(r,node1)),15,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node2)),15,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key1)),15,0).
fval(3,(comp_overlap_inv_smaller,(node1,key0)),15,0).
fval(3,(comp_overlap_inv_smaller,(node2,square)),15,0).
fval(3,(comp_overlap_inv_smaller,(square,node1)),15,0).
fval(3,(comp_overlap_inv_smaller,(r,node2)),15,0).
fval(3,(comp_overlap_inv_smaller,(node2,node1)),15,0).
fval(3,(comp_overlap_inv_smaller,(r,triangle)),15,0).
fval(3,(comp_overlap_inv_smaller,(square,triangle)),15,0).
fval(3,(comp_overlap_inv_smaller,(node1,r)),15,0).
fval(3,(comp_overlap_inv_smaller,(square,node2)),15,0).
fval(3,(comp_overlap_inv_smaller,(square,key1)),15,0).
fval(3,(comp_overlap_inv_smaller,(r,key1)),16,1).
fval(3,(comp_overlap_inv_smaller,(key0,r)),16,1).
fval(3,(comp_overlap_inv_smaller,(key0,key1)),16,1).
fval(3,(comp_overlap_inv_smaller,(r,key0)),16,1).
fval(3,(comp_overlap_inv_smaller,(node2,triangle)),16,0).
fval(3,(comp_overlap_inv_smaller,(triangle,r)),16,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key0)),16,0).
fval(3,(comp_overlap_inv_smaller,(node2,key1)),16,0).
fval(3,(comp_overlap_inv_smaller,(key1,square)),16,0).
fval(3,(comp_overlap_inv_smaller,(node1,square)),16,0).
fval(3,(comp_overlap_inv_smaller,(key1,node1)),16,0).
fval(3,(comp_overlap_inv_smaller,(triangle,square)),16,0).
fval(3,(comp_overlap_inv_smaller,(key0,square)),16,0).
fval(3,(comp_overlap_inv_smaller,(square,r)),16,0).
fval(3,(comp_overlap_inv_smaller,(square,key0)),16,0).
fval(3,(comp_overlap_inv_smaller,(key1,triangle)),16,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node1)),16,0).
fval(3,(comp_overlap_inv_smaller,(node2,key0)),16,0).
fval(3,(comp_overlap_inv_smaller,(key1,node2)),16,0).
fval(3,(comp_overlap_inv_smaller,(node2,r)),16,0).
fval(3,(comp_overlap_inv_smaller,(key0,node1)),16,0).
fval(3,(comp_overlap_inv_smaller,(node1,triangle)),16,0).
fval(3,(comp_overlap_inv_smaller,(node1,node2)),16,0).
fval(3,(comp_overlap_inv_smaller,(r,square)),16,0).
fval(3,(comp_overlap_inv_smaller,(node1,key1)),16,0).
fval(3,(comp_overlap_inv_smaller,(key0,triangle)),16,0).
fval(3,(comp_overlap_inv_smaller,(key0,node2)),16,0).
fval(3,(comp_overlap_inv_smaller,(r,node1)),16,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node2)),16,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key1)),16,0).
fval(3,(comp_overlap_inv_smaller,(node1,key0)),16,0).
fval(3,(comp_overlap_inv_smaller,(node2,square)),16,0).
fval(3,(comp_overlap_inv_smaller,(square,node1)),16,0).
fval(3,(comp_overlap_inv_smaller,(r,node2)),16,0).
fval(3,(comp_overlap_inv_smaller,(node2,node1)),16,0).
fval(3,(comp_overlap_inv_smaller,(key1,r)),16,0).
fval(3,(comp_overlap_inv_smaller,(key1,key0)),16,0).
fval(3,(comp_overlap_inv_smaller,(r,triangle)),16,0).
fval(3,(comp_overlap_inv_smaller,(square,triangle)),16,0).
fval(3,(comp_overlap_inv_smaller,(node1,r)),16,0).
fval(3,(comp_overlap_inv_smaller,(square,node2)),16,0).
fval(3,(comp_overlap_inv_smaller,(square,key1)),16,0).
fval(3,(comp_overlap_inv_smaller,(key0,r)),17,1).
fval(3,(comp_overlap_inv_smaller,(key1,r)),17,1).
fval(3,(comp_overlap_inv_smaller,(key1,key0)),17,1).
fval(3,(comp_overlap_inv_smaller,(r,key1)),17,1).
fval(3,(comp_overlap_inv_smaller,(key0,key1)),17,1).
fval(3,(comp_overlap_inv_smaller,(r,key0)),17,1).
fval(3,(comp_overlap_inv_smaller,(node2,triangle)),17,0).
fval(3,(comp_overlap_inv_smaller,(triangle,r)),17,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key0)),17,0).
fval(3,(comp_overlap_inv_smaller,(node2,key1)),17,0).
fval(3,(comp_overlap_inv_smaller,(key1,square)),17,0).
fval(3,(comp_overlap_inv_smaller,(node1,square)),17,0).
fval(3,(comp_overlap_inv_smaller,(key1,node1)),17,0).
fval(3,(comp_overlap_inv_smaller,(triangle,square)),17,0).
fval(3,(comp_overlap_inv_smaller,(key0,square)),17,0).
fval(3,(comp_overlap_inv_smaller,(square,r)),17,0).
fval(3,(comp_overlap_inv_smaller,(square,key0)),17,0).
fval(3,(comp_overlap_inv_smaller,(key1,triangle)),17,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node1)),17,0).
fval(3,(comp_overlap_inv_smaller,(node2,key0)),17,0).
fval(3,(comp_overlap_inv_smaller,(key1,node2)),17,0).
fval(3,(comp_overlap_inv_smaller,(node2,r)),17,0).
fval(3,(comp_overlap_inv_smaller,(key0,node1)),17,0).
fval(3,(comp_overlap_inv_smaller,(node1,triangle)),17,0).
fval(3,(comp_overlap_inv_smaller,(node1,node2)),17,0).
fval(3,(comp_overlap_inv_smaller,(r,square)),17,0).
fval(3,(comp_overlap_inv_smaller,(node1,key1)),17,0).
fval(3,(comp_overlap_inv_smaller,(key0,triangle)),17,0).
fval(3,(comp_overlap_inv_smaller,(key0,node2)),17,0).
fval(3,(comp_overlap_inv_smaller,(r,node1)),17,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node2)),17,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key1)),17,0).
fval(3,(comp_overlap_inv_smaller,(node1,key0)),17,0).
fval(3,(comp_overlap_inv_smaller,(node2,square)),17,0).
fval(3,(comp_overlap_inv_smaller,(square,node1)),17,0).
fval(3,(comp_overlap_inv_smaller,(r,node2)),17,0).
fval(3,(comp_overlap_inv_smaller,(node2,node1)),17,0).
fval(3,(comp_overlap_inv_smaller,(r,triangle)),17,0).
fval(3,(comp_overlap_inv_smaller,(square,triangle)),17,0).
fval(3,(comp_overlap_inv_smaller,(node1,r)),17,0).
fval(3,(comp_overlap_inv_smaller,(square,node2)),17,0).
fval(3,(comp_overlap_inv_smaller,(square,key1)),17,0).
fval(3,(comp_overlap_inv_smaller,(r,key1)),18,1).
fval(3,(comp_overlap_inv_smaller,(key0,r)),18,1).
fval(3,(comp_overlap_inv_smaller,(key0,key1)),18,1).
fval(3,(comp_overlap_inv_smaller,(r,key0)),18,1).
fval(3,(comp_overlap_inv_smaller,(node2,triangle)),18,0).
fval(3,(comp_overlap_inv_smaller,(triangle,r)),18,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key0)),18,0).
fval(3,(comp_overlap_inv_smaller,(node2,key1)),18,0).
fval(3,(comp_overlap_inv_smaller,(key1,square)),18,0).
fval(3,(comp_overlap_inv_smaller,(node1,square)),18,0).
fval(3,(comp_overlap_inv_smaller,(key1,node1)),18,0).
fval(3,(comp_overlap_inv_smaller,(triangle,square)),18,0).
fval(3,(comp_overlap_inv_smaller,(key0,square)),18,0).
fval(3,(comp_overlap_inv_smaller,(square,r)),18,0).
fval(3,(comp_overlap_inv_smaller,(square,key0)),18,0).
fval(3,(comp_overlap_inv_smaller,(key1,triangle)),18,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node1)),18,0).
fval(3,(comp_overlap_inv_smaller,(node2,key0)),18,0).
fval(3,(comp_overlap_inv_smaller,(key1,node2)),18,0).
fval(3,(comp_overlap_inv_smaller,(node2,r)),18,0).
fval(3,(comp_overlap_inv_smaller,(key0,node1)),18,0).
fval(3,(comp_overlap_inv_smaller,(node1,triangle)),18,0).
fval(3,(comp_overlap_inv_smaller,(node1,node2)),18,0).
fval(3,(comp_overlap_inv_smaller,(r,square)),18,0).
fval(3,(comp_overlap_inv_smaller,(node1,key1)),18,0).
fval(3,(comp_overlap_inv_smaller,(key0,triangle)),18,0).
fval(3,(comp_overlap_inv_smaller,(key0,node2)),18,0).
fval(3,(comp_overlap_inv_smaller,(r,node1)),18,0).
fval(3,(comp_overlap_inv_smaller,(triangle,node2)),18,0).
fval(3,(comp_overlap_inv_smaller,(triangle,key1)),18,0).
fval(3,(comp_overlap_inv_smaller,(node1,key0)),18,0).
fval(3,(comp_overlap_inv_smaller,(node2,square)),18,0).
fval(3,(comp_overlap_inv_smaller,(square,node1)),18,0).
fval(3,(comp_overlap_inv_smaller,(r,node2)),18,0).
fval(3,(comp_overlap_inv_smaller,(node2,node1)),18,0).
fval(3,(comp_overlap_inv_smaller,(key1,r)),18,0).
fval(3,(comp_overlap_inv_smaller,(key1,key0)),18,0).
fval(3,(comp_overlap_inv_smaller,(r,triangle)),18,0).
fval(3,(comp_overlap_inv_smaller,(square,triangle)),18,0).
fval(3,(comp_overlap_inv_smaller,(node1,r)),18,0).
fval(3,(comp_overlap_inv_smaller,(square,node2)),18,0).
fval(3,(comp_overlap_inv_smaller,(square,key1)),18,0).
fval(3,(inter_robot_er_smaller_lockedcell,(r,)),0,1).
fval(3,(inter_robot_er_smaller_lockedcell,(node1,)),0,0).
fval(3,(inter_robot_er_smaller_lockedcell,(triangle,)),0,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node2,)),0,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key1,)),0,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key0,)),0,0).
fval(3,(inter_robot_er_smaller_lockedcell,(square,)),0,0).
fval(3,(inter_robot_er_smaller_lockedcell,(r,)),1,1).
fval(3,(inter_robot_er_smaller_lockedcell,(node1,)),1,0).
fval(3,(inter_robot_er_smaller_lockedcell,(triangle,)),1,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node2,)),1,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key1,)),1,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key0,)),1,0).
fval(3,(inter_robot_er_smaller_lockedcell,(square,)),1,0).
fval(3,(inter_robot_er_smaller_lockedcell,(r,)),2,1).
fval(3,(inter_robot_er_smaller_lockedcell,(node1,)),2,0).
fval(3,(inter_robot_er_smaller_lockedcell,(triangle,)),2,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node2,)),2,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key1,)),2,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key0,)),2,0).
fval(3,(inter_robot_er_smaller_lockedcell,(square,)),2,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node1,)),3,0).
fval(3,(inter_robot_er_smaller_lockedcell,(triangle,)),3,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node2,)),3,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key1,)),3,0).
fval(3,(inter_robot_er_smaller_lockedcell,(r,)),3,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key0,)),3,0).
fval(3,(inter_robot_er_smaller_lockedcell,(square,)),3,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node1,)),4,0).
fval(3,(inter_robot_er_smaller_lockedcell,(triangle,)),4,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node2,)),4,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key1,)),4,0).
fval(3,(inter_robot_er_smaller_lockedcell,(r,)),4,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key0,)),4,0).
fval(3,(inter_robot_er_smaller_lockedcell,(square,)),4,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node1,)),5,0).
fval(3,(inter_robot_er_smaller_lockedcell,(triangle,)),5,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node2,)),5,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key1,)),5,0).
fval(3,(inter_robot_er_smaller_lockedcell,(r,)),5,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key0,)),5,0).
fval(3,(inter_robot_er_smaller_lockedcell,(square,)),5,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node1,)),6,0).
fval(3,(inter_robot_er_smaller_lockedcell,(triangle,)),6,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node2,)),6,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key1,)),6,0).
fval(3,(inter_robot_er_smaller_lockedcell,(r,)),6,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key0,)),6,0).
fval(3,(inter_robot_er_smaller_lockedcell,(square,)),6,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node1,)),7,0).
fval(3,(inter_robot_er_smaller_lockedcell,(triangle,)),7,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node2,)),7,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key1,)),7,0).
fval(3,(inter_robot_er_smaller_lockedcell,(r,)),7,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key0,)),7,0).
fval(3,(inter_robot_er_smaller_lockedcell,(square,)),7,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node1,)),8,0).
fval(3,(inter_robot_er_smaller_lockedcell,(triangle,)),8,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node2,)),8,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key1,)),8,0).
fval(3,(inter_robot_er_smaller_lockedcell,(r,)),8,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key0,)),8,0).
fval(3,(inter_robot_er_smaller_lockedcell,(square,)),8,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node1,)),9,0).
fval(3,(inter_robot_er_smaller_lockedcell,(triangle,)),9,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node2,)),9,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key1,)),9,0).
fval(3,(inter_robot_er_smaller_lockedcell,(r,)),9,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key0,)),9,0).
fval(3,(inter_robot_er_smaller_lockedcell,(square,)),9,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node1,)),10,0).
fval(3,(inter_robot_er_smaller_lockedcell,(triangle,)),10,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node2,)),10,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key1,)),10,0).
fval(3,(inter_robot_er_smaller_lockedcell,(r,)),10,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key0,)),10,0).
fval(3,(inter_robot_er_smaller_lockedcell,(square,)),10,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node1,)),11,0).
fval(3,(inter_robot_er_smaller_lockedcell,(triangle,)),11,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node2,)),11,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key1,)),11,0).
fval(3,(inter_robot_er_smaller_lockedcell,(r,)),11,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key0,)),11,0).
fval(3,(inter_robot_er_smaller_lockedcell,(square,)),11,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node1,)),12,0).
fval(3,(inter_robot_er_smaller_lockedcell,(triangle,)),12,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node2,)),12,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key1,)),12,0).
fval(3,(inter_robot_er_smaller_lockedcell,(r,)),12,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key0,)),12,0).
fval(3,(inter_robot_er_smaller_lockedcell,(square,)),12,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node1,)),13,0).
fval(3,(inter_robot_er_smaller_lockedcell,(triangle,)),13,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node2,)),13,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key1,)),13,0).
fval(3,(inter_robot_er_smaller_lockedcell,(r,)),13,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key0,)),13,0).
fval(3,(inter_robot_er_smaller_lockedcell,(square,)),13,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node1,)),14,0).
fval(3,(inter_robot_er_smaller_lockedcell,(triangle,)),14,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node2,)),14,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key1,)),14,0).
fval(3,(inter_robot_er_smaller_lockedcell,(r,)),14,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key0,)),14,0).
fval(3,(inter_robot_er_smaller_lockedcell,(square,)),14,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node1,)),15,0).
fval(3,(inter_robot_er_smaller_lockedcell,(triangle,)),15,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node2,)),15,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key1,)),15,0).
fval(3,(inter_robot_er_smaller_lockedcell,(r,)),15,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key0,)),15,0).
fval(3,(inter_robot_er_smaller_lockedcell,(square,)),15,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node1,)),16,0).
fval(3,(inter_robot_er_smaller_lockedcell,(triangle,)),16,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node2,)),16,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key1,)),16,0).
fval(3,(inter_robot_er_smaller_lockedcell,(r,)),16,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key0,)),16,0).
fval(3,(inter_robot_er_smaller_lockedcell,(square,)),16,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node1,)),17,0).
fval(3,(inter_robot_er_smaller_lockedcell,(triangle,)),17,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node2,)),17,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key1,)),17,0).
fval(3,(inter_robot_er_smaller_lockedcell,(r,)),17,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key0,)),17,0).
fval(3,(inter_robot_er_smaller_lockedcell,(square,)),17,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node1,)),18,0).
fval(3,(inter_robot_er_smaller_lockedcell,(triangle,)),18,0).
fval(3,(inter_robot_er_smaller_lockedcell,(node2,)),18,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key1,)),18,0).
fval(3,(inter_robot_er_smaller_lockedcell,(r,)),18,0).
fval(3,(inter_robot_er_smaller_lockedcell,(key0,)),18,0).
fval(3,(inter_robot_er_smaller_lockedcell,(square,)),18,0).
fval(3,(smaller,(key0,node2)),1).
fval(3,(smaller,(key1,node1)),1).
fval(3,(smaller,(r,node1)),1).
fval(3,(smaller,(key1,node2)),1).
fval(3,(smaller,(r,node2)),1).
fval(3,(smaller,(key0,node1)),1).
fval(3,(smaller,(node2,triangle)),0).
fval(3,(smaller,(triangle,key0)),0).
fval(3,(smaller,(triangle,r)),0).
fval(3,(smaller,(node2,key1)),0).
fval(3,(smaller,(key0,r)),0).
fval(3,(smaller,(key1,square)),0).
fval(3,(smaller,(node1,square)),0).
fval(3,(smaller,(r,key0)),0).
fval(3,(smaller,(triangle,square)),0).
fval(3,(smaller,(key0,square)),0).
fval(3,(smaller,(square,key0)),0).
fval(3,(smaller,(square,r)),0).
fval(3,(smaller,(key1,triangle)),0).
fval(3,(smaller,(triangle,node1)),0).
fval(3,(smaller,(node2,key0)),0).
fval(3,(smaller,(node2,r)),0).
fval(3,(smaller,(node1,triangle)),0).
fval(3,(smaller,(r,square)),0).
fval(3,(smaller,(node1,key1)),0).
fval(3,(smaller,(node1,node2)),0).
fval(3,(smaller,(key0,triangle)),0).
fval(3,(smaller,(triangle,node2)),0).
fval(3,(smaller,(triangle,key1)),0).
fval(3,(smaller,(key0,key1)),0).
fval(3,(smaller,(node2,square)),0).
fval(3,(smaller,(node1,key0)),0).
fval(3,(smaller,(square,node1)),0).
fval(3,(smaller,(key1,key0)),0).
fval(3,(smaller,(r,triangle)),0).
fval(3,(smaller,(node2,node1)),0).
fval(3,(smaller,(key1,r)),0).
fval(3,(smaller,(r,key1)),0).
fval(3,(smaller,(square,triangle)),0).
fval(3,(smaller,(node1,r)),0).
fval(3,(smaller,(square,node2)),0).
fval(3,(smaller,(square,key1)),0).
fval(3,(er_overlap_key,(node1,)),0,1).
fval(3,(er_overlap_key,(triangle,)),0,0).
fval(3,(er_overlap_key,(node2,)),0,0).
fval(3,(er_overlap_key,(key1,)),0,0).
fval(3,(er_overlap_key,(r,)),0,0).
fval(3,(er_overlap_key,(key0,)),0,0).
fval(3,(er_overlap_key,(square,)),0,0).
fval(3,(er_overlap_key,(node1,)),1,1).
fval(3,(er_overlap_key,(triangle,)),1,0).
fval(3,(er_overlap_key,(node2,)),1,0).
fval(3,(er_overlap_key,(key1,)),1,0).
fval(3,(er_overlap_key,(r,)),1,0).
fval(3,(er_overlap_key,(key0,)),1,0).
fval(3,(er_overlap_key,(square,)),1,0).
fval(3,(er_overlap_key,(node1,)),2,1).
fval(3,(er_overlap_key,(triangle,)),2,0).
fval(3,(er_overlap_key,(node2,)),2,0).
fval(3,(er_overlap_key,(key1,)),2,0).
fval(3,(er_overlap_key,(r,)),2,0).
fval(3,(er_overlap_key,(key0,)),2,0).
fval(3,(er_overlap_key,(square,)),2,0).
fval(3,(er_overlap_key,(node1,)),3,1).
fval(3,(er_overlap_key,(triangle,)),3,0).
fval(3,(er_overlap_key,(node2,)),3,0).
fval(3,(er_overlap_key,(key1,)),3,0).
fval(3,(er_overlap_key,(r,)),3,0).
fval(3,(er_overlap_key,(key0,)),3,0).
fval(3,(er_overlap_key,(square,)),3,0).
fval(3,(er_overlap_key,(node1,)),4,1).
fval(3,(er_overlap_key,(triangle,)),4,0).
fval(3,(er_overlap_key,(node2,)),4,0).
fval(3,(er_overlap_key,(key1,)),4,0).
fval(3,(er_overlap_key,(r,)),4,0).
fval(3,(er_overlap_key,(key0,)),4,0).
fval(3,(er_overlap_key,(square,)),4,0).
fval(3,(er_overlap_key,(node1,)),5,1).
fval(3,(er_overlap_key,(triangle,)),5,0).
fval(3,(er_overlap_key,(node2,)),5,0).
fval(3,(er_overlap_key,(key1,)),5,0).
fval(3,(er_overlap_key,(r,)),5,0).
fval(3,(er_overlap_key,(key0,)),5,0).
fval(3,(er_overlap_key,(square,)),5,0).
fval(3,(er_overlap_key,(node1,)),6,1).
fval(3,(er_overlap_key,(node2,)),6,1).
fval(3,(er_overlap_key,(triangle,)),6,0).
fval(3,(er_overlap_key,(key1,)),6,0).
fval(3,(er_overlap_key,(r,)),6,0).
fval(3,(er_overlap_key,(key0,)),6,0).
fval(3,(er_overlap_key,(square,)),6,0).
fval(3,(er_overlap_key,(node1,)),7,1).
fval(3,(er_overlap_key,(triangle,)),7,0).
fval(3,(er_overlap_key,(node2,)),7,0).
fval(3,(er_overlap_key,(key1,)),7,0).
fval(3,(er_overlap_key,(r,)),7,0).
fval(3,(er_overlap_key,(key0,)),7,0).
fval(3,(er_overlap_key,(square,)),7,0).
fval(3,(er_overlap_key,(node1,)),8,1).
fval(3,(er_overlap_key,(triangle,)),8,0).
fval(3,(er_overlap_key,(node2,)),8,0).
fval(3,(er_overlap_key,(key1,)),8,0).
fval(3,(er_overlap_key,(r,)),8,0).
fval(3,(er_overlap_key,(key0,)),8,0).
fval(3,(er_overlap_key,(square,)),8,0).
fval(3,(er_overlap_key,(node1,)),9,1).
fval(3,(er_overlap_key,(node2,)),9,1).
fval(3,(er_overlap_key,(triangle,)),9,0).
fval(3,(er_overlap_key,(key1,)),9,0).
fval(3,(er_overlap_key,(r,)),9,0).
fval(3,(er_overlap_key,(key0,)),9,0).
fval(3,(er_overlap_key,(square,)),9,0).
fval(3,(er_overlap_key,(node1,)),10,1).
fval(3,(er_overlap_key,(triangle,)),10,0).
fval(3,(er_overlap_key,(node2,)),10,0).
fval(3,(er_overlap_key,(key1,)),10,0).
fval(3,(er_overlap_key,(r,)),10,0).
fval(3,(er_overlap_key,(key0,)),10,0).
fval(3,(er_overlap_key,(square,)),10,0).
fval(3,(er_overlap_key,(node2,)),11,1).
fval(3,(er_overlap_key,(node1,)),11,0).
fval(3,(er_overlap_key,(triangle,)),11,0).
fval(3,(er_overlap_key,(key1,)),11,0).
fval(3,(er_overlap_key,(key0,)),11,0).
fval(3,(er_overlap_key,(r,)),11,0).
fval(3,(er_overlap_key,(square,)),11,0).
fval(3,(er_overlap_key,(node1,)),12,1).
fval(3,(er_overlap_key,(node2,)),12,1).
fval(3,(er_overlap_key,(triangle,)),12,0).
fval(3,(er_overlap_key,(key1,)),12,0).
fval(3,(er_overlap_key,(r,)),12,0).
fval(3,(er_overlap_key,(key0,)),12,0).
fval(3,(er_overlap_key,(square,)),12,0).
fval(3,(er_overlap_key,(node2,)),13,1).
fval(3,(er_overlap_key,(node1,)),13,0).
fval(3,(er_overlap_key,(triangle,)),13,0).
fval(3,(er_overlap_key,(key1,)),13,0).
fval(3,(er_overlap_key,(key0,)),13,0).
fval(3,(er_overlap_key,(r,)),13,0).
fval(3,(er_overlap_key,(square,)),13,0).
fval(3,(er_overlap_key,(node1,)),14,1).
fval(3,(er_overlap_key,(node2,)),14,1).
fval(3,(er_overlap_key,(triangle,)),14,0).
fval(3,(er_overlap_key,(key1,)),14,0).
fval(3,(er_overlap_key,(r,)),14,0).
fval(3,(er_overlap_key,(key0,)),14,0).
fval(3,(er_overlap_key,(square,)),14,0).
fval(3,(er_overlap_key,(node2,)),15,1).
fval(3,(er_overlap_key,(node1,)),15,0).
fval(3,(er_overlap_key,(triangle,)),15,0).
fval(3,(er_overlap_key,(key1,)),15,0).
fval(3,(er_overlap_key,(key0,)),15,0).
fval(3,(er_overlap_key,(r,)),15,0).
fval(3,(er_overlap_key,(square,)),15,0).
fval(3,(er_overlap_key,(node2,)),16,1).
fval(3,(er_overlap_key,(node1,)),16,0).
fval(3,(er_overlap_key,(triangle,)),16,0).
fval(3,(er_overlap_key,(key1,)),16,0).
fval(3,(er_overlap_key,(key0,)),16,0).
fval(3,(er_overlap_key,(r,)),16,0).
fval(3,(er_overlap_key,(square,)),16,0).
fval(3,(er_overlap_key,(node2,)),17,1).
fval(3,(er_overlap_key,(node1,)),17,0).
fval(3,(er_overlap_key,(triangle,)),17,0).
fval(3,(er_overlap_key,(key1,)),17,0).
fval(3,(er_overlap_key,(key0,)),17,0).
fval(3,(er_overlap_key,(r,)),17,0).
fval(3,(er_overlap_key,(square,)),17,0).
fval(3,(er_overlap_key,(node2,)),18,1).
fval(3,(er_overlap_key,(node1,)),18,0).
fval(3,(er_overlap_key,(triangle,)),18,0).
fval(3,(er_overlap_key,(key1,)),18,0).
fval(3,(er_overlap_key,(key0,)),18,0).
fval(3,(er_overlap_key,(r,)),18,0).
fval(3,(er_overlap_key,(square,)),18,0).
fval(3,(inter_er_left_lockedcell_er_overlap_key,(node1,)),0).
fval(3,(inter_er_left_lockedcell_er_overlap_key,(triangle,)),0).
fval(3,(inter_er_left_lockedcell_er_overlap_key,(node2,)),0).
fval(3,(inter_er_left_lockedcell_er_overlap_key,(key1,)),0).
fval(3,(inter_er_left_lockedcell_er_overlap_key,(r,)),0).
fval(3,(inter_er_left_lockedcell_er_overlap_key,(key0,)),0).
fval(3,(inter_er_left_lockedcell_er_overlap_key,(square,)),0).
fval(3,(comp_left_overlap,(node2,key1)),0,1).
fval(3,(comp_left_overlap,(node2,r)),0,1).
fval(3,(comp_left_overlap,(node2,key0)),0,1).
fval(3,(comp_left_overlap,(node2,triangle)),0,0).
fval(3,(comp_left_overlap,(triangle,key0)),0,0).
fval(3,(comp_left_overlap,(triangle,r)),0,0).
fval(3,(comp_left_overlap,(key0,r)),0,0).
fval(3,(comp_left_overlap,(key1,square)),0,0).
fval(3,(comp_left_overlap,(node1,square)),0,0).
fval(3,(comp_left_overlap,(r,key0)),0,0).
fval(3,(comp_left_overlap,(key1,node1)),0,0).
fval(3,(comp_left_overlap,(triangle,square)),0,0).
fval(3,(comp_left_overlap,(key0,square)),0,0).
fval(3,(comp_left_overlap,(square,key0)),0,0).
fval(3,(comp_left_overlap,(square,r)),0,0).
fval(3,(comp_left_overlap,(key1,triangle)),0,0).
fval(3,(comp_left_overlap,(triangle,node1)),0,0).
fval(3,(comp_left_overlap,(key1,node2)),0,0).
fval(3,(comp_left_overlap,(key0,node1)),0,0).
fval(3,(comp_left_overlap,(node1,triangle)),0,0).
fval(3,(comp_left_overlap,(r,square)),0,0).
fval(3,(comp_left_overlap,(node1,key1)),0,0).
fval(3,(comp_left_overlap,(node1,node2)),0,0).
fval(3,(comp_left_overlap,(key0,triangle)),0,0).
fval(3,(comp_left_overlap,(triangle,node2)),0,0).
fval(3,(comp_left_overlap,(triangle,key1)),0,0).
fval(3,(comp_left_overlap,(r,node1)),0,0).
fval(3,(comp_left_overlap,(key0,node2)),0,0).
fval(3,(comp_left_overlap,(key0,key1)),0,0).
fval(3,(comp_left_overlap,(node2,square)),0,0).
fval(3,(comp_left_overlap,(node1,key0)),0,0).
fval(3,(comp_left_overlap,(square,node1)),0,0).
fval(3,(comp_left_overlap,(r,node2)),0,0).
fval(3,(comp_left_overlap,(key1,key0)),0,0).
fval(3,(comp_left_overlap,(r,triangle)),0,0).
fval(3,(comp_left_overlap,(node2,node1)),0,0).
fval(3,(comp_left_overlap,(key1,r)),0,0).
fval(3,(comp_left_overlap,(r,key1)),0,0).
fval(3,(comp_left_overlap,(square,triangle)),0,0).
fval(3,(comp_left_overlap,(node1,r)),0,0).
fval(3,(comp_left_overlap,(square,node2)),0,0).
fval(3,(comp_left_overlap,(square,key1)),0,0).
fval(3,(comp_left_overlap,(node2,key1)),1,1).
fval(3,(comp_left_overlap,(node2,r)),1,1).
fval(3,(comp_left_overlap,(node2,triangle)),1,0).
fval(3,(comp_left_overlap,(triangle,key0)),1,0).
fval(3,(comp_left_overlap,(triangle,r)),1,0).
fval(3,(comp_left_overlap,(key0,r)),1,0).
fval(3,(comp_left_overlap,(key1,square)),1,0).
fval(3,(comp_left_overlap,(node1,square)),1,0).
fval(3,(comp_left_overlap,(r,key0)),1,0).
fval(3,(comp_left_overlap,(key1,node1)),1,0).
fval(3,(comp_left_overlap,(triangle,square)),1,0).
fval(3,(comp_left_overlap,(key0,square)),1,0).
fval(3,(comp_left_overlap,(square,key0)),1,0).
fval(3,(comp_left_overlap,(square,r)),1,0).
fval(3,(comp_left_overlap,(node2,key0)),1,0).
fval(3,(comp_left_overlap,(key1,triangle)),1,0).
fval(3,(comp_left_overlap,(triangle,node1)),1,0).
fval(3,(comp_left_overlap,(key1,node2)),1,0).
fval(3,(comp_left_overlap,(key0,node1)),1,0).
fval(3,(comp_left_overlap,(node1,triangle)),1,0).
fval(3,(comp_left_overlap,(r,square)),1,0).
fval(3,(comp_left_overlap,(node1,key1)),1,0).
fval(3,(comp_left_overlap,(node1,node2)),1,0).
fval(3,(comp_left_overlap,(key0,triangle)),1,0).
fval(3,(comp_left_overlap,(triangle,node2)),1,0).
fval(3,(comp_left_overlap,(triangle,key1)),1,0).
fval(3,(comp_left_overlap,(r,node1)),1,0).
fval(3,(comp_left_overlap,(key0,node2)),1,0).
fval(3,(comp_left_overlap,(key0,key1)),1,0).
fval(3,(comp_left_overlap,(node2,square)),1,0).
fval(3,(comp_left_overlap,(node1,key0)),1,0).
fval(3,(comp_left_overlap,(square,node1)),1,0).
fval(3,(comp_left_overlap,(r,node2)),1,0).
fval(3,(comp_left_overlap,(key1,key0)),1,0).
fval(3,(comp_left_overlap,(r,triangle)),1,0).
fval(3,(comp_left_overlap,(node2,node1)),1,0).
fval(3,(comp_left_overlap,(key1,r)),1,0).
fval(3,(comp_left_overlap,(r,key1)),1,0).
fval(3,(comp_left_overlap,(square,triangle)),1,0).
fval(3,(comp_left_overlap,(node1,r)),1,0).
fval(3,(comp_left_overlap,(square,node2)),1,0).
fval(3,(comp_left_overlap,(square,key1)),1,0).
fval(3,(comp_left_overlap,(node2,r)),2,1).
fval(3,(comp_left_overlap,(node2,key0)),2,1).
fval(3,(comp_left_overlap,(node2,triangle)),2,0).
fval(3,(comp_left_overlap,(triangle,key0)),2,0).
fval(3,(comp_left_overlap,(triangle,r)),2,0).
fval(3,(comp_left_overlap,(key0,r)),2,0).
fval(3,(comp_left_overlap,(node2,key1)),2,0).
fval(3,(comp_left_overlap,(key1,square)),2,0).
fval(3,(comp_left_overlap,(node1,square)),2,0).
fval(3,(comp_left_overlap,(r,key0)),2,0).
fval(3,(comp_left_overlap,(key1,node1)),2,0).
fval(3,(comp_left_overlap,(triangle,square)),2,0).
fval(3,(comp_left_overlap,(key0,square)),2,0).
fval(3,(comp_left_overlap,(square,key0)),2,0).
fval(3,(comp_left_overlap,(square,r)),2,0).
fval(3,(comp_left_overlap,(key1,triangle)),2,0).
fval(3,(comp_left_overlap,(triangle,node1)),2,0).
fval(3,(comp_left_overlap,(key1,node2)),2,0).
fval(3,(comp_left_overlap,(key0,node1)),2,0).
fval(3,(comp_left_overlap,(node1,triangle)),2,0).
fval(3,(comp_left_overlap,(r,square)),2,0).
fval(3,(comp_left_overlap,(node1,key1)),2,0).
fval(3,(comp_left_overlap,(node1,node2)),2,0).
fval(3,(comp_left_overlap,(key0,triangle)),2,0).
fval(3,(comp_left_overlap,(triangle,node2)),2,0).
fval(3,(comp_left_overlap,(triangle,key1)),2,0).
fval(3,(comp_left_overlap,(r,node1)),2,0).
fval(3,(comp_left_overlap,(key0,node2)),2,0).
fval(3,(comp_left_overlap,(key0,key1)),2,0).
fval(3,(comp_left_overlap,(node2,square)),2,0).
fval(3,(comp_left_overlap,(node1,key0)),2,0).
fval(3,(comp_left_overlap,(square,node1)),2,0).
fval(3,(comp_left_overlap,(r,node2)),2,0).
fval(3,(comp_left_overlap,(key1,key0)),2,0).
fval(3,(comp_left_overlap,(r,triangle)),2,0).
fval(3,(comp_left_overlap,(node2,node1)),2,0).
fval(3,(comp_left_overlap,(key1,r)),2,0).
fval(3,(comp_left_overlap,(r,key1)),2,0).
fval(3,(comp_left_overlap,(square,triangle)),2,0).
fval(3,(comp_left_overlap,(node1,r)),2,0).
fval(3,(comp_left_overlap,(square,node2)),2,0).
fval(3,(comp_left_overlap,(square,key1)),2,0).
fval(3,(comp_left_overlap,(node2,r)),3,1).
fval(3,(comp_left_overlap,(node2,key0)),3,1).
fval(3,(comp_left_overlap,(node2,triangle)),3,0).
fval(3,(comp_left_overlap,(triangle,key0)),3,0).
fval(3,(comp_left_overlap,(triangle,r)),3,0).
fval(3,(comp_left_overlap,(key0,r)),3,0).
fval(3,(comp_left_overlap,(node2,key1)),3,0).
fval(3,(comp_left_overlap,(key1,square)),3,0).
fval(3,(comp_left_overlap,(node1,square)),3,0).
fval(3,(comp_left_overlap,(r,key0)),3,0).
fval(3,(comp_left_overlap,(key1,node1)),3,0).
fval(3,(comp_left_overlap,(triangle,square)),3,0).
fval(3,(comp_left_overlap,(key0,square)),3,0).
fval(3,(comp_left_overlap,(square,key0)),3,0).
fval(3,(comp_left_overlap,(square,r)),3,0).
fval(3,(comp_left_overlap,(key1,triangle)),3,0).
fval(3,(comp_left_overlap,(triangle,node1)),3,0).
fval(3,(comp_left_overlap,(key1,node2)),3,0).
fval(3,(comp_left_overlap,(key0,node1)),3,0).
fval(3,(comp_left_overlap,(node1,triangle)),3,0).
fval(3,(comp_left_overlap,(r,square)),3,0).
fval(3,(comp_left_overlap,(node1,key1)),3,0).
fval(3,(comp_left_overlap,(node1,node2)),3,0).
fval(3,(comp_left_overlap,(key0,triangle)),3,0).
fval(3,(comp_left_overlap,(triangle,node2)),3,0).
fval(3,(comp_left_overlap,(triangle,key1)),3,0).
fval(3,(comp_left_overlap,(r,node1)),3,0).
fval(3,(comp_left_overlap,(key0,node2)),3,0).
fval(3,(comp_left_overlap,(key0,key1)),3,0).
fval(3,(comp_left_overlap,(node2,square)),3,0).
fval(3,(comp_left_overlap,(node1,key0)),3,0).
fval(3,(comp_left_overlap,(square,node1)),3,0).
fval(3,(comp_left_overlap,(r,node2)),3,0).
fval(3,(comp_left_overlap,(key1,key0)),3,0).
fval(3,(comp_left_overlap,(r,triangle)),3,0).
fval(3,(comp_left_overlap,(node2,node1)),3,0).
fval(3,(comp_left_overlap,(key1,r)),3,0).
fval(3,(comp_left_overlap,(r,key1)),3,0).
fval(3,(comp_left_overlap,(square,triangle)),3,0).
fval(3,(comp_left_overlap,(node1,r)),3,0).
fval(3,(comp_left_overlap,(square,node2)),3,0).
fval(3,(comp_left_overlap,(square,key1)),3,0).
fval(3,(comp_left_overlap,(node2,key0)),4,1).
fval(3,(comp_left_overlap,(node2,triangle)),4,0).
fval(3,(comp_left_overlap,(triangle,key0)),4,0).
fval(3,(comp_left_overlap,(triangle,r)),4,0).
fval(3,(comp_left_overlap,(key0,r)),4,0).
fval(3,(comp_left_overlap,(node2,key1)),4,0).
fval(3,(comp_left_overlap,(key1,square)),4,0).
fval(3,(comp_left_overlap,(node1,square)),4,0).
fval(3,(comp_left_overlap,(r,key0)),4,0).
fval(3,(comp_left_overlap,(key1,node1)),4,0).
fval(3,(comp_left_overlap,(triangle,square)),4,0).
fval(3,(comp_left_overlap,(key0,square)),4,0).
fval(3,(comp_left_overlap,(square,key0)),4,0).
fval(3,(comp_left_overlap,(square,r)),4,0).
fval(3,(comp_left_overlap,(key1,triangle)),4,0).
fval(3,(comp_left_overlap,(triangle,node1)),4,0).
fval(3,(comp_left_overlap,(key1,node2)),4,0).
fval(3,(comp_left_overlap,(node2,r)),4,0).
fval(3,(comp_left_overlap,(key0,node1)),4,0).
fval(3,(comp_left_overlap,(node1,triangle)),4,0).
fval(3,(comp_left_overlap,(r,square)),4,0).
fval(3,(comp_left_overlap,(node1,key1)),4,0).
fval(3,(comp_left_overlap,(node1,node2)),4,0).
fval(3,(comp_left_overlap,(key0,triangle)),4,0).
fval(3,(comp_left_overlap,(triangle,node2)),4,0).
fval(3,(comp_left_overlap,(triangle,key1)),4,0).
fval(3,(comp_left_overlap,(r,node1)),4,0).
fval(3,(comp_left_overlap,(key0,node2)),4,0).
fval(3,(comp_left_overlap,(key0,key1)),4,0).
fval(3,(comp_left_overlap,(node2,square)),4,0).
fval(3,(comp_left_overlap,(node1,key0)),4,0).
fval(3,(comp_left_overlap,(square,node1)),4,0).
fval(3,(comp_left_overlap,(r,node2)),4,0).
fval(3,(comp_left_overlap,(key1,key0)),4,0).
fval(3,(comp_left_overlap,(r,triangle)),4,0).
fval(3,(comp_left_overlap,(node2,node1)),4,0).
fval(3,(comp_left_overlap,(key1,r)),4,0).
fval(3,(comp_left_overlap,(r,key1)),4,0).
fval(3,(comp_left_overlap,(square,triangle)),4,0).
fval(3,(comp_left_overlap,(node1,r)),4,0).
fval(3,(comp_left_overlap,(square,node2)),4,0).
fval(3,(comp_left_overlap,(square,key1)),4,0).
fval(3,(comp_left_overlap,(node2,key1)),5,1).
fval(3,(comp_left_overlap,(node2,r)),5,1).
fval(3,(comp_left_overlap,(node2,key0)),5,1).
fval(3,(comp_left_overlap,(node2,triangle)),5,0).
fval(3,(comp_left_overlap,(triangle,key0)),5,0).
fval(3,(comp_left_overlap,(triangle,r)),5,0).
fval(3,(comp_left_overlap,(key0,r)),5,0).
fval(3,(comp_left_overlap,(key1,square)),5,0).
fval(3,(comp_left_overlap,(node1,square)),5,0).
fval(3,(comp_left_overlap,(r,key0)),5,0).
fval(3,(comp_left_overlap,(key1,node1)),5,0).
fval(3,(comp_left_overlap,(triangle,square)),5,0).
fval(3,(comp_left_overlap,(key0,square)),5,0).
fval(3,(comp_left_overlap,(square,key0)),5,0).
fval(3,(comp_left_overlap,(square,r)),5,0).
fval(3,(comp_left_overlap,(key1,triangle)),5,0).
fval(3,(comp_left_overlap,(triangle,node1)),5,0).
fval(3,(comp_left_overlap,(key1,node2)),5,0).
fval(3,(comp_left_overlap,(key0,node1)),5,0).
fval(3,(comp_left_overlap,(node1,triangle)),5,0).
fval(3,(comp_left_overlap,(r,square)),5,0).
fval(3,(comp_left_overlap,(node1,key1)),5,0).
fval(3,(comp_left_overlap,(node1,node2)),5,0).
fval(3,(comp_left_overlap,(key0,triangle)),5,0).
fval(3,(comp_left_overlap,(triangle,node2)),5,0).
fval(3,(comp_left_overlap,(triangle,key1)),5,0).
fval(3,(comp_left_overlap,(r,node1)),5,0).
fval(3,(comp_left_overlap,(key0,node2)),5,0).
fval(3,(comp_left_overlap,(key0,key1)),5,0).
fval(3,(comp_left_overlap,(node2,square)),5,0).
fval(3,(comp_left_overlap,(node1,key0)),5,0).
fval(3,(comp_left_overlap,(square,node1)),5,0).
fval(3,(comp_left_overlap,(r,node2)),5,0).
fval(3,(comp_left_overlap,(key1,key0)),5,0).
fval(3,(comp_left_overlap,(r,triangle)),5,0).
fval(3,(comp_left_overlap,(node2,node1)),5,0).
fval(3,(comp_left_overlap,(key1,r)),5,0).
fval(3,(comp_left_overlap,(r,key1)),5,0).
fval(3,(comp_left_overlap,(square,triangle)),5,0).
fval(3,(comp_left_overlap,(node1,r)),5,0).
fval(3,(comp_left_overlap,(square,node2)),5,0).
fval(3,(comp_left_overlap,(square,key1)),5,0).
fval(3,(comp_left_overlap,(node2,key0)),6,1).
fval(3,(comp_left_overlap,(node2,triangle)),6,0).
fval(3,(comp_left_overlap,(triangle,key0)),6,0).
fval(3,(comp_left_overlap,(triangle,r)),6,0).
fval(3,(comp_left_overlap,(key0,r)),6,0).
fval(3,(comp_left_overlap,(node2,key1)),6,0).
fval(3,(comp_left_overlap,(key1,square)),6,0).
fval(3,(comp_left_overlap,(node1,square)),6,0).
fval(3,(comp_left_overlap,(r,key0)),6,0).
fval(3,(comp_left_overlap,(key1,node1)),6,0).
fval(3,(comp_left_overlap,(triangle,square)),6,0).
fval(3,(comp_left_overlap,(key0,square)),6,0).
fval(3,(comp_left_overlap,(square,key0)),6,0).
fval(3,(comp_left_overlap,(square,r)),6,0).
fval(3,(comp_left_overlap,(key1,triangle)),6,0).
fval(3,(comp_left_overlap,(triangle,node1)),6,0).
fval(3,(comp_left_overlap,(key1,node2)),6,0).
fval(3,(comp_left_overlap,(node2,r)),6,0).
fval(3,(comp_left_overlap,(key0,node1)),6,0).
fval(3,(comp_left_overlap,(node1,triangle)),6,0).
fval(3,(comp_left_overlap,(r,square)),6,0).
fval(3,(comp_left_overlap,(node1,key1)),6,0).
fval(3,(comp_left_overlap,(node1,node2)),6,0).
fval(3,(comp_left_overlap,(key0,triangle)),6,0).
fval(3,(comp_left_overlap,(triangle,node2)),6,0).
fval(3,(comp_left_overlap,(triangle,key1)),6,0).
fval(3,(comp_left_overlap,(r,node1)),6,0).
fval(3,(comp_left_overlap,(key0,node2)),6,0).
fval(3,(comp_left_overlap,(key0,key1)),6,0).
fval(3,(comp_left_overlap,(node2,square)),6,0).
fval(3,(comp_left_overlap,(node1,key0)),6,0).
fval(3,(comp_left_overlap,(square,node1)),6,0).
fval(3,(comp_left_overlap,(r,node2)),6,0).
fval(3,(comp_left_overlap,(key1,key0)),6,0).
fval(3,(comp_left_overlap,(r,triangle)),6,0).
fval(3,(comp_left_overlap,(node2,node1)),6,0).
fval(3,(comp_left_overlap,(key1,r)),6,0).
fval(3,(comp_left_overlap,(r,key1)),6,0).
fval(3,(comp_left_overlap,(square,triangle)),6,0).
fval(3,(comp_left_overlap,(node1,r)),6,0).
fval(3,(comp_left_overlap,(square,node2)),6,0).
fval(3,(comp_left_overlap,(square,key1)),6,0).
fval(3,(comp_left_overlap,(node2,key1)),7,1).
fval(3,(comp_left_overlap,(node2,key0)),7,1).
fval(3,(comp_left_overlap,(node2,triangle)),7,0).
fval(3,(comp_left_overlap,(triangle,key0)),7,0).
fval(3,(comp_left_overlap,(triangle,r)),7,0).
fval(3,(comp_left_overlap,(key0,r)),7,0).
fval(3,(comp_left_overlap,(key1,square)),7,0).
fval(3,(comp_left_overlap,(node1,square)),7,0).
fval(3,(comp_left_overlap,(r,key0)),7,0).
fval(3,(comp_left_overlap,(key1,node1)),7,0).
fval(3,(comp_left_overlap,(triangle,square)),7,0).
fval(3,(comp_left_overlap,(key0,square)),7,0).
fval(3,(comp_left_overlap,(square,key0)),7,0).
fval(3,(comp_left_overlap,(square,r)),7,0).
fval(3,(comp_left_overlap,(key1,triangle)),7,0).
fval(3,(comp_left_overlap,(triangle,node1)),7,0).
fval(3,(comp_left_overlap,(key1,node2)),7,0).
fval(3,(comp_left_overlap,(node2,r)),7,0).
fval(3,(comp_left_overlap,(key0,node1)),7,0).
fval(3,(comp_left_overlap,(node1,triangle)),7,0).
fval(3,(comp_left_overlap,(r,square)),7,0).
fval(3,(comp_left_overlap,(node1,key1)),7,0).
fval(3,(comp_left_overlap,(node1,node2)),7,0).
fval(3,(comp_left_overlap,(key0,triangle)),7,0).
fval(3,(comp_left_overlap,(triangle,node2)),7,0).
fval(3,(comp_left_overlap,(triangle,key1)),7,0).
fval(3,(comp_left_overlap,(r,node1)),7,0).
fval(3,(comp_left_overlap,(key0,node2)),7,0).
fval(3,(comp_left_overlap,(key0,key1)),7,0).
fval(3,(comp_left_overlap,(node2,square)),7,0).
fval(3,(comp_left_overlap,(node1,key0)),7,0).
fval(3,(comp_left_overlap,(square,node1)),7,0).
fval(3,(comp_left_overlap,(r,node2)),7,0).
fval(3,(comp_left_overlap,(key1,key0)),7,0).
fval(3,(comp_left_overlap,(r,triangle)),7,0).
fval(3,(comp_left_overlap,(node2,node1)),7,0).
fval(3,(comp_left_overlap,(key1,r)),7,0).
fval(3,(comp_left_overlap,(r,key1)),7,0).
fval(3,(comp_left_overlap,(square,triangle)),7,0).
fval(3,(comp_left_overlap,(node1,r)),7,0).
fval(3,(comp_left_overlap,(square,node2)),7,0).
fval(3,(comp_left_overlap,(square,key1)),7,0).
fval(3,(comp_left_overlap,(node2,key1)),8,1).
fval(3,(comp_left_overlap,(node2,r)),8,1).
fval(3,(comp_left_overlap,(node2,triangle)),8,0).
fval(3,(comp_left_overlap,(triangle,key0)),8,0).
fval(3,(comp_left_overlap,(triangle,r)),8,0).
fval(3,(comp_left_overlap,(key0,r)),8,0).
fval(3,(comp_left_overlap,(key1,square)),8,0).
fval(3,(comp_left_overlap,(node1,square)),8,0).
fval(3,(comp_left_overlap,(r,key0)),8,0).
fval(3,(comp_left_overlap,(key1,node1)),8,0).
fval(3,(comp_left_overlap,(triangle,square)),8,0).
fval(3,(comp_left_overlap,(key0,square)),8,0).
fval(3,(comp_left_overlap,(square,key0)),8,0).
fval(3,(comp_left_overlap,(square,r)),8,0).
fval(3,(comp_left_overlap,(node2,key0)),8,0).
fval(3,(comp_left_overlap,(key1,triangle)),8,0).
fval(3,(comp_left_overlap,(triangle,node1)),8,0).
fval(3,(comp_left_overlap,(key1,node2)),8,0).
fval(3,(comp_left_overlap,(key0,node1)),8,0).
fval(3,(comp_left_overlap,(node1,triangle)),8,0).
fval(3,(comp_left_overlap,(r,square)),8,0).
fval(3,(comp_left_overlap,(node1,key1)),8,0).
fval(3,(comp_left_overlap,(node1,node2)),8,0).
fval(3,(comp_left_overlap,(key0,triangle)),8,0).
fval(3,(comp_left_overlap,(triangle,node2)),8,0).
fval(3,(comp_left_overlap,(triangle,key1)),8,0).
fval(3,(comp_left_overlap,(r,node1)),8,0).
fval(3,(comp_left_overlap,(key0,node2)),8,0).
fval(3,(comp_left_overlap,(key0,key1)),8,0).
fval(3,(comp_left_overlap,(node2,square)),8,0).
fval(3,(comp_left_overlap,(node1,key0)),8,0).
fval(3,(comp_left_overlap,(square,node1)),8,0).
fval(3,(comp_left_overlap,(r,node2)),8,0).
fval(3,(comp_left_overlap,(key1,key0)),8,0).
fval(3,(comp_left_overlap,(r,triangle)),8,0).
fval(3,(comp_left_overlap,(node2,node1)),8,0).
fval(3,(comp_left_overlap,(key1,r)),8,0).
fval(3,(comp_left_overlap,(r,key1)),8,0).
fval(3,(comp_left_overlap,(square,triangle)),8,0).
fval(3,(comp_left_overlap,(node1,r)),8,0).
fval(3,(comp_left_overlap,(square,node2)),8,0).
fval(3,(comp_left_overlap,(square,key1)),8,0).
fval(3,(comp_left_overlap,(node2,r)),9,1).
fval(3,(comp_left_overlap,(node2,key0)),9,1).
fval(3,(comp_left_overlap,(node2,triangle)),9,0).
fval(3,(comp_left_overlap,(triangle,key0)),9,0).
fval(3,(comp_left_overlap,(triangle,r)),9,0).
fval(3,(comp_left_overlap,(key0,r)),9,0).
fval(3,(comp_left_overlap,(node2,key1)),9,0).
fval(3,(comp_left_overlap,(key1,square)),9,0).
fval(3,(comp_left_overlap,(node1,square)),9,0).
fval(3,(comp_left_overlap,(r,key0)),9,0).
fval(3,(comp_left_overlap,(key1,node1)),9,0).
fval(3,(comp_left_overlap,(triangle,square)),9,0).
fval(3,(comp_left_overlap,(key0,square)),9,0).
fval(3,(comp_left_overlap,(square,key0)),9,0).
fval(3,(comp_left_overlap,(square,r)),9,0).
fval(3,(comp_left_overlap,(key1,triangle)),9,0).
fval(3,(comp_left_overlap,(triangle,node1)),9,0).
fval(3,(comp_left_overlap,(key1,node2)),9,0).
fval(3,(comp_left_overlap,(key0,node1)),9,0).
fval(3,(comp_left_overlap,(node1,triangle)),9,0).
fval(3,(comp_left_overlap,(r,square)),9,0).
fval(3,(comp_left_overlap,(node1,key1)),9,0).
fval(3,(comp_left_overlap,(node1,node2)),9,0).
fval(3,(comp_left_overlap,(key0,triangle)),9,0).
fval(3,(comp_left_overlap,(triangle,node2)),9,0).
fval(3,(comp_left_overlap,(triangle,key1)),9,0).
fval(3,(comp_left_overlap,(r,node1)),9,0).
fval(3,(comp_left_overlap,(key0,node2)),9,0).
fval(3,(comp_left_overlap,(key0,key1)),9,0).
fval(3,(comp_left_overlap,(node2,square)),9,0).
fval(3,(comp_left_overlap,(node1,key0)),9,0).
fval(3,(comp_left_overlap,(square,node1)),9,0).
fval(3,(comp_left_overlap,(r,node2)),9,0).
fval(3,(comp_left_overlap,(key1,key0)),9,0).
fval(3,(comp_left_overlap,(r,triangle)),9,0).
fval(3,(comp_left_overlap,(node2,node1)),9,0).
fval(3,(comp_left_overlap,(key1,r)),9,0).
fval(3,(comp_left_overlap,(r,key1)),9,0).
fval(3,(comp_left_overlap,(square,triangle)),9,0).
fval(3,(comp_left_overlap,(node1,r)),9,0).
fval(3,(comp_left_overlap,(square,node2)),9,0).
fval(3,(comp_left_overlap,(square,key1)),9,0).
fval(3,(comp_left_overlap,(node2,key1)),10,1).
fval(3,(comp_left_overlap,(node2,triangle)),10,0).
fval(3,(comp_left_overlap,(triangle,key0)),10,0).
fval(3,(comp_left_overlap,(triangle,r)),10,0).
fval(3,(comp_left_overlap,(key0,r)),10,0).
fval(3,(comp_left_overlap,(key1,square)),10,0).
fval(3,(comp_left_overlap,(node1,square)),10,0).
fval(3,(comp_left_overlap,(r,key0)),10,0).
fval(3,(comp_left_overlap,(key1,node1)),10,0).
fval(3,(comp_left_overlap,(triangle,square)),10,0).
fval(3,(comp_left_overlap,(key0,square)),10,0).
fval(3,(comp_left_overlap,(square,key0)),10,0).
fval(3,(comp_left_overlap,(square,r)),10,0).
fval(3,(comp_left_overlap,(node2,key0)),10,0).
fval(3,(comp_left_overlap,(key1,triangle)),10,0).
fval(3,(comp_left_overlap,(triangle,node1)),10,0).
fval(3,(comp_left_overlap,(key1,node2)),10,0).
fval(3,(comp_left_overlap,(node2,r)),10,0).
fval(3,(comp_left_overlap,(key0,node1)),10,0).
fval(3,(comp_left_overlap,(node1,triangle)),10,0).
fval(3,(comp_left_overlap,(r,square)),10,0).
fval(3,(comp_left_overlap,(node1,key1)),10,0).
fval(3,(comp_left_overlap,(node1,node2)),10,0).
fval(3,(comp_left_overlap,(key0,triangle)),10,0).
fval(3,(comp_left_overlap,(triangle,node2)),10,0).
fval(3,(comp_left_overlap,(triangle,key1)),10,0).
fval(3,(comp_left_overlap,(r,node1)),10,0).
fval(3,(comp_left_overlap,(key0,node2)),10,0).
fval(3,(comp_left_overlap,(key0,key1)),10,0).
fval(3,(comp_left_overlap,(node2,square)),10,0).
fval(3,(comp_left_overlap,(node1,key0)),10,0).
fval(3,(comp_left_overlap,(square,node1)),10,0).
fval(3,(comp_left_overlap,(r,node2)),10,0).
fval(3,(comp_left_overlap,(key1,key0)),10,0).
fval(3,(comp_left_overlap,(r,triangle)),10,0).
fval(3,(comp_left_overlap,(node2,node1)),10,0).
fval(3,(comp_left_overlap,(key1,r)),10,0).
fval(3,(comp_left_overlap,(r,key1)),10,0).
fval(3,(comp_left_overlap,(square,triangle)),10,0).
fval(3,(comp_left_overlap,(node1,r)),10,0).
fval(3,(comp_left_overlap,(square,node2)),10,0).
fval(3,(comp_left_overlap,(square,key1)),10,0).
fval(3,(comp_left_overlap,(node2,r)),11,1).
fval(3,(comp_left_overlap,(node2,triangle)),11,0).
fval(3,(comp_left_overlap,(triangle,key0)),11,0).
fval(3,(comp_left_overlap,(triangle,r)),11,0).
fval(3,(comp_left_overlap,(key0,r)),11,0).
fval(3,(comp_left_overlap,(node2,key1)),11,0).
fval(3,(comp_left_overlap,(key1,square)),11,0).
fval(3,(comp_left_overlap,(node1,square)),11,0).
fval(3,(comp_left_overlap,(r,key0)),11,0).
fval(3,(comp_left_overlap,(key1,node1)),11,0).
fval(3,(comp_left_overlap,(triangle,square)),11,0).
fval(3,(comp_left_overlap,(key0,square)),11,0).
fval(3,(comp_left_overlap,(square,key0)),11,0).
fval(3,(comp_left_overlap,(square,r)),11,0).
fval(3,(comp_left_overlap,(node2,key0)),11,0).
fval(3,(comp_left_overlap,(key1,triangle)),11,0).
fval(3,(comp_left_overlap,(triangle,node1)),11,0).
fval(3,(comp_left_overlap,(key1,node2)),11,0).
fval(3,(comp_left_overlap,(key0,node1)),11,0).
fval(3,(comp_left_overlap,(node1,triangle)),11,0).
fval(3,(comp_left_overlap,(r,square)),11,0).
fval(3,(comp_left_overlap,(node1,key1)),11,0).
fval(3,(comp_left_overlap,(node1,node2)),11,0).
fval(3,(comp_left_overlap,(key0,triangle)),11,0).
fval(3,(comp_left_overlap,(triangle,node2)),11,0).
fval(3,(comp_left_overlap,(triangle,key1)),11,0).
fval(3,(comp_left_overlap,(r,node1)),11,0).
fval(3,(comp_left_overlap,(key0,node2)),11,0).
fval(3,(comp_left_overlap,(key0,key1)),11,0).
fval(3,(comp_left_overlap,(node2,square)),11,0).
fval(3,(comp_left_overlap,(node1,key0)),11,0).
fval(3,(comp_left_overlap,(square,node1)),11,0).
fval(3,(comp_left_overlap,(r,node2)),11,0).
fval(3,(comp_left_overlap,(key1,key0)),11,0).
fval(3,(comp_left_overlap,(r,triangle)),11,0).
fval(3,(comp_left_overlap,(node2,node1)),11,0).
fval(3,(comp_left_overlap,(key1,r)),11,0).
fval(3,(comp_left_overlap,(r,key1)),11,0).
fval(3,(comp_left_overlap,(square,triangle)),11,0).
fval(3,(comp_left_overlap,(node1,r)),11,0).
fval(3,(comp_left_overlap,(square,node2)),11,0).
fval(3,(comp_left_overlap,(square,key1)),11,0).
fval(3,(comp_left_overlap,(node2,key1)),12,1).
fval(3,(comp_left_overlap,(node2,triangle)),12,0).
fval(3,(comp_left_overlap,(triangle,key0)),12,0).
fval(3,(comp_left_overlap,(triangle,r)),12,0).
fval(3,(comp_left_overlap,(key0,r)),12,0).
fval(3,(comp_left_overlap,(key1,square)),12,0).
fval(3,(comp_left_overlap,(node1,square)),12,0).
fval(3,(comp_left_overlap,(r,key0)),12,0).
fval(3,(comp_left_overlap,(key1,node1)),12,0).
fval(3,(comp_left_overlap,(triangle,square)),12,0).
fval(3,(comp_left_overlap,(key0,square)),12,0).
fval(3,(comp_left_overlap,(square,key0)),12,0).
fval(3,(comp_left_overlap,(square,r)),12,0).
fval(3,(comp_left_overlap,(node2,key0)),12,0).
fval(3,(comp_left_overlap,(key1,triangle)),12,0).
fval(3,(comp_left_overlap,(triangle,node1)),12,0).
fval(3,(comp_left_overlap,(key1,node2)),12,0).
fval(3,(comp_left_overlap,(node2,r)),12,0).
fval(3,(comp_left_overlap,(key0,node1)),12,0).
fval(3,(comp_left_overlap,(node1,triangle)),12,0).
fval(3,(comp_left_overlap,(r,square)),12,0).
fval(3,(comp_left_overlap,(node1,key1)),12,0).
fval(3,(comp_left_overlap,(node1,node2)),12,0).
fval(3,(comp_left_overlap,(key0,triangle)),12,0).
fval(3,(comp_left_overlap,(triangle,node2)),12,0).
fval(3,(comp_left_overlap,(triangle,key1)),12,0).
fval(3,(comp_left_overlap,(r,node1)),12,0).
fval(3,(comp_left_overlap,(key0,node2)),12,0).
fval(3,(comp_left_overlap,(key0,key1)),12,0).
fval(3,(comp_left_overlap,(node2,square)),12,0).
fval(3,(comp_left_overlap,(node1,key0)),12,0).
fval(3,(comp_left_overlap,(square,node1)),12,0).
fval(3,(comp_left_overlap,(r,node2)),12,0).
fval(3,(comp_left_overlap,(key1,key0)),12,0).
fval(3,(comp_left_overlap,(r,triangle)),12,0).
fval(3,(comp_left_overlap,(node2,node1)),12,0).
fval(3,(comp_left_overlap,(key1,r)),12,0).
fval(3,(comp_left_overlap,(r,key1)),12,0).
fval(3,(comp_left_overlap,(square,triangle)),12,0).
fval(3,(comp_left_overlap,(node1,r)),12,0).
fval(3,(comp_left_overlap,(square,node2)),12,0).
fval(3,(comp_left_overlap,(square,key1)),12,0).
fval(3,(comp_left_overlap,(node2,triangle)),13,0).
fval(3,(comp_left_overlap,(triangle,key0)),13,0).
fval(3,(comp_left_overlap,(triangle,r)),13,0).
fval(3,(comp_left_overlap,(key0,r)),13,0).
fval(3,(comp_left_overlap,(node2,key1)),13,0).
fval(3,(comp_left_overlap,(key1,square)),13,0).
fval(3,(comp_left_overlap,(node1,square)),13,0).
fval(3,(comp_left_overlap,(r,key0)),13,0).
fval(3,(comp_left_overlap,(key1,node1)),13,0).
fval(3,(comp_left_overlap,(triangle,square)),13,0).
fval(3,(comp_left_overlap,(key0,square)),13,0).
fval(3,(comp_left_overlap,(square,key0)),13,0).
fval(3,(comp_left_overlap,(square,r)),13,0).
fval(3,(comp_left_overlap,(node2,key0)),13,0).
fval(3,(comp_left_overlap,(key1,triangle)),13,0).
fval(3,(comp_left_overlap,(triangle,node1)),13,0).
fval(3,(comp_left_overlap,(key1,node2)),13,0).
fval(3,(comp_left_overlap,(node2,r)),13,0).
fval(3,(comp_left_overlap,(key0,node1)),13,0).
fval(3,(comp_left_overlap,(node1,triangle)),13,0).
fval(3,(comp_left_overlap,(r,square)),13,0).
fval(3,(comp_left_overlap,(node1,key1)),13,0).
fval(3,(comp_left_overlap,(node1,node2)),13,0).
fval(3,(comp_left_overlap,(key0,triangle)),13,0).
fval(3,(comp_left_overlap,(triangle,node2)),13,0).
fval(3,(comp_left_overlap,(triangle,key1)),13,0).
fval(3,(comp_left_overlap,(r,node1)),13,0).
fval(3,(comp_left_overlap,(key0,node2)),13,0).
fval(3,(comp_left_overlap,(key0,key1)),13,0).
fval(3,(comp_left_overlap,(node2,square)),13,0).
fval(3,(comp_left_overlap,(node1,key0)),13,0).
fval(3,(comp_left_overlap,(square,node1)),13,0).
fval(3,(comp_left_overlap,(r,node2)),13,0).
fval(3,(comp_left_overlap,(key1,key0)),13,0).
fval(3,(comp_left_overlap,(r,triangle)),13,0).
fval(3,(comp_left_overlap,(node2,node1)),13,0).
fval(3,(comp_left_overlap,(key1,r)),13,0).
fval(3,(comp_left_overlap,(r,key1)),13,0).
fval(3,(comp_left_overlap,(square,triangle)),13,0).
fval(3,(comp_left_overlap,(node1,r)),13,0).
fval(3,(comp_left_overlap,(square,node2)),13,0).
fval(3,(comp_left_overlap,(square,key1)),13,0).
fval(3,(comp_left_overlap,(node2,key1)),14,1).
fval(3,(comp_left_overlap,(node2,r)),14,1).
fval(3,(comp_left_overlap,(node2,triangle)),14,0).
fval(3,(comp_left_overlap,(triangle,key0)),14,0).
fval(3,(comp_left_overlap,(triangle,r)),14,0).
fval(3,(comp_left_overlap,(key0,r)),14,0).
fval(3,(comp_left_overlap,(key1,square)),14,0).
fval(3,(comp_left_overlap,(node1,square)),14,0).
fval(3,(comp_left_overlap,(r,key0)),14,0).
fval(3,(comp_left_overlap,(key1,node1)),14,0).
fval(3,(comp_left_overlap,(triangle,square)),14,0).
fval(3,(comp_left_overlap,(key0,square)),14,0).
fval(3,(comp_left_overlap,(square,key0)),14,0).
fval(3,(comp_left_overlap,(square,r)),14,0).
fval(3,(comp_left_overlap,(node2,key0)),14,0).
fval(3,(comp_left_overlap,(key1,triangle)),14,0).
fval(3,(comp_left_overlap,(triangle,node1)),14,0).
fval(3,(comp_left_overlap,(key1,node2)),14,0).
fval(3,(comp_left_overlap,(key0,node1)),14,0).
fval(3,(comp_left_overlap,(node1,triangle)),14,0).
fval(3,(comp_left_overlap,(r,square)),14,0).
fval(3,(comp_left_overlap,(node1,key1)),14,0).
fval(3,(comp_left_overlap,(node1,node2)),14,0).
fval(3,(comp_left_overlap,(key0,triangle)),14,0).
fval(3,(comp_left_overlap,(triangle,node2)),14,0).
fval(3,(comp_left_overlap,(triangle,key1)),14,0).
fval(3,(comp_left_overlap,(r,node1)),14,0).
fval(3,(comp_left_overlap,(key0,node2)),14,0).
fval(3,(comp_left_overlap,(key0,key1)),14,0).
fval(3,(comp_left_overlap,(node2,square)),14,0).
fval(3,(comp_left_overlap,(node1,key0)),14,0).
fval(3,(comp_left_overlap,(square,node1)),14,0).
fval(3,(comp_left_overlap,(r,node2)),14,0).
fval(3,(comp_left_overlap,(key1,key0)),14,0).
fval(3,(comp_left_overlap,(r,triangle)),14,0).
fval(3,(comp_left_overlap,(node2,node1)),14,0).
fval(3,(comp_left_overlap,(key1,r)),14,0).
fval(3,(comp_left_overlap,(r,key1)),14,0).
fval(3,(comp_left_overlap,(square,triangle)),14,0).
fval(3,(comp_left_overlap,(node1,r)),14,0).
fval(3,(comp_left_overlap,(square,node2)),14,0).
fval(3,(comp_left_overlap,(square,key1)),14,0).
fval(3,(comp_left_overlap,(node2,triangle)),15,0).
fval(3,(comp_left_overlap,(triangle,key0)),15,0).
fval(3,(comp_left_overlap,(triangle,r)),15,0).
fval(3,(comp_left_overlap,(key0,r)),15,0).
fval(3,(comp_left_overlap,(node2,key1)),15,0).
fval(3,(comp_left_overlap,(key1,square)),15,0).
fval(3,(comp_left_overlap,(node1,square)),15,0).
fval(3,(comp_left_overlap,(r,key0)),15,0).
fval(3,(comp_left_overlap,(key1,node1)),15,0).
fval(3,(comp_left_overlap,(triangle,square)),15,0).
fval(3,(comp_left_overlap,(key0,square)),15,0).
fval(3,(comp_left_overlap,(square,key0)),15,0).
fval(3,(comp_left_overlap,(square,r)),15,0).
fval(3,(comp_left_overlap,(node2,key0)),15,0).
fval(3,(comp_left_overlap,(key1,triangle)),15,0).
fval(3,(comp_left_overlap,(triangle,node1)),15,0).
fval(3,(comp_left_overlap,(key1,node2)),15,0).
fval(3,(comp_left_overlap,(node2,r)),15,0).
fval(3,(comp_left_overlap,(key0,node1)),15,0).
fval(3,(comp_left_overlap,(node1,triangle)),15,0).
fval(3,(comp_left_overlap,(r,square)),15,0).
fval(3,(comp_left_overlap,(node1,key1)),15,0).
fval(3,(comp_left_overlap,(node1,node2)),15,0).
fval(3,(comp_left_overlap,(key0,triangle)),15,0).
fval(3,(comp_left_overlap,(triangle,node2)),15,0).
fval(3,(comp_left_overlap,(triangle,key1)),15,0).
fval(3,(comp_left_overlap,(r,node1)),15,0).
fval(3,(comp_left_overlap,(key0,node2)),15,0).
fval(3,(comp_left_overlap,(key0,key1)),15,0).
fval(3,(comp_left_overlap,(node2,square)),15,0).
fval(3,(comp_left_overlap,(node1,key0)),15,0).
fval(3,(comp_left_overlap,(square,node1)),15,0).
fval(3,(comp_left_overlap,(r,node2)),15,0).
fval(3,(comp_left_overlap,(key1,key0)),15,0).
fval(3,(comp_left_overlap,(r,triangle)),15,0).
fval(3,(comp_left_overlap,(node2,node1)),15,0).
fval(3,(comp_left_overlap,(key1,r)),15,0).
fval(3,(comp_left_overlap,(r,key1)),15,0).
fval(3,(comp_left_overlap,(square,triangle)),15,0).
fval(3,(comp_left_overlap,(node1,r)),15,0).
fval(3,(comp_left_overlap,(square,node2)),15,0).
fval(3,(comp_left_overlap,(square,key1)),15,0).
fval(3,(comp_left_overlap,(node2,r)),16,1).
fval(3,(comp_left_overlap,(node2,triangle)),16,0).
fval(3,(comp_left_overlap,(triangle,key0)),16,0).
fval(3,(comp_left_overlap,(triangle,r)),16,0).
fval(3,(comp_left_overlap,(key0,r)),16,0).
fval(3,(comp_left_overlap,(node2,key1)),16,0).
fval(3,(comp_left_overlap,(key1,square)),16,0).
fval(3,(comp_left_overlap,(node1,square)),16,0).
fval(3,(comp_left_overlap,(r,key0)),16,0).
fval(3,(comp_left_overlap,(key1,node1)),16,0).
fval(3,(comp_left_overlap,(triangle,square)),16,0).
fval(3,(comp_left_overlap,(key0,square)),16,0).
fval(3,(comp_left_overlap,(square,key0)),16,0).
fval(3,(comp_left_overlap,(square,r)),16,0).
fval(3,(comp_left_overlap,(node2,key0)),16,0).
fval(3,(comp_left_overlap,(key1,triangle)),16,0).
fval(3,(comp_left_overlap,(triangle,node1)),16,0).
fval(3,(comp_left_overlap,(key1,node2)),16,0).
fval(3,(comp_left_overlap,(key0,node1)),16,0).
fval(3,(comp_left_overlap,(node1,triangle)),16,0).
fval(3,(comp_left_overlap,(r,square)),16,0).
fval(3,(comp_left_overlap,(node1,key1)),16,0).
fval(3,(comp_left_overlap,(node1,node2)),16,0).
fval(3,(comp_left_overlap,(key0,triangle)),16,0).
fval(3,(comp_left_overlap,(triangle,node2)),16,0).
fval(3,(comp_left_overlap,(triangle,key1)),16,0).
fval(3,(comp_left_overlap,(r,node1)),16,0).
fval(3,(comp_left_overlap,(key0,node2)),16,0).
fval(3,(comp_left_overlap,(key0,key1)),16,0).
fval(3,(comp_left_overlap,(node2,square)),16,0).
fval(3,(comp_left_overlap,(node1,key0)),16,0).
fval(3,(comp_left_overlap,(square,node1)),16,0).
fval(3,(comp_left_overlap,(r,node2)),16,0).
fval(3,(comp_left_overlap,(key1,key0)),16,0).
fval(3,(comp_left_overlap,(r,triangle)),16,0).
fval(3,(comp_left_overlap,(node2,node1)),16,0).
fval(3,(comp_left_overlap,(key1,r)),16,0).
fval(3,(comp_left_overlap,(r,key1)),16,0).
fval(3,(comp_left_overlap,(square,triangle)),16,0).
fval(3,(comp_left_overlap,(node1,r)),16,0).
fval(3,(comp_left_overlap,(square,node2)),16,0).
fval(3,(comp_left_overlap,(square,key1)),16,0).
fval(3,(comp_left_overlap,(node2,r)),17,1).
fval(3,(comp_left_overlap,(node2,triangle)),17,0).
fval(3,(comp_left_overlap,(triangle,key0)),17,0).
fval(3,(comp_left_overlap,(triangle,r)),17,0).
fval(3,(comp_left_overlap,(key0,r)),17,0).
fval(3,(comp_left_overlap,(node2,key1)),17,0).
fval(3,(comp_left_overlap,(key1,square)),17,0).
fval(3,(comp_left_overlap,(node1,square)),17,0).
fval(3,(comp_left_overlap,(r,key0)),17,0).
fval(3,(comp_left_overlap,(key1,node1)),17,0).
fval(3,(comp_left_overlap,(triangle,square)),17,0).
fval(3,(comp_left_overlap,(key0,square)),17,0).
fval(3,(comp_left_overlap,(square,key0)),17,0).
fval(3,(comp_left_overlap,(square,r)),17,0).
fval(3,(comp_left_overlap,(node2,key0)),17,0).
fval(3,(comp_left_overlap,(key1,triangle)),17,0).
fval(3,(comp_left_overlap,(triangle,node1)),17,0).
fval(3,(comp_left_overlap,(key1,node2)),17,0).
fval(3,(comp_left_overlap,(key0,node1)),17,0).
fval(3,(comp_left_overlap,(node1,triangle)),17,0).
fval(3,(comp_left_overlap,(r,square)),17,0).
fval(3,(comp_left_overlap,(node1,key1)),17,0).
fval(3,(comp_left_overlap,(node1,node2)),17,0).
fval(3,(comp_left_overlap,(key0,triangle)),17,0).
fval(3,(comp_left_overlap,(triangle,node2)),17,0).
fval(3,(comp_left_overlap,(triangle,key1)),17,0).
fval(3,(comp_left_overlap,(r,node1)),17,0).
fval(3,(comp_left_overlap,(key0,node2)),17,0).
fval(3,(comp_left_overlap,(key0,key1)),17,0).
fval(3,(comp_left_overlap,(node2,square)),17,0).
fval(3,(comp_left_overlap,(node1,key0)),17,0).
fval(3,(comp_left_overlap,(square,node1)),17,0).
fval(3,(comp_left_overlap,(r,node2)),17,0).
fval(3,(comp_left_overlap,(key1,key0)),17,0).
fval(3,(comp_left_overlap,(r,triangle)),17,0).
fval(3,(comp_left_overlap,(node2,node1)),17,0).
fval(3,(comp_left_overlap,(key1,r)),17,0).
fval(3,(comp_left_overlap,(r,key1)),17,0).
fval(3,(comp_left_overlap,(square,triangle)),17,0).
fval(3,(comp_left_overlap,(node1,r)),17,0).
fval(3,(comp_left_overlap,(square,node2)),17,0).
fval(3,(comp_left_overlap,(square,key1)),17,0).
fval(3,(comp_left_overlap,(node2,triangle)),18,0).
fval(3,(comp_left_overlap,(triangle,key0)),18,0).
fval(3,(comp_left_overlap,(triangle,r)),18,0).
fval(3,(comp_left_overlap,(key0,r)),18,0).
fval(3,(comp_left_overlap,(node2,key1)),18,0).
fval(3,(comp_left_overlap,(key1,square)),18,0).
fval(3,(comp_left_overlap,(node1,square)),18,0).
fval(3,(comp_left_overlap,(r,key0)),18,0).
fval(3,(comp_left_overlap,(key1,node1)),18,0).
fval(3,(comp_left_overlap,(triangle,square)),18,0).
fval(3,(comp_left_overlap,(key0,square)),18,0).
fval(3,(comp_left_overlap,(square,key0)),18,0).
fval(3,(comp_left_overlap,(square,r)),18,0).
fval(3,(comp_left_overlap,(node2,key0)),18,0).
fval(3,(comp_left_overlap,(key1,triangle)),18,0).
fval(3,(comp_left_overlap,(triangle,node1)),18,0).
fval(3,(comp_left_overlap,(key1,node2)),18,0).
fval(3,(comp_left_overlap,(node2,r)),18,0).
fval(3,(comp_left_overlap,(key0,node1)),18,0).
fval(3,(comp_left_overlap,(node1,triangle)),18,0).
fval(3,(comp_left_overlap,(r,square)),18,0).
fval(3,(comp_left_overlap,(node1,key1)),18,0).
fval(3,(comp_left_overlap,(node1,node2)),18,0).
fval(3,(comp_left_overlap,(key0,triangle)),18,0).
fval(3,(comp_left_overlap,(triangle,node2)),18,0).
fval(3,(comp_left_overlap,(triangle,key1)),18,0).
fval(3,(comp_left_overlap,(r,node1)),18,0).
fval(3,(comp_left_overlap,(key0,node2)),18,0).
fval(3,(comp_left_overlap,(key0,key1)),18,0).
fval(3,(comp_left_overlap,(node2,square)),18,0).
fval(3,(comp_left_overlap,(node1,key0)),18,0).
fval(3,(comp_left_overlap,(square,node1)),18,0).
fval(3,(comp_left_overlap,(r,node2)),18,0).
fval(3,(comp_left_overlap,(key1,key0)),18,0).
fval(3,(comp_left_overlap,(r,triangle)),18,0).
fval(3,(comp_left_overlap,(node2,node1)),18,0).
fval(3,(comp_left_overlap,(key1,r)),18,0).
fval(3,(comp_left_overlap,(r,key1)),18,0).
fval(3,(comp_left_overlap,(square,triangle)),18,0).
fval(3,(comp_left_overlap,(node1,r)),18,0).
fval(3,(comp_left_overlap,(square,node2)),18,0).
fval(3,(comp_left_overlap,(square,key1)),18,0).
fval(3,(er_smaller_verum,(key1,)),1).
fval(3,(er_smaller_verum,(key0,)),1).
fval(3,(er_smaller_verum,(r,)),1).
fval(3,(er_smaller_verum,(node1,)),0).
fval(3,(er_smaller_verum,(triangle,)),0).
fval(3,(er_smaller_verum,(square,)),0).
fval(3,(er_smaller_verum,(node2,)),0).
fval(3,(subset_key_er_overlap_verum,(0,)),0,1).
fval(3,(subset_key_er_overlap_verum,(0,)),1,0).
fval(3,(subset_key_er_overlap_verum,(0,)),2,0).
fval(3,(subset_key_er_overlap_verum,(0,)),3,0).
fval(3,(subset_key_er_overlap_verum,(0,)),4,0).
fval(3,(subset_key_er_overlap_verum,(0,)),5,1).
fval(3,(subset_key_er_overlap_verum,(0,)),6,1).
fval(3,(subset_key_er_overlap_verum,(0,)),7,1).
fval(3,(subset_key_er_overlap_verum,(0,)),8,0).
fval(3,(subset_key_er_overlap_verum,(0,)),9,1).
fval(3,(subset_key_er_overlap_verum,(0,)),10,0).
fval(3,(subset_key_er_overlap_verum,(0,)),11,0).
fval(3,(subset_key_er_overlap_verum,(0,)),12,1).
fval(3,(subset_key_er_overlap_verum,(0,)),13,0).
fval(3,(subset_key_er_overlap_verum,(0,)),14,1).
fval(3,(subset_key_er_overlap_verum,(0,)),15,1).
fval(3,(subset_key_er_overlap_verum,(0,)),16,0).
fval(3,(subset_key_er_overlap_verum,(0,)),17,1).
fval(3,(subset_key_er_overlap_verum,(0,)),18,0).
fval(3,(inv_shape,(square,key0)),1).
fval(3,(inv_shape,(triangle,node2)),1).
fval(3,(inv_shape,(triangle,key1)),1).
fval(3,(inv_shape,(node2,triangle)),0).
fval(3,(inv_shape,(triangle,r)),0).
fval(3,(inv_shape,(triangle,key0)),0).
fval(3,(inv_shape,(node2,key1)),0).
fval(3,(inv_shape,(key0,r)),0).
fval(3,(inv_shape,(key1,square)),0).
fval(3,(inv_shape,(node1,square)),0).
fval(3,(inv_shape,(r,key0)),0).
fval(3,(inv_shape,(key1,node1)),0).
fval(3,(inv_shape,(triangle,square)),0).
fval(3,(inv_shape,(key0,square)),0).
fval(3,(inv_shape,(square,r)),0).
fval(3,(inv_shape,(key1,triangle)),0).
fval(3,(inv_shape,(triangle,node1)),0).
fval(3,(inv_shape,(node2,key0)),0).
fval(3,(inv_shape,(key1,node2)),0).
fval(3,(inv_shape,(node2,r)),0).
fval(3,(inv_shape,(key0,node1)),0).
fval(3,(inv_shape,(node1,triangle)),0).
fval(3,(inv_shape,(node1,node2)),0).
fval(3,(inv_shape,(r,square)),0).
fval(3,(inv_shape,(node1,key1)),0).
fval(3,(inv_shape,(key0,triangle)),0).
fval(3,(inv_shape,(key0,node2)),0).
fval(3,(inv_shape,(r,node1)),0).
fval(3,(inv_shape,(key0,key1)),0).
fval(3,(inv_shape,(node1,key0)),0).
fval(3,(inv_shape,(node2,square)),0).
fval(3,(inv_shape,(square,node1)),0).
fval(3,(inv_shape,(r,node2)),0).
fval(3,(inv_shape,(node2,node1)),0).
fval(3,(inv_shape,(r,triangle)),0).
fval(3,(inv_shape,(key1,r)),0).
fval(3,(inv_shape,(key1,key0)),0).
fval(3,(inv_shape,(r,key1)),0).
fval(3,(inv_shape,(square,triangle)),0).
fval(3,(inv_shape,(node1,r)),0).
fval(3,(inv_shape,(square,node2)),0).
fval(3,(inv_shape,(square,key1)),0).
fval(3,(shape_form,(triangle,)),1).
fval(3,(shape_form,(square,)),1).
fval(3,(inter_er_below_lockedcell_er_overlap_key,(node1,)),0).
fval(3,(inter_er_below_lockedcell_er_overlap_key,(triangle,)),0).
fval(3,(inter_er_below_lockedcell_er_overlap_key,(node2,)),0).
fval(3,(inter_er_below_lockedcell_er_overlap_key,(key1,)),0).
fval(3,(inter_er_below_lockedcell_er_overlap_key,(key0,)),0).
fval(3,(inter_er_below_lockedcell_er_overlap_key,(r,)),0).
fval(3,(inter_er_below_lockedcell_er_overlap_key,(square,)),0).
fval(3,(comp_smaller_below,(node2,triangle)),0).
fval(3,(comp_smaller_below,(key0,r)),0).
fval(3,(comp_smaller_below,(node2,key1)),0).
fval(3,(comp_smaller_below,(triangle,key0)),0).
fval(3,(comp_smaller_below,(triangle,r)),0).
fval(3,(comp_smaller_below,(key1,square)),0).
fval(3,(comp_smaller_below,(node1,square)),0).
fval(3,(comp_smaller_below,(r,key0)),0).
fval(3,(comp_smaller_below,(key1,node1)),0).
fval(3,(comp_smaller_below,(triangle,square)),0).
fval(3,(comp_smaller_below,(key0,square)),0).
fval(3,(comp_smaller_below,(square,r)),0).
fval(3,(comp_smaller_below,(square,key0)),0).
fval(3,(comp_smaller_below,(key1,triangle)),0).
fval(3,(comp_smaller_below,(triangle,node1)),0).
fval(3,(comp_smaller_below,(node2,key0)),0).
fval(3,(comp_smaller_below,(key1,node2)),0).
fval(3,(comp_smaller_below,(node2,r)),0).
fval(3,(comp_smaller_below,(key0,node1)),0).
fval(3,(comp_smaller_below,(node1,triangle)),0).
fval(3,(comp_smaller_below,(r,square)),0).
fval(3,(comp_smaller_below,(node1,key1)),0).
fval(3,(comp_smaller_below,(node1,node2)),0).
fval(3,(comp_smaller_below,(key0,triangle)),0).
fval(3,(comp_smaller_below,(key0,node2)),0).
fval(3,(comp_smaller_below,(triangle,node2)),0).
fval(3,(comp_smaller_below,(triangle,key1)),0).
fval(3,(comp_smaller_below,(r,node1)),0).
fval(3,(comp_smaller_below,(key0,key1)),0).
fval(3,(comp_smaller_below,(node2,square)),0).
fval(3,(comp_smaller_below,(square,node1)),0).
fval(3,(comp_smaller_below,(r,node2)),0).
fval(3,(comp_smaller_below,(key1,r)),0).
fval(3,(comp_smaller_below,(key1,key0)),0).
fval(3,(comp_smaller_below,(r,triangle)),0).
fval(3,(comp_smaller_below,(node2,node1)),0).
fval(3,(comp_smaller_below,(r,key1)),0).
fval(3,(comp_smaller_below,(square,triangle)),0).
fval(3,(comp_smaller_below,(node1,key0)),0).
fval(3,(comp_smaller_below,(square,node2)),0).
fval(3,(comp_smaller_below,(square,key1)),0).
fval(3,(comp_smaller_below,(node1,r)),0).
feature(comp_inv_smaller_inv_overlap).
f_arity(comp_inv_smaller_inv_overlap,2).
feature(comp_below_shape).
f_arity(comp_below_shape,2).
feature(comp_smaller_inv_below).
f_arity(comp_smaller_inv_below,2).
feature(comp_overlap_inv_overlap).
f_arity(comp_overlap_inv_overlap,2).
feature(er_below_lockedcell).
f_arity(er_below_lockedcell,1).
feature(comp_below_overlap).
f_arity(comp_below_overlap,2).
feature(subset_key_verum).
f_arity(subset_key_verum,1).
feature(inter_er_overlap_verum_er_left_lockedcell).
f_arity(inter_er_overlap_verum_er_left_lockedcell,1).
feature(inter_er_overlap_robot_er_below_opencell).
f_arity(inter_er_overlap_robot_er_below_opencell,1).
feature(lockedcell).
f_arity(lockedcell,1).
feature(er_left_opencell).
f_arity(er_left_opencell,1).
feature(inter_er_below_opencell_er_overlap_key).
f_arity(inter_er_below_opencell_er_overlap_key,1).
feature(comp_smaller_shape).
f_arity(comp_smaller_shape,2).
feature(comp_overlap_shape).
f_arity(comp_overlap_shape,2).
feature(comp_below_inv_smaller).
f_arity(comp_below_inv_smaller,2).
feature(inter_er_overlap_verum_er_below_lockedcell).
f_arity(inter_er_overlap_verum_er_below_lockedcell,1).
feature(inter_er_overlap_verum_er_smaller_lockedcell).
f_arity(inter_er_overlap_verum_er_smaller_lockedcell,1).
feature(overlap).
f_arity(overlap,2).
feature(inter_er_left_opencell_er_overlap_key).
f_arity(inter_er_left_opencell_er_overlap_key,1).
feature(comp_inv_left_inv_overlap).
f_arity(comp_inv_left_inv_overlap,2).
feature(inter_er_overlap_robot_er_overlap_key).
f_arity(inter_er_overlap_robot_er_overlap_key,1).
feature(below).
f_arity(below,2).
feature(left).
f_arity(left,2).
feature(comp_smaller_left).
f_arity(comp_smaller_left,2).
feature(inter_er_below_verum_er_overlap_robot).
f_arity(inter_er_below_verum_er_overlap_robot,1).
feature(verum).
f_arity(verum,1).
feature(robot).
f_arity(robot,1).
feature(subset_lockedcell_verum).
f_arity(subset_lockedcell_verum,1).
feature(peg).
f_arity(peg,1).
feature(comp_left_inv_smaller).
f_arity(comp_left_inv_smaller,2).
feature(comp_below_inv_below).
f_arity(comp_below_inv_below,2).
feature(er_smaller_lockedcell).
f_arity(er_smaller_lockedcell,1).
feature(inter_er_shape_verum_er_overlap_key).
f_arity(inter_er_shape_verum_er_overlap_key,1).
feature(er_left_lockedcell).
f_arity(er_left_lockedcell,1).
feature(inter_er_overlap_robot_er_left_lockedcell).
f_arity(inter_er_overlap_robot_er_left_lockedcell,1).
feature(er_left_verum).
f_arity(er_left_verum,1).
feature(inter_opencell_er_shape_verum).
f_arity(inter_opencell_er_shape_verum,1).
feature(inv_below).
f_arity(inv_below,2).
feature(comp_shape_inv_shape).
f_arity(comp_shape_inv_shape,2).
feature(comp_left_shape).
f_arity(comp_left_shape,2).
feature(subset_opencell_er_overlap_key).
f_arity(subset_opencell_er_overlap_key,1).
feature(inter_opencell_er_overlap_verum).
f_arity(inter_opencell_er_overlap_verum,1).
feature(inter_er_below_verum_er_overlap_key).
f_arity(inter_er_below_verum_er_overlap_key,1).
feature(inter_er_overlap_verum_er_shape_verum).
f_arity(inter_er_overlap_verum_er_shape_verum,1).
feature(inter_er_overlap_verum_er_below_opencell).
f_arity(inter_er_overlap_verum_er_below_opencell,1).
feature(comp_smaller_overlap).
f_arity(comp_smaller_overlap,2).
feature(er_overlap_opencell).
f_arity(er_overlap_opencell,1).
feature(inter_key_er_overlap_verum).
f_arity(inter_key_er_overlap_verum,1).
feature(inter_er_overlap_verum_er_left_opencell).
f_arity(inter_er_overlap_verum_er_left_opencell,1).
feature(inter_er_overlap_robot_er_left_opencell).
f_arity(inter_er_overlap_robot_er_left_opencell,1).
feature(comp_smaller_inv_left).
f_arity(comp_smaller_inv_left,2).
feature(key).
f_arity(key,1).
feature(comp_overlap_inv_below).
f_arity(comp_overlap_inv_below,2).
feature(inter_opencell_er_left_verum).
f_arity(inter_opencell_er_left_verum,1).
feature(inter_er_left_verum_er_overlap_verum).
f_arity(inter_er_left_verum_er_overlap_verum,1).
feature(er_shape_verum).
f_arity(er_shape_verum,1).
feature(er_overlap_robot).
f_arity(er_overlap_robot,1).
feature(inter_er_left_verum_er_overlap_robot).
f_arity(inter_er_left_verum_er_overlap_robot,1).
feature(comp_overlap_inv_left).
f_arity(comp_overlap_inv_left,2).
feature(inv_smaller).
f_arity(inv_smaller,2).
feature(inter_key_er_smaller_lockedcell).
f_arity(inter_key_er_smaller_lockedcell,1).
feature(shape).
f_arity(shape,2).
feature(comp_left_inv_left).
f_arity(comp_left_inv_left,2).
feature(inv_left).
f_arity(inv_left,2).
feature(comp_inv_below_inv_overlap).
f_arity(comp_inv_below_inv_overlap,2).
feature(inter_er_shape_verum_er_overlap_robot).
f_arity(inter_er_shape_verum_er_overlap_robot,1).
feature(inter_er_below_verum_er_overlap_verum).
f_arity(inter_er_below_verum_er_overlap_verum,1).
feature(er_below_verum).
f_arity(er_below_verum,1).
feature(er_below_opencell).
f_arity(er_below_opencell,1).
feature(inter_er_overlap_robot_er_below_lockedcell).
f_arity(inter_er_overlap_robot_er_below_lockedcell,1).
feature(inter_er_left_verum_er_overlap_key).
f_arity(inter_er_left_verum_er_overlap_key,1).
feature(er_overlap_verum).
f_arity(er_overlap_verum,1).
feature(opencell).
f_arity(opencell,1).
feature(inter_er_left_verum_er_shape_verum).
f_arity(inter_er_left_verum_er_shape_verum,1).
feature(subset_opencell_er_overlap_verum).
f_arity(subset_opencell_er_overlap_verum,1).
feature(comp_smaller_inv_smaller).
f_arity(comp_smaller_inv_smaller,2).
feature(comp_overlap_inv_smaller).
f_arity(comp_overlap_inv_smaller,2).
feature(inter_robot_er_smaller_lockedcell).
f_arity(inter_robot_er_smaller_lockedcell,1).
feature(smaller).
f_arity(smaller,2).
feature(er_overlap_key).
f_arity(er_overlap_key,1).
feature(inter_er_left_lockedcell_er_overlap_key).
f_arity(inter_er_left_lockedcell_er_overlap_key,1).
feature(comp_left_overlap).
f_arity(comp_left_overlap,2).
feature(er_smaller_verum).
f_arity(er_smaller_verum,1).
feature(subset_key_er_overlap_verum).
f_arity(subset_key_er_overlap_verum,1).
feature(inv_shape).
f_arity(inv_shape,2).
feature(shape_form).
f_arity(shape_form,1).
feature(inter_er_below_lockedcell_er_overlap_key).
f_arity(inter_er_below_lockedcell_er_overlap_key,1).
feature(comp_smaller_below).
f_arity(comp_smaller_below,2).
% Number of unique features: 88
