% 4 Edges recorded
instance(0).
tlabel(0,(0,1),putdown). % (putdown node1 key1)
tlabel(0,(1,0),pickup). % (pickup node1 key1)
tlabel(0,(1,2),pickup). % (pickup node1 key0)
tlabel(0,(2,1),putdown). % (putdown node1 key0)
% 3 States recorded
node(0,0).
node(0,1).
node(0,2).
f_static(0,comp_inv_smaller_inv_overlap).
f_static(0,comp_below_shape).
f_static(0,comp_smaller_inv_below).
f_static(0,er_below_lockedcell).
f_static(0,comp_below_overlap).
f_static(0,subset_key_verum).
f_static(0,inter_er_overlap_verum_er_left_lockedcell).
f_static(0,inter_er_overlap_robot_er_below_opencell).
f_static(0,lockedcell).
f_static(0,er_left_opencell).
f_static(0,inter_er_below_opencell_er_overlap_key).
f_static(0,comp_smaller_shape).
f_static(0,comp_overlap_shape).
f_static(0,comp_below_inv_smaller).
f_static(0,inter_er_overlap_verum_er_below_lockedcell).
f_static(0,inter_er_overlap_verum_er_smaller_lockedcell).
f_static(0,inter_er_left_opencell_er_overlap_key).
f_static(0,comp_inv_left_inv_overlap).
f_static(0,inter_er_overlap_robot_er_overlap_key).
f_static(0,below).
f_static(0,left).
f_static(0,comp_smaller_left).
f_static(0,inter_er_below_verum_er_overlap_robot).
f_static(0,verum).
f_static(0,robot).
f_static(0,subset_lockedcell_verum).
f_static(0,peg).
f_static(0,comp_left_inv_smaller).
f_static(0,comp_below_inv_below).
f_static(0,er_smaller_lockedcell).
f_static(0,inter_er_shape_verum_er_overlap_key).
f_static(0,er_left_lockedcell).
f_static(0,inter_er_overlap_robot_er_left_lockedcell).
f_static(0,er_left_verum).
f_static(0,inter_opencell_er_shape_verum).
f_static(0,inv_below).
f_static(0,comp_shape_inv_shape).
f_static(0,comp_left_shape).
f_static(0,subset_opencell_er_overlap_key).
f_static(0,inter_opencell_er_overlap_verum).
f_static(0,inter_er_below_verum_er_overlap_key).
f_static(0,inter_er_overlap_verum_er_below_opencell).
f_static(0,inter_er_overlap_verum_er_left_opencell).
f_static(0,inter_er_overlap_robot_er_left_opencell).
f_static(0,comp_smaller_inv_left).
f_static(0,key).
f_static(0,comp_overlap_inv_below).
f_static(0,inter_opencell_er_left_verum).
f_static(0,inter_er_left_verum_er_overlap_verum).
f_static(0,er_shape_verum).
f_static(0,er_overlap_robot).
f_static(0,inter_er_left_verum_er_overlap_robot).
f_static(0,comp_overlap_inv_left).
f_static(0,inv_smaller).
f_static(0,inter_key_er_smaller_lockedcell).
f_static(0,shape).
f_static(0,comp_left_inv_left).
f_static(0,inv_left).
f_static(0,comp_inv_below_inv_overlap).
f_static(0,inter_er_shape_verum_er_overlap_robot).
f_static(0,inter_er_below_verum_er_overlap_verum).
f_static(0,er_below_verum).
f_static(0,er_below_opencell).
f_static(0,inter_er_overlap_robot_er_below_lockedcell).
f_static(0,inter_er_left_verum_er_overlap_key).
f_static(0,opencell).
f_static(0,inter_er_left_verum_er_shape_verum).
f_static(0,subset_opencell_er_overlap_verum).
f_static(0,comp_smaller_inv_smaller).
f_static(0,inter_robot_er_smaller_lockedcell).
f_static(0,smaller).
f_static(0,er_overlap_key).
f_static(0,inter_er_left_lockedcell_er_overlap_key).
f_static(0,comp_left_overlap).
f_static(0,er_smaller_verum).
f_static(0,inv_shape).
f_static(0,shape_form).
f_static(0,inter_er_below_lockedcell_er_overlap_key).
f_static(0,comp_smaller_below).
fval(0,(comp_inv_smaller_inv_overlap,(node1,diamond)),0).
fval(0,(comp_inv_smaller_inv_overlap,(triangle,key0)),0).
fval(0,(comp_inv_smaller_inv_overlap,(diamond,key0)),0).
fval(0,(comp_inv_smaller_inv_overlap,(triangle,r)),0).
fval(0,(comp_inv_smaller_inv_overlap,(key0,r)),0).
fval(0,(comp_inv_smaller_inv_overlap,(diamond,r)),0).
fval(0,(comp_inv_smaller_inv_overlap,(triangle,diamond)),0).
fval(0,(comp_inv_smaller_inv_overlap,(key0,diamond)),0).
fval(0,(comp_inv_smaller_inv_overlap,(r,key0)),0).
fval(0,(comp_inv_smaller_inv_overlap,(key1,node1)),0).
fval(0,(comp_inv_smaller_inv_overlap,(r,diamond)),0).
fval(0,(comp_inv_smaller_inv_overlap,(key1,triangle)),0).
fval(0,(comp_inv_smaller_inv_overlap,(triangle,node1)),0).
fval(0,(comp_inv_smaller_inv_overlap,(key0,node1)),0).
fval(0,(comp_inv_smaller_inv_overlap,(diamond,node1)),0).
fval(0,(comp_inv_smaller_inv_overlap,(node1,triangle)),0).
fval(0,(comp_inv_smaller_inv_overlap,(node1,key1)),0).
fval(0,(comp_inv_smaller_inv_overlap,(key0,triangle)),0).
fval(0,(comp_inv_smaller_inv_overlap,(triangle,key1)),0).
fval(0,(comp_inv_smaller_inv_overlap,(r,node1)),0).
fval(0,(comp_inv_smaller_inv_overlap,(diamond,triangle)),0).
fval(0,(comp_inv_smaller_inv_overlap,(key0,key1)),0).
fval(0,(comp_inv_smaller_inv_overlap,(diamond,key1)),0).
fval(0,(comp_inv_smaller_inv_overlap,(node1,key0)),0).
fval(0,(comp_inv_smaller_inv_overlap,(key1,r)),0).
fval(0,(comp_inv_smaller_inv_overlap,(r,triangle)),0).
fval(0,(comp_inv_smaller_inv_overlap,(key1,key0)),0).
fval(0,(comp_inv_smaller_inv_overlap,(r,key1)),0).
fval(0,(comp_inv_smaller_inv_overlap,(key1,diamond)),0).
fval(0,(comp_inv_smaller_inv_overlap,(node1,r)),0).
fval(0,(comp_below_shape,(node1,diamond)),0).
fval(0,(comp_below_shape,(triangle,r)),0).
fval(0,(comp_below_shape,(key0,r)),0).
fval(0,(comp_below_shape,(triangle,key0)),0).
fval(0,(comp_below_shape,(diamond,key0)),0).
fval(0,(comp_below_shape,(diamond,r)),0).
fval(0,(comp_below_shape,(triangle,diamond)),0).
fval(0,(comp_below_shape,(key0,diamond)),0).
fval(0,(comp_below_shape,(r,key0)),0).
fval(0,(comp_below_shape,(key1,node1)),0).
fval(0,(comp_below_shape,(r,diamond)),0).
fval(0,(comp_below_shape,(key1,triangle)),0).
fval(0,(comp_below_shape,(triangle,node1)),0).
fval(0,(comp_below_shape,(key0,node1)),0).
fval(0,(comp_below_shape,(diamond,node1)),0).
fval(0,(comp_below_shape,(node1,triangle)),0).
fval(0,(comp_below_shape,(node1,key1)),0).
fval(0,(comp_below_shape,(key0,triangle)),0).
fval(0,(comp_below_shape,(triangle,key1)),0).
fval(0,(comp_below_shape,(r,node1)),0).
fval(0,(comp_below_shape,(diamond,triangle)),0).
fval(0,(comp_below_shape,(key0,key1)),0).
fval(0,(comp_below_shape,(diamond,key1)),0).
fval(0,(comp_below_shape,(key1,r)),0).
fval(0,(comp_below_shape,(key1,key0)),0).
fval(0,(comp_below_shape,(r,triangle)),0).
fval(0,(comp_below_shape,(r,key1)),0).
fval(0,(comp_below_shape,(key1,diamond)),0).
fval(0,(comp_below_shape,(node1,key0)),0).
fval(0,(comp_below_shape,(node1,r)),0).
fval(0,(comp_smaller_inv_below,(node1,diamond)),0).
fval(0,(comp_smaller_inv_below,(key0,r)),0).
fval(0,(comp_smaller_inv_below,(triangle,key0)),0).
fval(0,(comp_smaller_inv_below,(diamond,key0)),0).
fval(0,(comp_smaller_inv_below,(triangle,r)),0).
fval(0,(comp_smaller_inv_below,(diamond,r)),0).
fval(0,(comp_smaller_inv_below,(triangle,diamond)),0).
fval(0,(comp_smaller_inv_below,(key0,diamond)),0).
fval(0,(comp_smaller_inv_below,(r,key0)),0).
fval(0,(comp_smaller_inv_below,(key1,node1)),0).
fval(0,(comp_smaller_inv_below,(r,diamond)),0).
fval(0,(comp_smaller_inv_below,(key1,triangle)),0).
fval(0,(comp_smaller_inv_below,(triangle,node1)),0).
fval(0,(comp_smaller_inv_below,(key0,node1)),0).
fval(0,(comp_smaller_inv_below,(diamond,node1)),0).
fval(0,(comp_smaller_inv_below,(node1,triangle)),0).
fval(0,(comp_smaller_inv_below,(node1,key1)),0).
fval(0,(comp_smaller_inv_below,(key0,triangle)),0).
fval(0,(comp_smaller_inv_below,(triangle,key1)),0).
fval(0,(comp_smaller_inv_below,(r,node1)),0).
fval(0,(comp_smaller_inv_below,(diamond,triangle)),0).
fval(0,(comp_smaller_inv_below,(key0,key1)),0).
fval(0,(comp_smaller_inv_below,(diamond,key1)),0).
fval(0,(comp_smaller_inv_below,(key1,r)),0).
fval(0,(comp_smaller_inv_below,(key1,key0)),0).
fval(0,(comp_smaller_inv_below,(r,triangle)),0).
fval(0,(comp_smaller_inv_below,(r,key1)),0).
fval(0,(comp_smaller_inv_below,(key1,diamond)),0).
fval(0,(comp_smaller_inv_below,(node1,key0)),0).
fval(0,(comp_smaller_inv_below,(node1,r)),0).
fval(0,(comp_overlap_inv_overlap,(key0,r)),0,1).
fval(0,(comp_overlap_inv_overlap,(r,key0)),0,1).
fval(0,(comp_overlap_inv_overlap,(node1,triangle)),0,0).
fval(0,(comp_overlap_inv_overlap,(node1,diamond)),0,0).
fval(0,(comp_overlap_inv_overlap,(triangle,key0)),0,0).
fval(0,(comp_overlap_inv_overlap,(diamond,key0)),0,0).
fval(0,(comp_overlap_inv_overlap,(triangle,r)),0,0).
fval(0,(comp_overlap_inv_overlap,(node1,key1)),0,0).
fval(0,(comp_overlap_inv_overlap,(diamond,r)),0,0).
fval(0,(comp_overlap_inv_overlap,(key0,triangle)),0,0).
fval(0,(comp_overlap_inv_overlap,(triangle,diamond)),0,0).
fval(0,(comp_overlap_inv_overlap,(triangle,key1)),0,0).
fval(0,(comp_overlap_inv_overlap,(r,node1)),0,0).
fval(0,(comp_overlap_inv_overlap,(diamond,triangle)),0,0).
fval(0,(comp_overlap_inv_overlap,(key0,diamond)),0,0).
fval(0,(comp_overlap_inv_overlap,(key0,key1)),0,0).
fval(0,(comp_overlap_inv_overlap,(diamond,key1)),0,0).
fval(0,(comp_overlap_inv_overlap,(key1,node1)),0,0).
fval(0,(comp_overlap_inv_overlap,(node1,r)),0,0).
fval(0,(comp_overlap_inv_overlap,(key1,key0)),0,0).
fval(0,(comp_overlap_inv_overlap,(r,triangle)),0,0).
fval(0,(comp_overlap_inv_overlap,(key1,r)),0,0).
fval(0,(comp_overlap_inv_overlap,(r,diamond)),0,0).
fval(0,(comp_overlap_inv_overlap,(r,key1)),0,0).
fval(0,(comp_overlap_inv_overlap,(key1,triangle)),0,0).
fval(0,(comp_overlap_inv_overlap,(triangle,node1)),0,0).
fval(0,(comp_overlap_inv_overlap,(key1,diamond)),0,0).
fval(0,(comp_overlap_inv_overlap,(node1,key0)),0,0).
fval(0,(comp_overlap_inv_overlap,(key0,node1)),0,0).
fval(0,(comp_overlap_inv_overlap,(diamond,node1)),0,0).
fval(0,(comp_overlap_inv_overlap,(key0,r)),1,1).
fval(0,(comp_overlap_inv_overlap,(key1,r)),1,1).
fval(0,(comp_overlap_inv_overlap,(key1,key0)),1,1).
fval(0,(comp_overlap_inv_overlap,(r,key1)),1,1).
fval(0,(comp_overlap_inv_overlap,(key0,key1)),1,1).
fval(0,(comp_overlap_inv_overlap,(r,key0)),1,1).
fval(0,(comp_overlap_inv_overlap,(node1,triangle)),1,0).
fval(0,(comp_overlap_inv_overlap,(node1,diamond)),1,0).
fval(0,(comp_overlap_inv_overlap,(triangle,key0)),1,0).
fval(0,(comp_overlap_inv_overlap,(diamond,key0)),1,0).
fval(0,(comp_overlap_inv_overlap,(triangle,r)),1,0).
fval(0,(comp_overlap_inv_overlap,(node1,key1)),1,0).
fval(0,(comp_overlap_inv_overlap,(diamond,r)),1,0).
fval(0,(comp_overlap_inv_overlap,(key0,triangle)),1,0).
fval(0,(comp_overlap_inv_overlap,(triangle,diamond)),1,0).
fval(0,(comp_overlap_inv_overlap,(triangle,key1)),1,0).
fval(0,(comp_overlap_inv_overlap,(r,node1)),1,0).
fval(0,(comp_overlap_inv_overlap,(diamond,triangle)),1,0).
fval(0,(comp_overlap_inv_overlap,(key0,diamond)),1,0).
fval(0,(comp_overlap_inv_overlap,(diamond,key1)),1,0).
fval(0,(comp_overlap_inv_overlap,(key1,node1)),1,0).
fval(0,(comp_overlap_inv_overlap,(node1,r)),1,0).
fval(0,(comp_overlap_inv_overlap,(r,triangle)),1,0).
fval(0,(comp_overlap_inv_overlap,(r,diamond)),1,0).
fval(0,(comp_overlap_inv_overlap,(key1,triangle)),1,0).
fval(0,(comp_overlap_inv_overlap,(triangle,node1)),1,0).
fval(0,(comp_overlap_inv_overlap,(key1,diamond)),1,0).
fval(0,(comp_overlap_inv_overlap,(node1,key0)),1,0).
fval(0,(comp_overlap_inv_overlap,(key0,node1)),1,0).
fval(0,(comp_overlap_inv_overlap,(diamond,node1)),1,0).
fval(0,(comp_overlap_inv_overlap,(r,key1)),2,1).
fval(0,(comp_overlap_inv_overlap,(key1,r)),2,1).
fval(0,(comp_overlap_inv_overlap,(node1,triangle)),2,0).
fval(0,(comp_overlap_inv_overlap,(node1,diamond)),2,0).
fval(0,(comp_overlap_inv_overlap,(triangle,key0)),2,0).
fval(0,(comp_overlap_inv_overlap,(diamond,key0)),2,0).
fval(0,(comp_overlap_inv_overlap,(triangle,r)),2,0).
fval(0,(comp_overlap_inv_overlap,(key0,r)),2,0).
fval(0,(comp_overlap_inv_overlap,(node1,key1)),2,0).
fval(0,(comp_overlap_inv_overlap,(diamond,r)),2,0).
fval(0,(comp_overlap_inv_overlap,(key0,triangle)),2,0).
fval(0,(comp_overlap_inv_overlap,(triangle,diamond)),2,0).
fval(0,(comp_overlap_inv_overlap,(triangle,key1)),2,0).
fval(0,(comp_overlap_inv_overlap,(r,node1)),2,0).
fval(0,(comp_overlap_inv_overlap,(diamond,triangle)),2,0).
fval(0,(comp_overlap_inv_overlap,(key0,diamond)),2,0).
fval(0,(comp_overlap_inv_overlap,(key0,key1)),2,0).
fval(0,(comp_overlap_inv_overlap,(diamond,key1)),2,0).
fval(0,(comp_overlap_inv_overlap,(r,key0)),2,0).
fval(0,(comp_overlap_inv_overlap,(key1,node1)),2,0).
fval(0,(comp_overlap_inv_overlap,(node1,r)),2,0).
fval(0,(comp_overlap_inv_overlap,(key1,key0)),2,0).
fval(0,(comp_overlap_inv_overlap,(r,triangle)),2,0).
fval(0,(comp_overlap_inv_overlap,(r,diamond)),2,0).
fval(0,(comp_overlap_inv_overlap,(key1,triangle)),2,0).
fval(0,(comp_overlap_inv_overlap,(triangle,node1)),2,0).
fval(0,(comp_overlap_inv_overlap,(key1,diamond)),2,0).
fval(0,(comp_overlap_inv_overlap,(node1,key0)),2,0).
fval(0,(comp_overlap_inv_overlap,(key0,node1)),2,0).
fval(0,(comp_overlap_inv_overlap,(diamond,node1)),2,0).
fval(0,(er_below_lockedcell,(node1,)),0).
fval(0,(er_below_lockedcell,(triangle,)),0).
fval(0,(er_below_lockedcell,(diamond,)),0).
fval(0,(er_below_lockedcell,(key1,)),0).
fval(0,(er_below_lockedcell,(r,)),0).
fval(0,(er_below_lockedcell,(key0,)),0).
fval(0,(comp_below_overlap,(node1,diamond)),0).
fval(0,(comp_below_overlap,(triangle,key0)),0).
fval(0,(comp_below_overlap,(diamond,key0)),0).
fval(0,(comp_below_overlap,(triangle,r)),0).
fval(0,(comp_below_overlap,(key0,r)),0).
fval(0,(comp_below_overlap,(diamond,r)),0).
fval(0,(comp_below_overlap,(triangle,diamond)),0).
fval(0,(comp_below_overlap,(key0,diamond)),0).
fval(0,(comp_below_overlap,(r,key0)),0).
fval(0,(comp_below_overlap,(key1,node1)),0).
fval(0,(comp_below_overlap,(r,diamond)),0).
fval(0,(comp_below_overlap,(key1,triangle)),0).
fval(0,(comp_below_overlap,(triangle,node1)),0).
fval(0,(comp_below_overlap,(key0,node1)),0).
fval(0,(comp_below_overlap,(diamond,node1)),0).
fval(0,(comp_below_overlap,(node1,triangle)),0).
fval(0,(comp_below_overlap,(node1,key1)),0).
fval(0,(comp_below_overlap,(key0,triangle)),0).
fval(0,(comp_below_overlap,(triangle,key1)),0).
fval(0,(comp_below_overlap,(r,node1)),0).
fval(0,(comp_below_overlap,(diamond,triangle)),0).
fval(0,(comp_below_overlap,(key0,key1)),0).
fval(0,(comp_below_overlap,(diamond,key1)),0).
fval(0,(comp_below_overlap,(node1,key0)),0).
fval(0,(comp_below_overlap,(key1,key0)),0).
fval(0,(comp_below_overlap,(r,triangle)),0).
fval(0,(comp_below_overlap,(key1,r)),0).
fval(0,(comp_below_overlap,(r,key1)),0).
fval(0,(comp_below_overlap,(key1,diamond)),0).
fval(0,(comp_below_overlap,(node1,r)),0).
fval(0,(subset_key_verum,(0,)),1).
fval(0,(inter_er_overlap_verum_er_left_lockedcell,(node1,)),0).
fval(0,(inter_er_overlap_verum_er_left_lockedcell,(triangle,)),0).
fval(0,(inter_er_overlap_verum_er_left_lockedcell,(diamond,)),0).
fval(0,(inter_er_overlap_verum_er_left_lockedcell,(key1,)),0).
fval(0,(inter_er_overlap_verum_er_left_lockedcell,(key0,)),0).
fval(0,(inter_er_overlap_verum_er_left_lockedcell,(r,)),0).
fval(0,(inter_er_overlap_robot_er_below_opencell,(node1,)),0).
fval(0,(inter_er_overlap_robot_er_below_opencell,(triangle,)),0).
fval(0,(inter_er_overlap_robot_er_below_opencell,(diamond,)),0).
fval(0,(inter_er_overlap_robot_er_below_opencell,(key1,)),0).
fval(0,(inter_er_overlap_robot_er_below_opencell,(r,)),0).
fval(0,(inter_er_overlap_robot_er_below_opencell,(key0,)),0).
fval(0,(lockedcell,(node1,)),0).
fval(0,(lockedcell,(triangle,)),0).
fval(0,(lockedcell,(diamond,)),0).
fval(0,(lockedcell,(key1,)),0).
fval(0,(lockedcell,(r,)),0).
fval(0,(lockedcell,(key0,)),0).
fval(0,(er_left_opencell,(node1,)),0).
fval(0,(er_left_opencell,(triangle,)),0).
fval(0,(er_left_opencell,(diamond,)),0).
fval(0,(er_left_opencell,(key1,)),0).
fval(0,(er_left_opencell,(r,)),0).
fval(0,(er_left_opencell,(key0,)),0).
fval(0,(inter_er_below_opencell_er_overlap_key,(node1,)),0).
fval(0,(inter_er_below_opencell_er_overlap_key,(triangle,)),0).
fval(0,(inter_er_below_opencell_er_overlap_key,(diamond,)),0).
fval(0,(inter_er_below_opencell_er_overlap_key,(key1,)),0).
fval(0,(inter_er_below_opencell_er_overlap_key,(r,)),0).
fval(0,(inter_er_below_opencell_er_overlap_key,(key0,)),0).
fval(0,(comp_smaller_shape,(node1,diamond)),0).
fval(0,(comp_smaller_shape,(triangle,key0)),0).
fval(0,(comp_smaller_shape,(diamond,key0)),0).
fval(0,(comp_smaller_shape,(triangle,r)),0).
fval(0,(comp_smaller_shape,(key0,r)),0).
fval(0,(comp_smaller_shape,(diamond,r)),0).
fval(0,(comp_smaller_shape,(triangle,diamond)),0).
fval(0,(comp_smaller_shape,(key0,diamond)),0).
fval(0,(comp_smaller_shape,(r,key0)),0).
fval(0,(comp_smaller_shape,(key1,node1)),0).
fval(0,(comp_smaller_shape,(r,diamond)),0).
fval(0,(comp_smaller_shape,(key1,triangle)),0).
fval(0,(comp_smaller_shape,(triangle,node1)),0).
fval(0,(comp_smaller_shape,(key0,node1)),0).
fval(0,(comp_smaller_shape,(diamond,node1)),0).
fval(0,(comp_smaller_shape,(node1,triangle)),0).
fval(0,(comp_smaller_shape,(node1,key1)),0).
fval(0,(comp_smaller_shape,(key0,triangle)),0).
fval(0,(comp_smaller_shape,(triangle,key1)),0).
fval(0,(comp_smaller_shape,(r,node1)),0).
fval(0,(comp_smaller_shape,(diamond,triangle)),0).
fval(0,(comp_smaller_shape,(key0,key1)),0).
fval(0,(comp_smaller_shape,(diamond,key1)),0).
fval(0,(comp_smaller_shape,(key1,key0)),0).
fval(0,(comp_smaller_shape,(r,triangle)),0).
fval(0,(comp_smaller_shape,(key1,r)),0).
fval(0,(comp_smaller_shape,(r,key1)),0).
fval(0,(comp_smaller_shape,(key1,diamond)),0).
fval(0,(comp_smaller_shape,(node1,key0)),0).
fval(0,(comp_smaller_shape,(node1,r)),0).
fval(0,(comp_overlap_shape,(node1,triangle)),1).
fval(0,(comp_overlap_shape,(node1,diamond)),0).
fval(0,(comp_overlap_shape,(triangle,key0)),0).
fval(0,(comp_overlap_shape,(diamond,key0)),0).
fval(0,(comp_overlap_shape,(triangle,r)),0).
fval(0,(comp_overlap_shape,(key0,r)),0).
fval(0,(comp_overlap_shape,(diamond,r)),0).
fval(0,(comp_overlap_shape,(triangle,diamond)),0).
fval(0,(comp_overlap_shape,(key0,diamond)),0).
fval(0,(comp_overlap_shape,(r,key0)),0).
fval(0,(comp_overlap_shape,(key1,node1)),0).
fval(0,(comp_overlap_shape,(r,diamond)),0).
fval(0,(comp_overlap_shape,(key1,triangle)),0).
fval(0,(comp_overlap_shape,(triangle,node1)),0).
fval(0,(comp_overlap_shape,(key0,node1)),0).
fval(0,(comp_overlap_shape,(diamond,node1)),0).
fval(0,(comp_overlap_shape,(node1,key1)),0).
fval(0,(comp_overlap_shape,(key0,triangle)),0).
fval(0,(comp_overlap_shape,(triangle,key1)),0).
fval(0,(comp_overlap_shape,(r,node1)),0).
fval(0,(comp_overlap_shape,(diamond,triangle)),0).
fval(0,(comp_overlap_shape,(key0,key1)),0).
fval(0,(comp_overlap_shape,(diamond,key1)),0).
fval(0,(comp_overlap_shape,(node1,key0)),0).
fval(0,(comp_overlap_shape,(key1,r)),0).
fval(0,(comp_overlap_shape,(r,triangle)),0).
fval(0,(comp_overlap_shape,(key1,key0)),0).
fval(0,(comp_overlap_shape,(r,key1)),0).
fval(0,(comp_overlap_shape,(key1,diamond)),0).
fval(0,(comp_overlap_shape,(node1,r)),0).
fval(0,(comp_below_inv_smaller,(node1,diamond)),0).
fval(0,(comp_below_inv_smaller,(key0,r)),0).
fval(0,(comp_below_inv_smaller,(triangle,key0)),0).
fval(0,(comp_below_inv_smaller,(diamond,key0)),0).
fval(0,(comp_below_inv_smaller,(triangle,r)),0).
fval(0,(comp_below_inv_smaller,(diamond,r)),0).
fval(0,(comp_below_inv_smaller,(triangle,diamond)),0).
fval(0,(comp_below_inv_smaller,(key0,diamond)),0).
fval(0,(comp_below_inv_smaller,(r,key0)),0).
fval(0,(comp_below_inv_smaller,(key1,node1)),0).
fval(0,(comp_below_inv_smaller,(r,diamond)),0).
fval(0,(comp_below_inv_smaller,(key1,triangle)),0).
fval(0,(comp_below_inv_smaller,(triangle,node1)),0).
fval(0,(comp_below_inv_smaller,(key0,node1)),0).
fval(0,(comp_below_inv_smaller,(diamond,node1)),0).
fval(0,(comp_below_inv_smaller,(node1,triangle)),0).
fval(0,(comp_below_inv_smaller,(node1,key1)),0).
fval(0,(comp_below_inv_smaller,(key0,triangle)),0).
fval(0,(comp_below_inv_smaller,(triangle,key1)),0).
fval(0,(comp_below_inv_smaller,(r,node1)),0).
fval(0,(comp_below_inv_smaller,(diamond,triangle)),0).
fval(0,(comp_below_inv_smaller,(key0,key1)),0).
fval(0,(comp_below_inv_smaller,(diamond,key1)),0).
fval(0,(comp_below_inv_smaller,(key1,r)),0).
fval(0,(comp_below_inv_smaller,(key1,key0)),0).
fval(0,(comp_below_inv_smaller,(r,triangle)),0).
fval(0,(comp_below_inv_smaller,(r,key1)),0).
fval(0,(comp_below_inv_smaller,(key1,diamond)),0).
fval(0,(comp_below_inv_smaller,(node1,key0)),0).
fval(0,(comp_below_inv_smaller,(node1,r)),0).
fval(0,(inter_er_overlap_verum_er_below_lockedcell,(node1,)),0).
fval(0,(inter_er_overlap_verum_er_below_lockedcell,(triangle,)),0).
fval(0,(inter_er_overlap_verum_er_below_lockedcell,(diamond,)),0).
fval(0,(inter_er_overlap_verum_er_below_lockedcell,(key1,)),0).
fval(0,(inter_er_overlap_verum_er_below_lockedcell,(key0,)),0).
fval(0,(inter_er_overlap_verum_er_below_lockedcell,(r,)),0).
fval(0,(inter_er_overlap_verum_er_smaller_lockedcell,(node1,)),0).
fval(0,(inter_er_overlap_verum_er_smaller_lockedcell,(triangle,)),0).
fval(0,(inter_er_overlap_verum_er_smaller_lockedcell,(diamond,)),0).
fval(0,(inter_er_overlap_verum_er_smaller_lockedcell,(key1,)),0).
fval(0,(inter_er_overlap_verum_er_smaller_lockedcell,(r,)),0).
fval(0,(inter_er_overlap_verum_er_smaller_lockedcell,(key0,)),0).
fval(0,(overlap,(node1,r)),0,1).
fval(0,(overlap,(r,node1)),0,1).
fval(0,(overlap,(key0,node1)),0,1).
fval(0,(overlap,(node1,key0)),0,1).
fval(0,(overlap,(node1,diamond)),0,0).
fval(0,(overlap,(key0,r)),0,0).
fval(0,(overlap,(triangle,key0)),0,0).
fval(0,(overlap,(diamond,key0)),0,0).
fval(0,(overlap,(triangle,r)),0,0).
fval(0,(overlap,(diamond,r)),0,0).
fval(0,(overlap,(triangle,diamond)),0,0).
fval(0,(overlap,(key0,diamond)),0,0).
fval(0,(overlap,(r,key0)),0,0).
fval(0,(overlap,(key1,node1)),0,0).
fval(0,(overlap,(r,diamond)),0,0).
fval(0,(overlap,(key1,triangle)),0,0).
fval(0,(overlap,(triangle,node1)),0,0).
fval(0,(overlap,(diamond,node1)),0,0).
fval(0,(overlap,(node1,triangle)),0,0).
fval(0,(overlap,(node1,key1)),0,0).
fval(0,(overlap,(key0,triangle)),0,0).
fval(0,(overlap,(triangle,key1)),0,0).
fval(0,(overlap,(diamond,triangle)),0,0).
fval(0,(overlap,(key0,key1)),0,0).
fval(0,(overlap,(diamond,key1)),0,0).
fval(0,(overlap,(key1,r)),0,0).
fval(0,(overlap,(key1,key0)),0,0).
fval(0,(overlap,(r,triangle)),0,0).
fval(0,(overlap,(r,key1)),0,0).
fval(0,(overlap,(key1,diamond)),0,0).
fval(0,(overlap,(key1,node1)),1,1).
fval(0,(overlap,(r,node1)),1,1).
fval(0,(overlap,(node1,key1)),1,1).
fval(0,(overlap,(node1,r)),1,1).
fval(0,(overlap,(key0,node1)),1,1).
fval(0,(overlap,(node1,key0)),1,1).
fval(0,(overlap,(node1,triangle)),1,0).
fval(0,(overlap,(node1,diamond)),1,0).
fval(0,(overlap,(key0,r)),1,0).
fval(0,(overlap,(triangle,key0)),1,0).
fval(0,(overlap,(diamond,key0)),1,0).
fval(0,(overlap,(triangle,r)),1,0).
fval(0,(overlap,(diamond,r)),1,0).
fval(0,(overlap,(key0,triangle)),1,0).
fval(0,(overlap,(triangle,diamond)),1,0).
fval(0,(overlap,(triangle,key1)),1,0).
fval(0,(overlap,(diamond,triangle)),1,0).
fval(0,(overlap,(key0,diamond)),1,0).
fval(0,(overlap,(key0,key1)),1,0).
fval(0,(overlap,(diamond,key1)),1,0).
fval(0,(overlap,(r,key0)),1,0).
fval(0,(overlap,(key1,r)),1,0).
fval(0,(overlap,(key1,key0)),1,0).
fval(0,(overlap,(r,triangle)),1,0).
fval(0,(overlap,(r,diamond)),1,0).
fval(0,(overlap,(r,key1)),1,0).
fval(0,(overlap,(key1,triangle)),1,0).
fval(0,(overlap,(triangle,node1)),1,0).
fval(0,(overlap,(key1,diamond)),1,0).
fval(0,(overlap,(diamond,node1)),1,0).
fval(0,(overlap,(node1,key1)),2,1).
fval(0,(overlap,(node1,r)),2,1).
fval(0,(overlap,(key1,node1)),2,1).
fval(0,(overlap,(r,node1)),2,1).
fval(0,(overlap,(node1,diamond)),2,0).
fval(0,(overlap,(key0,r)),2,0).
fval(0,(overlap,(triangle,key0)),2,0).
fval(0,(overlap,(diamond,key0)),2,0).
fval(0,(overlap,(triangle,r)),2,0).
fval(0,(overlap,(diamond,r)),2,0).
fval(0,(overlap,(triangle,diamond)),2,0).
fval(0,(overlap,(key0,diamond)),2,0).
fval(0,(overlap,(r,key0)),2,0).
fval(0,(overlap,(r,diamond)),2,0).
fval(0,(overlap,(key1,triangle)),2,0).
fval(0,(overlap,(triangle,node1)),2,0).
fval(0,(overlap,(key0,node1)),2,0).
fval(0,(overlap,(diamond,node1)),2,0).
fval(0,(overlap,(node1,triangle)),2,0).
fval(0,(overlap,(key0,triangle)),2,0).
fval(0,(overlap,(triangle,key1)),2,0).
fval(0,(overlap,(diamond,triangle)),2,0).
fval(0,(overlap,(key0,key1)),2,0).
fval(0,(overlap,(diamond,key1)),2,0).
fval(0,(overlap,(key1,r)),2,0).
fval(0,(overlap,(key1,key0)),2,0).
fval(0,(overlap,(r,triangle)),2,0).
fval(0,(overlap,(r,key1)),2,0).
fval(0,(overlap,(key1,diamond)),2,0).
fval(0,(overlap,(node1,key0)),2,0).
fval(0,(inter_er_left_opencell_er_overlap_key,(node1,)),0).
fval(0,(inter_er_left_opencell_er_overlap_key,(triangle,)),0).
fval(0,(inter_er_left_opencell_er_overlap_key,(diamond,)),0).
fval(0,(inter_er_left_opencell_er_overlap_key,(key1,)),0).
fval(0,(inter_er_left_opencell_er_overlap_key,(r,)),0).
fval(0,(inter_er_left_opencell_er_overlap_key,(key0,)),0).
fval(0,(comp_inv_left_inv_overlap,(node1,diamond)),0).
fval(0,(comp_inv_left_inv_overlap,(triangle,r)),0).
fval(0,(comp_inv_left_inv_overlap,(key0,r)),0).
fval(0,(comp_inv_left_inv_overlap,(triangle,key0)),0).
fval(0,(comp_inv_left_inv_overlap,(diamond,key0)),0).
fval(0,(comp_inv_left_inv_overlap,(diamond,r)),0).
fval(0,(comp_inv_left_inv_overlap,(triangle,diamond)),0).
fval(0,(comp_inv_left_inv_overlap,(key0,diamond)),0).
fval(0,(comp_inv_left_inv_overlap,(r,key0)),0).
fval(0,(comp_inv_left_inv_overlap,(key1,node1)),0).
fval(0,(comp_inv_left_inv_overlap,(r,diamond)),0).
fval(0,(comp_inv_left_inv_overlap,(key1,triangle)),0).
fval(0,(comp_inv_left_inv_overlap,(triangle,node1)),0).
fval(0,(comp_inv_left_inv_overlap,(key0,node1)),0).
fval(0,(comp_inv_left_inv_overlap,(diamond,node1)),0).
fval(0,(comp_inv_left_inv_overlap,(node1,triangle)),0).
fval(0,(comp_inv_left_inv_overlap,(node1,key1)),0).
fval(0,(comp_inv_left_inv_overlap,(key0,triangle)),0).
fval(0,(comp_inv_left_inv_overlap,(triangle,key1)),0).
fval(0,(comp_inv_left_inv_overlap,(r,node1)),0).
fval(0,(comp_inv_left_inv_overlap,(diamond,triangle)),0).
fval(0,(comp_inv_left_inv_overlap,(key0,key1)),0).
fval(0,(comp_inv_left_inv_overlap,(diamond,key1)),0).
fval(0,(comp_inv_left_inv_overlap,(key1,r)),0).
fval(0,(comp_inv_left_inv_overlap,(key1,key0)),0).
fval(0,(comp_inv_left_inv_overlap,(r,triangle)),0).
fval(0,(comp_inv_left_inv_overlap,(r,key1)),0).
fval(0,(comp_inv_left_inv_overlap,(key1,diamond)),0).
fval(0,(comp_inv_left_inv_overlap,(node1,key0)),0).
fval(0,(comp_inv_left_inv_overlap,(node1,r)),0).
fval(0,(inter_er_overlap_robot_er_overlap_key,(node1,)),1).
fval(0,(inter_er_overlap_robot_er_overlap_key,(triangle,)),0).
fval(0,(inter_er_overlap_robot_er_overlap_key,(diamond,)),0).
fval(0,(inter_er_overlap_robot_er_overlap_key,(key1,)),0).
fval(0,(inter_er_overlap_robot_er_overlap_key,(r,)),0).
fval(0,(inter_er_overlap_robot_er_overlap_key,(key0,)),0).
fval(0,(below,(node1,diamond)),0).
fval(0,(below,(triangle,r)),0).
fval(0,(below,(key0,r)),0).
fval(0,(below,(triangle,key0)),0).
fval(0,(below,(diamond,key0)),0).
fval(0,(below,(diamond,r)),0).
fval(0,(below,(triangle,diamond)),0).
fval(0,(below,(key0,diamond)),0).
fval(0,(below,(r,key0)),0).
fval(0,(below,(key1,node1)),0).
fval(0,(below,(r,diamond)),0).
fval(0,(below,(key1,triangle)),0).
fval(0,(below,(triangle,node1)),0).
fval(0,(below,(key0,node1)),0).
fval(0,(below,(diamond,node1)),0).
fval(0,(below,(node1,triangle)),0).
fval(0,(below,(node1,key1)),0).
fval(0,(below,(key0,triangle)),0).
fval(0,(below,(triangle,key1)),0).
fval(0,(below,(r,node1)),0).
fval(0,(below,(diamond,triangle)),0).
fval(0,(below,(key0,key1)),0).
fval(0,(below,(diamond,key1)),0).
fval(0,(below,(key1,r)),0).
fval(0,(below,(key1,key0)),0).
fval(0,(below,(r,triangle)),0).
fval(0,(below,(r,key1)),0).
fval(0,(below,(key1,diamond)),0).
fval(0,(below,(node1,key0)),0).
fval(0,(below,(node1,r)),0).
fval(0,(left,(node1,diamond)),0).
fval(0,(left,(triangle,r)),0).
fval(0,(left,(key0,r)),0).
fval(0,(left,(triangle,key0)),0).
fval(0,(left,(diamond,key0)),0).
fval(0,(left,(diamond,r)),0).
fval(0,(left,(triangle,diamond)),0).
fval(0,(left,(key0,diamond)),0).
fval(0,(left,(r,key0)),0).
fval(0,(left,(key1,node1)),0).
fval(0,(left,(r,diamond)),0).
fval(0,(left,(key1,triangle)),0).
fval(0,(left,(triangle,node1)),0).
fval(0,(left,(key0,node1)),0).
fval(0,(left,(diamond,node1)),0).
fval(0,(left,(node1,triangle)),0).
fval(0,(left,(node1,key1)),0).
fval(0,(left,(key0,triangle)),0).
fval(0,(left,(triangle,key1)),0).
fval(0,(left,(r,node1)),0).
fval(0,(left,(diamond,triangle)),0).
fval(0,(left,(key0,key1)),0).
fval(0,(left,(diamond,key1)),0).
fval(0,(left,(key1,r)),0).
fval(0,(left,(key1,key0)),0).
fval(0,(left,(r,triangle)),0).
fval(0,(left,(r,key1)),0).
fval(0,(left,(key1,diamond)),0).
fval(0,(left,(node1,key0)),0).
fval(0,(left,(node1,r)),0).
fval(0,(comp_smaller_left,(node1,diamond)),0).
fval(0,(comp_smaller_left,(triangle,key0)),0).
fval(0,(comp_smaller_left,(diamond,key0)),0).
fval(0,(comp_smaller_left,(triangle,r)),0).
fval(0,(comp_smaller_left,(key0,r)),0).
fval(0,(comp_smaller_left,(diamond,r)),0).
fval(0,(comp_smaller_left,(triangle,diamond)),0).
fval(0,(comp_smaller_left,(key0,diamond)),0).
fval(0,(comp_smaller_left,(r,key0)),0).
fval(0,(comp_smaller_left,(key1,node1)),0).
fval(0,(comp_smaller_left,(r,diamond)),0).
fval(0,(comp_smaller_left,(key1,triangle)),0).
fval(0,(comp_smaller_left,(triangle,node1)),0).
fval(0,(comp_smaller_left,(key0,node1)),0).
fval(0,(comp_smaller_left,(diamond,node1)),0).
fval(0,(comp_smaller_left,(node1,triangle)),0).
fval(0,(comp_smaller_left,(node1,key1)),0).
fval(0,(comp_smaller_left,(key0,triangle)),0).
fval(0,(comp_smaller_left,(triangle,key1)),0).
fval(0,(comp_smaller_left,(r,node1)),0).
fval(0,(comp_smaller_left,(diamond,triangle)),0).
fval(0,(comp_smaller_left,(key0,key1)),0).
fval(0,(comp_smaller_left,(diamond,key1)),0).
fval(0,(comp_smaller_left,(node1,key0)),0).
fval(0,(comp_smaller_left,(key1,r)),0).
fval(0,(comp_smaller_left,(r,triangle)),0).
fval(0,(comp_smaller_left,(key1,key0)),0).
fval(0,(comp_smaller_left,(r,key1)),0).
fval(0,(comp_smaller_left,(key1,diamond)),0).
fval(0,(comp_smaller_left,(node1,r)),0).
fval(0,(inter_er_below_verum_er_overlap_robot,(node1,)),0).
fval(0,(inter_er_below_verum_er_overlap_robot,(triangle,)),0).
fval(0,(inter_er_below_verum_er_overlap_robot,(diamond,)),0).
fval(0,(inter_er_below_verum_er_overlap_robot,(key1,)),0).
fval(0,(inter_er_below_verum_er_overlap_robot,(key0,)),0).
fval(0,(inter_er_below_verum_er_overlap_robot,(r,)),0).
fval(0,(verum,(node1,)),1).
fval(0,(verum,(triangle,)),1).
fval(0,(verum,(diamond,)),1).
fval(0,(verum,(key1,)),1).
fval(0,(verum,(r,)),1).
fval(0,(verum,(key0,)),1).
fval(0,(robot,(r,)),1).
fval(0,(robot,(node1,)),0).
fval(0,(robot,(triangle,)),0).
fval(0,(robot,(diamond,)),0).
fval(0,(robot,(key1,)),0).
fval(0,(robot,(key0,)),0).
fval(0,(subset_lockedcell_verum,(0,)),0).
fval(0,(peg,(node1,)),0).
fval(0,(peg,(triangle,)),0).
fval(0,(peg,(diamond,)),0).
fval(0,(peg,(key1,)),0).
fval(0,(peg,(r,)),0).
fval(0,(peg,(key0,)),0).
fval(0,(comp_left_inv_smaller,(node1,diamond)),0).
fval(0,(comp_left_inv_smaller,(key0,r)),0).
fval(0,(comp_left_inv_smaller,(triangle,key0)),0).
fval(0,(comp_left_inv_smaller,(diamond,key0)),0).
fval(0,(comp_left_inv_smaller,(triangle,r)),0).
fval(0,(comp_left_inv_smaller,(diamond,r)),0).
fval(0,(comp_left_inv_smaller,(triangle,diamond)),0).
fval(0,(comp_left_inv_smaller,(key0,diamond)),0).
fval(0,(comp_left_inv_smaller,(r,key0)),0).
fval(0,(comp_left_inv_smaller,(key1,node1)),0).
fval(0,(comp_left_inv_smaller,(r,diamond)),0).
fval(0,(comp_left_inv_smaller,(key1,triangle)),0).
fval(0,(comp_left_inv_smaller,(triangle,node1)),0).
fval(0,(comp_left_inv_smaller,(key0,node1)),0).
fval(0,(comp_left_inv_smaller,(diamond,node1)),0).
fval(0,(comp_left_inv_smaller,(node1,triangle)),0).
fval(0,(comp_left_inv_smaller,(node1,key1)),0).
fval(0,(comp_left_inv_smaller,(key0,triangle)),0).
fval(0,(comp_left_inv_smaller,(triangle,key1)),0).
fval(0,(comp_left_inv_smaller,(r,node1)),0).
fval(0,(comp_left_inv_smaller,(diamond,triangle)),0).
fval(0,(comp_left_inv_smaller,(key0,key1)),0).
fval(0,(comp_left_inv_smaller,(diamond,key1)),0).
fval(0,(comp_left_inv_smaller,(key1,r)),0).
fval(0,(comp_left_inv_smaller,(key1,key0)),0).
fval(0,(comp_left_inv_smaller,(r,triangle)),0).
fval(0,(comp_left_inv_smaller,(r,key1)),0).
fval(0,(comp_left_inv_smaller,(key1,diamond)),0).
fval(0,(comp_left_inv_smaller,(node1,key0)),0).
fval(0,(comp_left_inv_smaller,(node1,r)),0).
fval(0,(comp_below_inv_below,(node1,diamond)),0).
fval(0,(comp_below_inv_below,(triangle,key0)),0).
fval(0,(comp_below_inv_below,(diamond,key0)),0).
fval(0,(comp_below_inv_below,(triangle,r)),0).
fval(0,(comp_below_inv_below,(key0,r)),0).
fval(0,(comp_below_inv_below,(diamond,r)),0).
fval(0,(comp_below_inv_below,(triangle,diamond)),0).
fval(0,(comp_below_inv_below,(key0,diamond)),0).
fval(0,(comp_below_inv_below,(r,key0)),0).
fval(0,(comp_below_inv_below,(key1,node1)),0).
fval(0,(comp_below_inv_below,(r,diamond)),0).
fval(0,(comp_below_inv_below,(key1,triangle)),0).
fval(0,(comp_below_inv_below,(triangle,node1)),0).
fval(0,(comp_below_inv_below,(key0,node1)),0).
fval(0,(comp_below_inv_below,(diamond,node1)),0).
fval(0,(comp_below_inv_below,(node1,triangle)),0).
fval(0,(comp_below_inv_below,(node1,key1)),0).
fval(0,(comp_below_inv_below,(key0,triangle)),0).
fval(0,(comp_below_inv_below,(triangle,key1)),0).
fval(0,(comp_below_inv_below,(r,node1)),0).
fval(0,(comp_below_inv_below,(diamond,triangle)),0).
fval(0,(comp_below_inv_below,(key0,key1)),0).
fval(0,(comp_below_inv_below,(diamond,key1)),0).
fval(0,(comp_below_inv_below,(node1,key0)),0).
fval(0,(comp_below_inv_below,(key1,key0)),0).
fval(0,(comp_below_inv_below,(r,triangle)),0).
fval(0,(comp_below_inv_below,(key1,r)),0).
fval(0,(comp_below_inv_below,(r,key1)),0).
fval(0,(comp_below_inv_below,(key1,diamond)),0).
fval(0,(comp_below_inv_below,(node1,r)),0).
fval(0,(er_smaller_lockedcell,(node1,)),0).
fval(0,(er_smaller_lockedcell,(triangle,)),0).
fval(0,(er_smaller_lockedcell,(diamond,)),0).
fval(0,(er_smaller_lockedcell,(key1,)),0).
fval(0,(er_smaller_lockedcell,(r,)),0).
fval(0,(er_smaller_lockedcell,(key0,)),0).
fval(0,(inter_er_shape_verum_er_overlap_key,(node1,)),0).
fval(0,(inter_er_shape_verum_er_overlap_key,(triangle,)),0).
fval(0,(inter_er_shape_verum_er_overlap_key,(diamond,)),0).
fval(0,(inter_er_shape_verum_er_overlap_key,(key1,)),0).
fval(0,(inter_er_shape_verum_er_overlap_key,(key0,)),0).
fval(0,(inter_er_shape_verum_er_overlap_key,(r,)),0).
fval(0,(er_left_lockedcell,(node1,)),0).
fval(0,(er_left_lockedcell,(triangle,)),0).
fval(0,(er_left_lockedcell,(diamond,)),0).
fval(0,(er_left_lockedcell,(key1,)),0).
fval(0,(er_left_lockedcell,(r,)),0).
fval(0,(er_left_lockedcell,(key0,)),0).
fval(0,(inter_er_overlap_robot_er_left_lockedcell,(node1,)),0).
fval(0,(inter_er_overlap_robot_er_left_lockedcell,(triangle,)),0).
fval(0,(inter_er_overlap_robot_er_left_lockedcell,(diamond,)),0).
fval(0,(inter_er_overlap_robot_er_left_lockedcell,(key1,)),0).
fval(0,(inter_er_overlap_robot_er_left_lockedcell,(r,)),0).
fval(0,(inter_er_overlap_robot_er_left_lockedcell,(key0,)),0).
fval(0,(er_left_verum,(node1,)),0).
fval(0,(er_left_verum,(triangle,)),0).
fval(0,(er_left_verum,(diamond,)),0).
fval(0,(er_left_verum,(key1,)),0).
fval(0,(er_left_verum,(r,)),0).
fval(0,(er_left_verum,(key0,)),0).
fval(0,(inter_opencell_er_shape_verum,(node1,)),0).
fval(0,(inter_opencell_er_shape_verum,(triangle,)),0).
fval(0,(inter_opencell_er_shape_verum,(diamond,)),0).
fval(0,(inter_opencell_er_shape_verum,(key1,)),0).
fval(0,(inter_opencell_er_shape_verum,(r,)),0).
fval(0,(inter_opencell_er_shape_verum,(key0,)),0).
fval(0,(inv_below,(node1,diamond)),0).
fval(0,(inv_below,(triangle,key0)),0).
fval(0,(inv_below,(diamond,key0)),0).
fval(0,(inv_below,(triangle,r)),0).
fval(0,(inv_below,(key0,r)),0).
fval(0,(inv_below,(diamond,r)),0).
fval(0,(inv_below,(triangle,diamond)),0).
fval(0,(inv_below,(key0,diamond)),0).
fval(0,(inv_below,(r,key0)),0).
fval(0,(inv_below,(key1,node1)),0).
fval(0,(inv_below,(r,diamond)),0).
fval(0,(inv_below,(key1,triangle)),0).
fval(0,(inv_below,(triangle,node1)),0).
fval(0,(inv_below,(key0,node1)),0).
fval(0,(inv_below,(diamond,node1)),0).
fval(0,(inv_below,(node1,triangle)),0).
fval(0,(inv_below,(node1,key1)),0).
fval(0,(inv_below,(key0,triangle)),0).
fval(0,(inv_below,(triangle,key1)),0).
fval(0,(inv_below,(r,node1)),0).
fval(0,(inv_below,(diamond,triangle)),0).
fval(0,(inv_below,(key0,key1)),0).
fval(0,(inv_below,(diamond,key1)),0).
fval(0,(inv_below,(node1,key0)),0).
fval(0,(inv_below,(key1,r)),0).
fval(0,(inv_below,(r,triangle)),0).
fval(0,(inv_below,(key1,key0)),0).
fval(0,(inv_below,(r,key1)),0).
fval(0,(inv_below,(key1,diamond)),0).
fval(0,(inv_below,(node1,r)),0).
fval(0,(comp_shape_inv_shape,(key0,key1)),1).
fval(0,(comp_shape_inv_shape,(key1,key0)),1).
fval(0,(comp_shape_inv_shape,(node1,diamond)),0).
fval(0,(comp_shape_inv_shape,(key0,r)),0).
fval(0,(comp_shape_inv_shape,(triangle,key0)),0).
fval(0,(comp_shape_inv_shape,(diamond,key0)),0).
fval(0,(comp_shape_inv_shape,(triangle,r)),0).
fval(0,(comp_shape_inv_shape,(diamond,r)),0).
fval(0,(comp_shape_inv_shape,(triangle,diamond)),0).
fval(0,(comp_shape_inv_shape,(key0,diamond)),0).
fval(0,(comp_shape_inv_shape,(r,key0)),0).
fval(0,(comp_shape_inv_shape,(key1,node1)),0).
fval(0,(comp_shape_inv_shape,(r,diamond)),0).
fval(0,(comp_shape_inv_shape,(key1,triangle)),0).
fval(0,(comp_shape_inv_shape,(triangle,node1)),0).
fval(0,(comp_shape_inv_shape,(key0,node1)),0).
fval(0,(comp_shape_inv_shape,(diamond,node1)),0).
fval(0,(comp_shape_inv_shape,(node1,triangle)),0).
fval(0,(comp_shape_inv_shape,(node1,key1)),0).
fval(0,(comp_shape_inv_shape,(key0,triangle)),0).
fval(0,(comp_shape_inv_shape,(triangle,key1)),0).
fval(0,(comp_shape_inv_shape,(r,node1)),0).
fval(0,(comp_shape_inv_shape,(diamond,triangle)),0).
fval(0,(comp_shape_inv_shape,(diamond,key1)),0).
fval(0,(comp_shape_inv_shape,(key1,r)),0).
fval(0,(comp_shape_inv_shape,(r,triangle)),0).
fval(0,(comp_shape_inv_shape,(r,key1)),0).
fval(0,(comp_shape_inv_shape,(key1,diamond)),0).
fval(0,(comp_shape_inv_shape,(node1,key0)),0).
fval(0,(comp_shape_inv_shape,(node1,r)),0).
fval(0,(comp_left_shape,(node1,diamond)),0).
fval(0,(comp_left_shape,(triangle,r)),0).
fval(0,(comp_left_shape,(key0,r)),0).
fval(0,(comp_left_shape,(triangle,key0)),0).
fval(0,(comp_left_shape,(diamond,key0)),0).
fval(0,(comp_left_shape,(diamond,r)),0).
fval(0,(comp_left_shape,(triangle,diamond)),0).
fval(0,(comp_left_shape,(key0,diamond)),0).
fval(0,(comp_left_shape,(r,key0)),0).
fval(0,(comp_left_shape,(key1,node1)),0).
fval(0,(comp_left_shape,(r,diamond)),0).
fval(0,(comp_left_shape,(key1,triangle)),0).
fval(0,(comp_left_shape,(triangle,node1)),0).
fval(0,(comp_left_shape,(key0,node1)),0).
fval(0,(comp_left_shape,(diamond,node1)),0).
fval(0,(comp_left_shape,(node1,triangle)),0).
fval(0,(comp_left_shape,(node1,key1)),0).
fval(0,(comp_left_shape,(key0,triangle)),0).
fval(0,(comp_left_shape,(triangle,key1)),0).
fval(0,(comp_left_shape,(r,node1)),0).
fval(0,(comp_left_shape,(diamond,triangle)),0).
fval(0,(comp_left_shape,(key0,key1)),0).
fval(0,(comp_left_shape,(diamond,key1)),0).
fval(0,(comp_left_shape,(key1,r)),0).
fval(0,(comp_left_shape,(key1,key0)),0).
fval(0,(comp_left_shape,(r,triangle)),0).
fval(0,(comp_left_shape,(r,key1)),0).
fval(0,(comp_left_shape,(key1,diamond)),0).
fval(0,(comp_left_shape,(node1,key0)),0).
fval(0,(comp_left_shape,(node1,r)),0).
fval(0,(subset_opencell_er_overlap_key,(0,)),1).
fval(0,(inter_opencell_er_overlap_verum,(node1,)),1).
fval(0,(inter_opencell_er_overlap_verum,(triangle,)),0).
fval(0,(inter_opencell_er_overlap_verum,(diamond,)),0).
fval(0,(inter_opencell_er_overlap_verum,(key1,)),0).
fval(0,(inter_opencell_er_overlap_verum,(key0,)),0).
fval(0,(inter_opencell_er_overlap_verum,(r,)),0).
fval(0,(inter_er_below_verum_er_overlap_key,(node1,)),0).
fval(0,(inter_er_below_verum_er_overlap_key,(triangle,)),0).
fval(0,(inter_er_below_verum_er_overlap_key,(diamond,)),0).
fval(0,(inter_er_below_verum_er_overlap_key,(key1,)),0).
fval(0,(inter_er_below_verum_er_overlap_key,(key0,)),0).
fval(0,(inter_er_below_verum_er_overlap_key,(r,)),0).
fval(0,(inter_er_overlap_verum_er_shape_verum,(key0,)),0,1).
fval(0,(inter_er_overlap_verum_er_shape_verum,(node1,)),0,0).
fval(0,(inter_er_overlap_verum_er_shape_verum,(triangle,)),0,0).
fval(0,(inter_er_overlap_verum_er_shape_verum,(diamond,)),0,0).
fval(0,(inter_er_overlap_verum_er_shape_verum,(key1,)),0,0).
fval(0,(inter_er_overlap_verum_er_shape_verum,(r,)),0,0).
fval(0,(inter_er_overlap_verum_er_shape_verum,(key1,)),1,1).
fval(0,(inter_er_overlap_verum_er_shape_verum,(key0,)),1,1).
fval(0,(inter_er_overlap_verum_er_shape_verum,(node1,)),1,0).
fval(0,(inter_er_overlap_verum_er_shape_verum,(r,)),1,0).
fval(0,(inter_er_overlap_verum_er_shape_verum,(triangle,)),1,0).
fval(0,(inter_er_overlap_verum_er_shape_verum,(diamond,)),1,0).
fval(0,(inter_er_overlap_verum_er_shape_verum,(key1,)),2,1).
fval(0,(inter_er_overlap_verum_er_shape_verum,(node1,)),2,0).
fval(0,(inter_er_overlap_verum_er_shape_verum,(triangle,)),2,0).
fval(0,(inter_er_overlap_verum_er_shape_verum,(diamond,)),2,0).
fval(0,(inter_er_overlap_verum_er_shape_verum,(r,)),2,0).
fval(0,(inter_er_overlap_verum_er_shape_verum,(key0,)),2,0).
fval(0,(inter_er_overlap_verum_er_below_opencell,(node1,)),0).
fval(0,(inter_er_overlap_verum_er_below_opencell,(triangle,)),0).
fval(0,(inter_er_overlap_verum_er_below_opencell,(diamond,)),0).
fval(0,(inter_er_overlap_verum_er_below_opencell,(key1,)),0).
fval(0,(inter_er_overlap_verum_er_below_opencell,(r,)),0).
fval(0,(inter_er_overlap_verum_er_below_opencell,(key0,)),0).
fval(0,(comp_smaller_overlap,(key0,r)),0,1).
fval(0,(comp_smaller_overlap,(key1,r)),0,1).
fval(0,(comp_smaller_overlap,(key1,key0)),0,1).
fval(0,(comp_smaller_overlap,(r,key0)),0,1).
fval(0,(comp_smaller_overlap,(node1,triangle)),0,0).
fval(0,(comp_smaller_overlap,(node1,diamond)),0,0).
fval(0,(comp_smaller_overlap,(triangle,key0)),0,0).
fval(0,(comp_smaller_overlap,(diamond,key0)),0,0).
fval(0,(comp_smaller_overlap,(triangle,r)),0,0).
fval(0,(comp_smaller_overlap,(node1,key1)),0,0).
fval(0,(comp_smaller_overlap,(diamond,r)),0,0).
fval(0,(comp_smaller_overlap,(key0,triangle)),0,0).
fval(0,(comp_smaller_overlap,(triangle,diamond)),0,0).
fval(0,(comp_smaller_overlap,(triangle,key1)),0,0).
fval(0,(comp_smaller_overlap,(r,node1)),0,0).
fval(0,(comp_smaller_overlap,(diamond,triangle)),0,0).
fval(0,(comp_smaller_overlap,(key0,diamond)),0,0).
fval(0,(comp_smaller_overlap,(key0,key1)),0,0).
fval(0,(comp_smaller_overlap,(diamond,key1)),0,0).
fval(0,(comp_smaller_overlap,(key1,node1)),0,0).
fval(0,(comp_smaller_overlap,(node1,r)),0,0).
fval(0,(comp_smaller_overlap,(r,triangle)),0,0).
fval(0,(comp_smaller_overlap,(r,diamond)),0,0).
fval(0,(comp_smaller_overlap,(r,key1)),0,0).
fval(0,(comp_smaller_overlap,(key1,triangle)),0,0).
fval(0,(comp_smaller_overlap,(triangle,node1)),0,0).
fval(0,(comp_smaller_overlap,(key1,diamond)),0,0).
fval(0,(comp_smaller_overlap,(node1,key0)),0,0).
fval(0,(comp_smaller_overlap,(key0,node1)),0,0).
fval(0,(comp_smaller_overlap,(diamond,node1)),0,0).
fval(0,(comp_smaller_overlap,(key0,r)),1,1).
fval(0,(comp_smaller_overlap,(key1,key0)),1,1).
fval(0,(comp_smaller_overlap,(key1,r)),1,1).
fval(0,(comp_smaller_overlap,(r,key1)),1,1).
fval(0,(comp_smaller_overlap,(key0,key1)),1,1).
fval(0,(comp_smaller_overlap,(r,key0)),1,1).
fval(0,(comp_smaller_overlap,(node1,triangle)),1,0).
fval(0,(comp_smaller_overlap,(node1,diamond)),1,0).
fval(0,(comp_smaller_overlap,(triangle,key0)),1,0).
fval(0,(comp_smaller_overlap,(diamond,key0)),1,0).
fval(0,(comp_smaller_overlap,(triangle,r)),1,0).
fval(0,(comp_smaller_overlap,(node1,key1)),1,0).
fval(0,(comp_smaller_overlap,(diamond,r)),1,0).
fval(0,(comp_smaller_overlap,(key0,triangle)),1,0).
fval(0,(comp_smaller_overlap,(triangle,diamond)),1,0).
fval(0,(comp_smaller_overlap,(triangle,key1)),1,0).
fval(0,(comp_smaller_overlap,(r,node1)),1,0).
fval(0,(comp_smaller_overlap,(diamond,triangle)),1,0).
fval(0,(comp_smaller_overlap,(key0,diamond)),1,0).
fval(0,(comp_smaller_overlap,(diamond,key1)),1,0).
fval(0,(comp_smaller_overlap,(key1,node1)),1,0).
fval(0,(comp_smaller_overlap,(node1,r)),1,0).
fval(0,(comp_smaller_overlap,(r,triangle)),1,0).
fval(0,(comp_smaller_overlap,(r,diamond)),1,0).
fval(0,(comp_smaller_overlap,(key1,triangle)),1,0).
fval(0,(comp_smaller_overlap,(triangle,node1)),1,0).
fval(0,(comp_smaller_overlap,(key1,diamond)),1,0).
fval(0,(comp_smaller_overlap,(node1,key0)),1,0).
fval(0,(comp_smaller_overlap,(key0,node1)),1,0).
fval(0,(comp_smaller_overlap,(diamond,node1)),1,0).
fval(0,(comp_smaller_overlap,(r,key1)),2,1).
fval(0,(comp_smaller_overlap,(key0,r)),2,1).
fval(0,(comp_smaller_overlap,(key0,key1)),2,1).
fval(0,(comp_smaller_overlap,(key1,r)),2,1).
fval(0,(comp_smaller_overlap,(node1,triangle)),2,0).
fval(0,(comp_smaller_overlap,(node1,diamond)),2,0).
fval(0,(comp_smaller_overlap,(triangle,key0)),2,0).
fval(0,(comp_smaller_overlap,(diamond,key0)),2,0).
fval(0,(comp_smaller_overlap,(triangle,r)),2,0).
fval(0,(comp_smaller_overlap,(node1,key1)),2,0).
fval(0,(comp_smaller_overlap,(diamond,r)),2,0).
fval(0,(comp_smaller_overlap,(key0,triangle)),2,0).
fval(0,(comp_smaller_overlap,(triangle,diamond)),2,0).
fval(0,(comp_smaller_overlap,(triangle,key1)),2,0).
fval(0,(comp_smaller_overlap,(r,node1)),2,0).
fval(0,(comp_smaller_overlap,(diamond,triangle)),2,0).
fval(0,(comp_smaller_overlap,(key0,diamond)),2,0).
fval(0,(comp_smaller_overlap,(diamond,key1)),2,0).
fval(0,(comp_smaller_overlap,(r,key0)),2,0).
fval(0,(comp_smaller_overlap,(key1,node1)),2,0).
fval(0,(comp_smaller_overlap,(node1,r)),2,0).
fval(0,(comp_smaller_overlap,(key1,key0)),2,0).
fval(0,(comp_smaller_overlap,(r,triangle)),2,0).
fval(0,(comp_smaller_overlap,(r,diamond)),2,0).
fval(0,(comp_smaller_overlap,(key1,triangle)),2,0).
fval(0,(comp_smaller_overlap,(triangle,node1)),2,0).
fval(0,(comp_smaller_overlap,(key1,diamond)),2,0).
fval(0,(comp_smaller_overlap,(node1,key0)),2,0).
fval(0,(comp_smaller_overlap,(key0,node1)),2,0).
fval(0,(comp_smaller_overlap,(diamond,node1)),2,0).
fval(0,(er_overlap_opencell,(key0,)),0,1).
fval(0,(er_overlap_opencell,(r,)),0,1).
fval(0,(er_overlap_opencell,(key1,)),0,0).
fval(0,(er_overlap_opencell,(node1,)),0,0).
fval(0,(er_overlap_opencell,(triangle,)),0,0).
fval(0,(er_overlap_opencell,(diamond,)),0,0).
fval(0,(er_overlap_opencell,(key1,)),1,1).
fval(0,(er_overlap_opencell,(key0,)),1,1).
fval(0,(er_overlap_opencell,(r,)),1,1).
fval(0,(er_overlap_opencell,(node1,)),1,0).
fval(0,(er_overlap_opencell,(triangle,)),1,0).
fval(0,(er_overlap_opencell,(diamond,)),1,0).
fval(0,(er_overlap_opencell,(key1,)),2,1).
fval(0,(er_overlap_opencell,(r,)),2,1).
fval(0,(er_overlap_opencell,(node1,)),2,0).
fval(0,(er_overlap_opencell,(key0,)),2,0).
fval(0,(er_overlap_opencell,(triangle,)),2,0).
fval(0,(er_overlap_opencell,(diamond,)),2,0).
fval(0,(inter_key_er_overlap_verum,(key0,)),0,1).
fval(0,(inter_key_er_overlap_verum,(node1,)),0,0).
fval(0,(inter_key_er_overlap_verum,(triangle,)),0,0).
fval(0,(inter_key_er_overlap_verum,(diamond,)),0,0).
fval(0,(inter_key_er_overlap_verum,(key1,)),0,0).
fval(0,(inter_key_er_overlap_verum,(r,)),0,0).
fval(0,(inter_key_er_overlap_verum,(key1,)),1,1).
fval(0,(inter_key_er_overlap_verum,(key0,)),1,1).
fval(0,(inter_key_er_overlap_verum,(node1,)),1,0).
fval(0,(inter_key_er_overlap_verum,(r,)),1,0).
fval(0,(inter_key_er_overlap_verum,(triangle,)),1,0).
fval(0,(inter_key_er_overlap_verum,(diamond,)),1,0).
fval(0,(inter_key_er_overlap_verum,(key1,)),2,1).
fval(0,(inter_key_er_overlap_verum,(node1,)),2,0).
fval(0,(inter_key_er_overlap_verum,(triangle,)),2,0).
fval(0,(inter_key_er_overlap_verum,(diamond,)),2,0).
fval(0,(inter_key_er_overlap_verum,(r,)),2,0).
fval(0,(inter_key_er_overlap_verum,(key0,)),2,0).
fval(0,(inter_er_overlap_verum_er_left_opencell,(node1,)),0).
fval(0,(inter_er_overlap_verum_er_left_opencell,(triangle,)),0).
fval(0,(inter_er_overlap_verum_er_left_opencell,(diamond,)),0).
fval(0,(inter_er_overlap_verum_er_left_opencell,(key1,)),0).
fval(0,(inter_er_overlap_verum_er_left_opencell,(r,)),0).
fval(0,(inter_er_overlap_verum_er_left_opencell,(key0,)),0).
fval(0,(inter_er_overlap_robot_er_left_opencell,(node1,)),0).
fval(0,(inter_er_overlap_robot_er_left_opencell,(triangle,)),0).
fval(0,(inter_er_overlap_robot_er_left_opencell,(diamond,)),0).
fval(0,(inter_er_overlap_robot_er_left_opencell,(key1,)),0).
fval(0,(inter_er_overlap_robot_er_left_opencell,(key0,)),0).
fval(0,(inter_er_overlap_robot_er_left_opencell,(r,)),0).
fval(0,(comp_smaller_inv_left,(node1,diamond)),0).
fval(0,(comp_smaller_inv_left,(key0,r)),0).
fval(0,(comp_smaller_inv_left,(triangle,key0)),0).
fval(0,(comp_smaller_inv_left,(diamond,key0)),0).
fval(0,(comp_smaller_inv_left,(triangle,r)),0).
fval(0,(comp_smaller_inv_left,(diamond,r)),0).
fval(0,(comp_smaller_inv_left,(triangle,diamond)),0).
fval(0,(comp_smaller_inv_left,(key0,diamond)),0).
fval(0,(comp_smaller_inv_left,(r,key0)),0).
fval(0,(comp_smaller_inv_left,(key1,node1)),0).
fval(0,(comp_smaller_inv_left,(r,diamond)),0).
fval(0,(comp_smaller_inv_left,(key1,triangle)),0).
fval(0,(comp_smaller_inv_left,(triangle,node1)),0).
fval(0,(comp_smaller_inv_left,(key0,node1)),0).
fval(0,(comp_smaller_inv_left,(diamond,node1)),0).
fval(0,(comp_smaller_inv_left,(node1,triangle)),0).
fval(0,(comp_smaller_inv_left,(node1,key1)),0).
fval(0,(comp_smaller_inv_left,(key0,triangle)),0).
fval(0,(comp_smaller_inv_left,(triangle,key1)),0).
fval(0,(comp_smaller_inv_left,(r,node1)),0).
fval(0,(comp_smaller_inv_left,(diamond,triangle)),0).
fval(0,(comp_smaller_inv_left,(key0,key1)),0).
fval(0,(comp_smaller_inv_left,(diamond,key1)),0).
fval(0,(comp_smaller_inv_left,(key1,key0)),0).
fval(0,(comp_smaller_inv_left,(r,triangle)),0).
fval(0,(comp_smaller_inv_left,(key1,r)),0).
fval(0,(comp_smaller_inv_left,(r,key1)),0).
fval(0,(comp_smaller_inv_left,(key1,diamond)),0).
fval(0,(comp_smaller_inv_left,(node1,key0)),0).
fval(0,(comp_smaller_inv_left,(node1,r)),0).
fval(0,(key,(key1,)),1).
fval(0,(key,(key0,)),1).
fval(0,(key,(node1,)),0).
fval(0,(key,(r,)),0).
fval(0,(key,(triangle,)),0).
fval(0,(key,(diamond,)),0).
fval(0,(comp_overlap_inv_below,(node1,diamond)),0).
fval(0,(comp_overlap_inv_below,(key0,r)),0).
fval(0,(comp_overlap_inv_below,(triangle,key0)),0).
fval(0,(comp_overlap_inv_below,(diamond,key0)),0).
fval(0,(comp_overlap_inv_below,(triangle,r)),0).
fval(0,(comp_overlap_inv_below,(diamond,r)),0).
fval(0,(comp_overlap_inv_below,(triangle,diamond)),0).
fval(0,(comp_overlap_inv_below,(key0,diamond)),0).
fval(0,(comp_overlap_inv_below,(r,key0)),0).
fval(0,(comp_overlap_inv_below,(key1,node1)),0).
fval(0,(comp_overlap_inv_below,(r,diamond)),0).
fval(0,(comp_overlap_inv_below,(key1,triangle)),0).
fval(0,(comp_overlap_inv_below,(triangle,node1)),0).
fval(0,(comp_overlap_inv_below,(key0,node1)),0).
fval(0,(comp_overlap_inv_below,(diamond,node1)),0).
fval(0,(comp_overlap_inv_below,(node1,triangle)),0).
fval(0,(comp_overlap_inv_below,(node1,key1)),0).
fval(0,(comp_overlap_inv_below,(key0,triangle)),0).
fval(0,(comp_overlap_inv_below,(triangle,key1)),0).
fval(0,(comp_overlap_inv_below,(r,node1)),0).
fval(0,(comp_overlap_inv_below,(diamond,triangle)),0).
fval(0,(comp_overlap_inv_below,(key0,key1)),0).
fval(0,(comp_overlap_inv_below,(diamond,key1)),0).
fval(0,(comp_overlap_inv_below,(key1,r)),0).
fval(0,(comp_overlap_inv_below,(key1,key0)),0).
fval(0,(comp_overlap_inv_below,(r,triangle)),0).
fval(0,(comp_overlap_inv_below,(r,key1)),0).
fval(0,(comp_overlap_inv_below,(key1,diamond)),0).
fval(0,(comp_overlap_inv_below,(node1,key0)),0).
fval(0,(comp_overlap_inv_below,(node1,r)),0).
fval(0,(inter_opencell_er_left_verum,(node1,)),0).
fval(0,(inter_opencell_er_left_verum,(triangle,)),0).
fval(0,(inter_opencell_er_left_verum,(diamond,)),0).
fval(0,(inter_opencell_er_left_verum,(key1,)),0).
fval(0,(inter_opencell_er_left_verum,(r,)),0).
fval(0,(inter_opencell_er_left_verum,(key0,)),0).
fval(0,(inter_er_left_verum_er_overlap_verum,(node1,)),0).
fval(0,(inter_er_left_verum_er_overlap_verum,(triangle,)),0).
fval(0,(inter_er_left_verum_er_overlap_verum,(diamond,)),0).
fval(0,(inter_er_left_verum_er_overlap_verum,(key1,)),0).
fval(0,(inter_er_left_verum_er_overlap_verum,(key0,)),0).
fval(0,(inter_er_left_verum_er_overlap_verum,(r,)),0).
fval(0,(er_shape_verum,(key1,)),1).
fval(0,(er_shape_verum,(key0,)),1).
fval(0,(er_shape_verum,(node1,)),0).
fval(0,(er_shape_verum,(r,)),0).
fval(0,(er_shape_verum,(triangle,)),0).
fval(0,(er_shape_verum,(diamond,)),0).
fval(0,(er_overlap_robot,(node1,)),1).
fval(0,(er_overlap_robot,(triangle,)),0).
fval(0,(er_overlap_robot,(diamond,)),0).
fval(0,(er_overlap_robot,(key1,)),0).
fval(0,(er_overlap_robot,(r,)),0).
fval(0,(er_overlap_robot,(key0,)),0).
fval(0,(inter_er_left_verum_er_overlap_robot,(node1,)),0).
fval(0,(inter_er_left_verum_er_overlap_robot,(triangle,)),0).
fval(0,(inter_er_left_verum_er_overlap_robot,(diamond,)),0).
fval(0,(inter_er_left_verum_er_overlap_robot,(key1,)),0).
fval(0,(inter_er_left_verum_er_overlap_robot,(key0,)),0).
fval(0,(inter_er_left_verum_er_overlap_robot,(r,)),0).
fval(0,(comp_overlap_inv_left,(node1,diamond)),0).
fval(0,(comp_overlap_inv_left,(key0,r)),0).
fval(0,(comp_overlap_inv_left,(triangle,key0)),0).
fval(0,(comp_overlap_inv_left,(diamond,key0)),0).
fval(0,(comp_overlap_inv_left,(triangle,r)),0).
fval(0,(comp_overlap_inv_left,(diamond,r)),0).
fval(0,(comp_overlap_inv_left,(triangle,diamond)),0).
fval(0,(comp_overlap_inv_left,(key0,diamond)),0).
fval(0,(comp_overlap_inv_left,(r,key0)),0).
fval(0,(comp_overlap_inv_left,(key1,node1)),0).
fval(0,(comp_overlap_inv_left,(r,diamond)),0).
fval(0,(comp_overlap_inv_left,(key1,triangle)),0).
fval(0,(comp_overlap_inv_left,(triangle,node1)),0).
fval(0,(comp_overlap_inv_left,(key0,node1)),0).
fval(0,(comp_overlap_inv_left,(diamond,node1)),0).
fval(0,(comp_overlap_inv_left,(node1,triangle)),0).
fval(0,(comp_overlap_inv_left,(node1,key1)),0).
fval(0,(comp_overlap_inv_left,(key0,triangle)),0).
fval(0,(comp_overlap_inv_left,(triangle,key1)),0).
fval(0,(comp_overlap_inv_left,(r,node1)),0).
fval(0,(comp_overlap_inv_left,(diamond,triangle)),0).
fval(0,(comp_overlap_inv_left,(key0,key1)),0).
fval(0,(comp_overlap_inv_left,(diamond,key1)),0).
fval(0,(comp_overlap_inv_left,(key1,key0)),0).
fval(0,(comp_overlap_inv_left,(r,triangle)),0).
fval(0,(comp_overlap_inv_left,(key1,r)),0).
fval(0,(comp_overlap_inv_left,(r,key1)),0).
fval(0,(comp_overlap_inv_left,(key1,diamond)),0).
fval(0,(comp_overlap_inv_left,(node1,key0)),0).
fval(0,(comp_overlap_inv_left,(node1,r)),0).
fval(0,(inv_smaller,(node1,key1)),1).
fval(0,(inv_smaller,(node1,key0)),1).
fval(0,(inv_smaller,(node1,r)),1).
fval(0,(inv_smaller,(node1,diamond)),0).
fval(0,(inv_smaller,(key0,r)),0).
fval(0,(inv_smaller,(triangle,key0)),0).
fval(0,(inv_smaller,(diamond,key0)),0).
fval(0,(inv_smaller,(triangle,r)),0).
fval(0,(inv_smaller,(diamond,r)),0).
fval(0,(inv_smaller,(triangle,diamond)),0).
fval(0,(inv_smaller,(key0,diamond)),0).
fval(0,(inv_smaller,(r,key0)),0).
fval(0,(inv_smaller,(key1,node1)),0).
fval(0,(inv_smaller,(r,diamond)),0).
fval(0,(inv_smaller,(key1,triangle)),0).
fval(0,(inv_smaller,(triangle,node1)),0).
fval(0,(inv_smaller,(key0,node1)),0).
fval(0,(inv_smaller,(diamond,node1)),0).
fval(0,(inv_smaller,(node1,triangle)),0).
fval(0,(inv_smaller,(key0,triangle)),0).
fval(0,(inv_smaller,(triangle,key1)),0).
fval(0,(inv_smaller,(r,node1)),0).
fval(0,(inv_smaller,(diamond,triangle)),0).
fval(0,(inv_smaller,(key0,key1)),0).
fval(0,(inv_smaller,(diamond,key1)),0).
fval(0,(inv_smaller,(key1,r)),0).
fval(0,(inv_smaller,(key1,key0)),0).
fval(0,(inv_smaller,(r,triangle)),0).
fval(0,(inv_smaller,(r,key1)),0).
fval(0,(inv_smaller,(key1,diamond)),0).
fval(0,(inter_key_er_smaller_lockedcell,(node1,)),0).
fval(0,(inter_key_er_smaller_lockedcell,(triangle,)),0).
fval(0,(inter_key_er_smaller_lockedcell,(diamond,)),0).
fval(0,(inter_key_er_smaller_lockedcell,(key1,)),0).
fval(0,(inter_key_er_smaller_lockedcell,(key0,)),0).
fval(0,(inter_key_er_smaller_lockedcell,(r,)),0).
fval(0,(shape,(key0,triangle)),1).
fval(0,(shape,(key1,triangle)),1).
fval(0,(shape,(node1,diamond)),0).
fval(0,(shape,(triangle,key0)),0).
fval(0,(shape,(diamond,key0)),0).
fval(0,(shape,(triangle,r)),0).
fval(0,(shape,(key0,r)),0).
fval(0,(shape,(diamond,r)),0).
fval(0,(shape,(triangle,diamond)),0).
fval(0,(shape,(key0,diamond)),0).
fval(0,(shape,(r,key0)),0).
fval(0,(shape,(key1,node1)),0).
fval(0,(shape,(r,diamond)),0).
fval(0,(shape,(triangle,node1)),0).
fval(0,(shape,(key0,node1)),0).
fval(0,(shape,(diamond,node1)),0).
fval(0,(shape,(node1,triangle)),0).
fval(0,(shape,(node1,key1)),0).
fval(0,(shape,(triangle,key1)),0).
fval(0,(shape,(r,node1)),0).
fval(0,(shape,(diamond,triangle)),0).
fval(0,(shape,(key0,key1)),0).
fval(0,(shape,(diamond,key1)),0).
fval(0,(shape,(key1,r)),0).
fval(0,(shape,(r,triangle)),0).
fval(0,(shape,(key1,key0)),0).
fval(0,(shape,(r,key1)),0).
fval(0,(shape,(key1,diamond)),0).
fval(0,(shape,(node1,key0)),0).
fval(0,(shape,(node1,r)),0).
fval(0,(comp_left_inv_left,(node1,diamond)),0).
fval(0,(comp_left_inv_left,(key0,r)),0).
fval(0,(comp_left_inv_left,(triangle,key0)),0).
fval(0,(comp_left_inv_left,(diamond,key0)),0).
fval(0,(comp_left_inv_left,(triangle,r)),0).
fval(0,(comp_left_inv_left,(diamond,r)),0).
fval(0,(comp_left_inv_left,(triangle,diamond)),0).
fval(0,(comp_left_inv_left,(key0,diamond)),0).
fval(0,(comp_left_inv_left,(r,key0)),0).
fval(0,(comp_left_inv_left,(key1,node1)),0).
fval(0,(comp_left_inv_left,(r,diamond)),0).
fval(0,(comp_left_inv_left,(key1,triangle)),0).
fval(0,(comp_left_inv_left,(triangle,node1)),0).
fval(0,(comp_left_inv_left,(key0,node1)),0).
fval(0,(comp_left_inv_left,(diamond,node1)),0).
fval(0,(comp_left_inv_left,(node1,triangle)),0).
fval(0,(comp_left_inv_left,(node1,key1)),0).
fval(0,(comp_left_inv_left,(key0,triangle)),0).
fval(0,(comp_left_inv_left,(triangle,key1)),0).
fval(0,(comp_left_inv_left,(r,node1)),0).
fval(0,(comp_left_inv_left,(diamond,triangle)),0).
fval(0,(comp_left_inv_left,(key0,key1)),0).
fval(0,(comp_left_inv_left,(diamond,key1)),0).
fval(0,(comp_left_inv_left,(node1,key0)),0).
fval(0,(comp_left_inv_left,(key1,r)),0).
fval(0,(comp_left_inv_left,(key1,key0)),0).
fval(0,(comp_left_inv_left,(r,triangle)),0).
fval(0,(comp_left_inv_left,(r,key1)),0).
fval(0,(comp_left_inv_left,(key1,diamond)),0).
fval(0,(comp_left_inv_left,(node1,r)),0).
fval(0,(inv_left,(node1,diamond)),0).
fval(0,(inv_left,(triangle,key0)),0).
fval(0,(inv_left,(diamond,key0)),0).
fval(0,(inv_left,(triangle,r)),0).
fval(0,(inv_left,(key0,r)),0).
fval(0,(inv_left,(diamond,r)),0).
fval(0,(inv_left,(triangle,diamond)),0).
fval(0,(inv_left,(key0,diamond)),0).
fval(0,(inv_left,(r,key0)),0).
fval(0,(inv_left,(key1,node1)),0).
fval(0,(inv_left,(r,diamond)),0).
fval(0,(inv_left,(key1,triangle)),0).
fval(0,(inv_left,(triangle,node1)),0).
fval(0,(inv_left,(key0,node1)),0).
fval(0,(inv_left,(diamond,node1)),0).
fval(0,(inv_left,(node1,triangle)),0).
fval(0,(inv_left,(node1,key1)),0).
fval(0,(inv_left,(key0,triangle)),0).
fval(0,(inv_left,(triangle,key1)),0).
fval(0,(inv_left,(r,node1)),0).
fval(0,(inv_left,(diamond,triangle)),0).
fval(0,(inv_left,(key0,key1)),0).
fval(0,(inv_left,(diamond,key1)),0).
fval(0,(inv_left,(node1,key0)),0).
fval(0,(inv_left,(key1,key0)),0).
fval(0,(inv_left,(r,triangle)),0).
fval(0,(inv_left,(key1,r)),0).
fval(0,(inv_left,(r,key1)),0).
fval(0,(inv_left,(key1,diamond)),0).
fval(0,(inv_left,(node1,r)),0).
fval(0,(comp_inv_below_inv_overlap,(node1,diamond)),0).
fval(0,(comp_inv_below_inv_overlap,(triangle,r)),0).
fval(0,(comp_inv_below_inv_overlap,(key0,r)),0).
fval(0,(comp_inv_below_inv_overlap,(triangle,key0)),0).
fval(0,(comp_inv_below_inv_overlap,(diamond,key0)),0).
fval(0,(comp_inv_below_inv_overlap,(diamond,r)),0).
fval(0,(comp_inv_below_inv_overlap,(triangle,diamond)),0).
fval(0,(comp_inv_below_inv_overlap,(key0,diamond)),0).
fval(0,(comp_inv_below_inv_overlap,(r,key0)),0).
fval(0,(comp_inv_below_inv_overlap,(key1,node1)),0).
fval(0,(comp_inv_below_inv_overlap,(r,diamond)),0).
fval(0,(comp_inv_below_inv_overlap,(key1,triangle)),0).
fval(0,(comp_inv_below_inv_overlap,(triangle,node1)),0).
fval(0,(comp_inv_below_inv_overlap,(key0,node1)),0).
fval(0,(comp_inv_below_inv_overlap,(diamond,node1)),0).
fval(0,(comp_inv_below_inv_overlap,(node1,triangle)),0).
fval(0,(comp_inv_below_inv_overlap,(node1,key1)),0).
fval(0,(comp_inv_below_inv_overlap,(key0,triangle)),0).
fval(0,(comp_inv_below_inv_overlap,(triangle,key1)),0).
fval(0,(comp_inv_below_inv_overlap,(r,node1)),0).
fval(0,(comp_inv_below_inv_overlap,(diamond,triangle)),0).
fval(0,(comp_inv_below_inv_overlap,(key0,key1)),0).
fval(0,(comp_inv_below_inv_overlap,(diamond,key1)),0).
fval(0,(comp_inv_below_inv_overlap,(key1,r)),0).
fval(0,(comp_inv_below_inv_overlap,(r,triangle)),0).
fval(0,(comp_inv_below_inv_overlap,(key1,key0)),0).
fval(0,(comp_inv_below_inv_overlap,(r,key1)),0).
fval(0,(comp_inv_below_inv_overlap,(key1,diamond)),0).
fval(0,(comp_inv_below_inv_overlap,(node1,key0)),0).
fval(0,(comp_inv_below_inv_overlap,(node1,r)),0).
fval(0,(inter_er_shape_verum_er_overlap_robot,(node1,)),0).
fval(0,(inter_er_shape_verum_er_overlap_robot,(triangle,)),0).
fval(0,(inter_er_shape_verum_er_overlap_robot,(diamond,)),0).
fval(0,(inter_er_shape_verum_er_overlap_robot,(key1,)),0).
fval(0,(inter_er_shape_verum_er_overlap_robot,(r,)),0).
fval(0,(inter_er_shape_verum_er_overlap_robot,(key0,)),0).
fval(0,(inter_er_below_verum_er_overlap_verum,(node1,)),0).
fval(0,(inter_er_below_verum_er_overlap_verum,(triangle,)),0).
fval(0,(inter_er_below_verum_er_overlap_verum,(diamond,)),0).
fval(0,(inter_er_below_verum_er_overlap_verum,(key1,)),0).
fval(0,(inter_er_below_verum_er_overlap_verum,(r,)),0).
fval(0,(inter_er_below_verum_er_overlap_verum,(key0,)),0).
fval(0,(er_below_verum,(node1,)),0).
fval(0,(er_below_verum,(triangle,)),0).
fval(0,(er_below_verum,(diamond,)),0).
fval(0,(er_below_verum,(key1,)),0).
fval(0,(er_below_verum,(r,)),0).
fval(0,(er_below_verum,(key0,)),0).
fval(0,(er_below_opencell,(node1,)),0).
fval(0,(er_below_opencell,(triangle,)),0).
fval(0,(er_below_opencell,(diamond,)),0).
fval(0,(er_below_opencell,(key1,)),0).
fval(0,(er_below_opencell,(r,)),0).
fval(0,(er_below_opencell,(key0,)),0).
fval(0,(inter_er_overlap_robot_er_below_lockedcell,(node1,)),0).
fval(0,(inter_er_overlap_robot_er_below_lockedcell,(triangle,)),0).
fval(0,(inter_er_overlap_robot_er_below_lockedcell,(diamond,)),0).
fval(0,(inter_er_overlap_robot_er_below_lockedcell,(key1,)),0).
fval(0,(inter_er_overlap_robot_er_below_lockedcell,(r,)),0).
fval(0,(inter_er_overlap_robot_er_below_lockedcell,(key0,)),0).
fval(0,(inter_er_left_verum_er_overlap_key,(node1,)),0).
fval(0,(inter_er_left_verum_er_overlap_key,(triangle,)),0).
fval(0,(inter_er_left_verum_er_overlap_key,(diamond,)),0).
fval(0,(inter_er_left_verum_er_overlap_key,(key1,)),0).
fval(0,(inter_er_left_verum_er_overlap_key,(key0,)),0).
fval(0,(inter_er_left_verum_er_overlap_key,(r,)),0).
fval(0,(er_overlap_verum,(key0,)),0,1).
fval(0,(er_overlap_verum,(r,)),0,1).
fval(0,(er_overlap_verum,(node1,)),0,1).
fval(0,(er_overlap_verum,(key1,)),0,0).
fval(0,(er_overlap_verum,(triangle,)),0,0).
fval(0,(er_overlap_verum,(diamond,)),0,0).
fval(0,(er_overlap_verum,(key1,)),1,1).
fval(0,(er_overlap_verum,(key0,)),1,1).
fval(0,(er_overlap_verum,(r,)),1,1).
fval(0,(er_overlap_verum,(node1,)),1,1).
fval(0,(er_overlap_verum,(triangle,)),1,0).
fval(0,(er_overlap_verum,(diamond,)),1,0).
fval(0,(er_overlap_verum,(key1,)),2,1).
fval(0,(er_overlap_verum,(node1,)),2,1).
fval(0,(er_overlap_verum,(r,)),2,1).
fval(0,(er_overlap_verum,(key0,)),2,0).
fval(0,(er_overlap_verum,(triangle,)),2,0).
fval(0,(er_overlap_verum,(diamond,)),2,0).
fval(0,(opencell,(node1,)),1).
fval(0,(opencell,(triangle,)),0).
fval(0,(opencell,(diamond,)),0).
fval(0,(opencell,(key1,)),0).
fval(0,(opencell,(r,)),0).
fval(0,(opencell,(key0,)),0).
fval(0,(inter_er_left_verum_er_shape_verum,(node1,)),0).
fval(0,(inter_er_left_verum_er_shape_verum,(triangle,)),0).
fval(0,(inter_er_left_verum_er_shape_verum,(diamond,)),0).
fval(0,(inter_er_left_verum_er_shape_verum,(key1,)),0).
fval(0,(inter_er_left_verum_er_shape_verum,(key0,)),0).
fval(0,(inter_er_left_verum_er_shape_verum,(r,)),0).
fval(0,(subset_opencell_er_overlap_verum,(0,)),1).
fval(0,(comp_smaller_inv_smaller,(key0,r)),1).
fval(0,(comp_smaller_inv_smaller,(key1,key0)),1).
fval(0,(comp_smaller_inv_smaller,(key1,r)),1).
fval(0,(comp_smaller_inv_smaller,(r,key1)),1).
fval(0,(comp_smaller_inv_smaller,(key0,key1)),1).
fval(0,(comp_smaller_inv_smaller,(r,key0)),1).
fval(0,(comp_smaller_inv_smaller,(node1,triangle)),0).
fval(0,(comp_smaller_inv_smaller,(node1,diamond)),0).
fval(0,(comp_smaller_inv_smaller,(triangle,key0)),0).
fval(0,(comp_smaller_inv_smaller,(diamond,key0)),0).
fval(0,(comp_smaller_inv_smaller,(triangle,r)),0).
fval(0,(comp_smaller_inv_smaller,(node1,key1)),0).
fval(0,(comp_smaller_inv_smaller,(diamond,r)),0).
fval(0,(comp_smaller_inv_smaller,(key0,triangle)),0).
fval(0,(comp_smaller_inv_smaller,(triangle,diamond)),0).
fval(0,(comp_smaller_inv_smaller,(triangle,key1)),0).
fval(0,(comp_smaller_inv_smaller,(r,node1)),0).
fval(0,(comp_smaller_inv_smaller,(diamond,triangle)),0).
fval(0,(comp_smaller_inv_smaller,(key0,diamond)),0).
fval(0,(comp_smaller_inv_smaller,(diamond,key1)),0).
fval(0,(comp_smaller_inv_smaller,(key1,node1)),0).
fval(0,(comp_smaller_inv_smaller,(node1,r)),0).
fval(0,(comp_smaller_inv_smaller,(r,triangle)),0).
fval(0,(comp_smaller_inv_smaller,(r,diamond)),0).
fval(0,(comp_smaller_inv_smaller,(key1,triangle)),0).
fval(0,(comp_smaller_inv_smaller,(triangle,node1)),0).
fval(0,(comp_smaller_inv_smaller,(key1,diamond)),0).
fval(0,(comp_smaller_inv_smaller,(node1,key0)),0).
fval(0,(comp_smaller_inv_smaller,(key0,node1)),0).
fval(0,(comp_smaller_inv_smaller,(diamond,node1)),0).
fval(0,(comp_overlap_inv_smaller,(r,key1)),0,1).
fval(0,(comp_overlap_inv_smaller,(key0,r)),0,1).
fval(0,(comp_overlap_inv_smaller,(key0,key1)),0,1).
fval(0,(comp_overlap_inv_smaller,(r,key0)),0,1).
fval(0,(comp_overlap_inv_smaller,(node1,triangle)),0,0).
fval(0,(comp_overlap_inv_smaller,(node1,diamond)),0,0).
fval(0,(comp_overlap_inv_smaller,(triangle,r)),0,0).
fval(0,(comp_overlap_inv_smaller,(triangle,key0)),0,0).
fval(0,(comp_overlap_inv_smaller,(diamond,key0)),0,0).
fval(0,(comp_overlap_inv_smaller,(node1,key1)),0,0).
fval(0,(comp_overlap_inv_smaller,(diamond,r)),0,0).
fval(0,(comp_overlap_inv_smaller,(key0,triangle)),0,0).
fval(0,(comp_overlap_inv_smaller,(triangle,diamond)),0,0).
fval(0,(comp_overlap_inv_smaller,(triangle,key1)),0,0).
fval(0,(comp_overlap_inv_smaller,(r,node1)),0,0).
fval(0,(comp_overlap_inv_smaller,(diamond,triangle)),0,0).
fval(0,(comp_overlap_inv_smaller,(key0,diamond)),0,0).
fval(0,(comp_overlap_inv_smaller,(diamond,key1)),0,0).
fval(0,(comp_overlap_inv_smaller,(key1,node1)),0,0).
fval(0,(comp_overlap_inv_smaller,(node1,r)),0,0).
fval(0,(comp_overlap_inv_smaller,(key1,r)),0,0).
fval(0,(comp_overlap_inv_smaller,(key1,key0)),0,0).
fval(0,(comp_overlap_inv_smaller,(r,triangle)),0,0).
fval(0,(comp_overlap_inv_smaller,(r,diamond)),0,0).
fval(0,(comp_overlap_inv_smaller,(key1,triangle)),0,0).
fval(0,(comp_overlap_inv_smaller,(triangle,node1)),0,0).
fval(0,(comp_overlap_inv_smaller,(key1,diamond)),0,0).
fval(0,(comp_overlap_inv_smaller,(node1,key0)),0,0).
fval(0,(comp_overlap_inv_smaller,(key0,node1)),0,0).
fval(0,(comp_overlap_inv_smaller,(diamond,node1)),0,0).
fval(0,(comp_overlap_inv_smaller,(key0,r)),1,1).
fval(0,(comp_overlap_inv_smaller,(key1,r)),1,1).
fval(0,(comp_overlap_inv_smaller,(key1,key0)),1,1).
fval(0,(comp_overlap_inv_smaller,(r,key1)),1,1).
fval(0,(comp_overlap_inv_smaller,(key0,key1)),1,1).
fval(0,(comp_overlap_inv_smaller,(r,key0)),1,1).
fval(0,(comp_overlap_inv_smaller,(node1,triangle)),1,0).
fval(0,(comp_overlap_inv_smaller,(node1,diamond)),1,0).
fval(0,(comp_overlap_inv_smaller,(triangle,r)),1,0).
fval(0,(comp_overlap_inv_smaller,(triangle,key0)),1,0).
fval(0,(comp_overlap_inv_smaller,(diamond,key0)),1,0).
fval(0,(comp_overlap_inv_smaller,(node1,key1)),1,0).
fval(0,(comp_overlap_inv_smaller,(diamond,r)),1,0).
fval(0,(comp_overlap_inv_smaller,(key0,triangle)),1,0).
fval(0,(comp_overlap_inv_smaller,(triangle,diamond)),1,0).
fval(0,(comp_overlap_inv_smaller,(triangle,key1)),1,0).
fval(0,(comp_overlap_inv_smaller,(r,node1)),1,0).
fval(0,(comp_overlap_inv_smaller,(diamond,triangle)),1,0).
fval(0,(comp_overlap_inv_smaller,(key0,diamond)),1,0).
fval(0,(comp_overlap_inv_smaller,(diamond,key1)),1,0).
fval(0,(comp_overlap_inv_smaller,(key1,node1)),1,0).
fval(0,(comp_overlap_inv_smaller,(node1,r)),1,0).
fval(0,(comp_overlap_inv_smaller,(r,triangle)),1,0).
fval(0,(comp_overlap_inv_smaller,(r,diamond)),1,0).
fval(0,(comp_overlap_inv_smaller,(key1,triangle)),1,0).
fval(0,(comp_overlap_inv_smaller,(triangle,node1)),1,0).
fval(0,(comp_overlap_inv_smaller,(key1,diamond)),1,0).
fval(0,(comp_overlap_inv_smaller,(node1,key0)),1,0).
fval(0,(comp_overlap_inv_smaller,(key0,node1)),1,0).
fval(0,(comp_overlap_inv_smaller,(diamond,node1)),1,0).
fval(0,(comp_overlap_inv_smaller,(r,key1)),2,1).
fval(0,(comp_overlap_inv_smaller,(key1,r)),2,1).
fval(0,(comp_overlap_inv_smaller,(key1,key0)),2,1).
fval(0,(comp_overlap_inv_smaller,(r,key0)),2,1).
fval(0,(comp_overlap_inv_smaller,(node1,triangle)),2,0).
fval(0,(comp_overlap_inv_smaller,(node1,diamond)),2,0).
fval(0,(comp_overlap_inv_smaller,(triangle,r)),2,0).
fval(0,(comp_overlap_inv_smaller,(key0,r)),2,0).
fval(0,(comp_overlap_inv_smaller,(triangle,key0)),2,0).
fval(0,(comp_overlap_inv_smaller,(diamond,key0)),2,0).
fval(0,(comp_overlap_inv_smaller,(node1,key1)),2,0).
fval(0,(comp_overlap_inv_smaller,(diamond,r)),2,0).
fval(0,(comp_overlap_inv_smaller,(key0,triangle)),2,0).
fval(0,(comp_overlap_inv_smaller,(triangle,diamond)),2,0).
fval(0,(comp_overlap_inv_smaller,(triangle,key1)),2,0).
fval(0,(comp_overlap_inv_smaller,(r,node1)),2,0).
fval(0,(comp_overlap_inv_smaller,(diamond,triangle)),2,0).
fval(0,(comp_overlap_inv_smaller,(key0,diamond)),2,0).
fval(0,(comp_overlap_inv_smaller,(key0,key1)),2,0).
fval(0,(comp_overlap_inv_smaller,(diamond,key1)),2,0).
fval(0,(comp_overlap_inv_smaller,(key1,node1)),2,0).
fval(0,(comp_overlap_inv_smaller,(node1,r)),2,0).
fval(0,(comp_overlap_inv_smaller,(r,triangle)),2,0).
fval(0,(comp_overlap_inv_smaller,(r,diamond)),2,0).
fval(0,(comp_overlap_inv_smaller,(key1,triangle)),2,0).
fval(0,(comp_overlap_inv_smaller,(triangle,node1)),2,0).
fval(0,(comp_overlap_inv_smaller,(key1,diamond)),2,0).
fval(0,(comp_overlap_inv_smaller,(node1,key0)),2,0).
fval(0,(comp_overlap_inv_smaller,(key0,node1)),2,0).
fval(0,(comp_overlap_inv_smaller,(diamond,node1)),2,0).
fval(0,(inter_robot_er_smaller_lockedcell,(node1,)),0).
fval(0,(inter_robot_er_smaller_lockedcell,(triangle,)),0).
fval(0,(inter_robot_er_smaller_lockedcell,(diamond,)),0).
fval(0,(inter_robot_er_smaller_lockedcell,(key1,)),0).
fval(0,(inter_robot_er_smaller_lockedcell,(r,)),0).
fval(0,(inter_robot_er_smaller_lockedcell,(key0,)),0).
fval(0,(smaller,(key1,node1)),1).
fval(0,(smaller,(r,node1)),1).
fval(0,(smaller,(key0,node1)),1).
fval(0,(smaller,(node1,diamond)),0).
fval(0,(smaller,(triangle,key0)),0).
fval(0,(smaller,(diamond,key0)),0).
fval(0,(smaller,(triangle,r)),0).
fval(0,(smaller,(key0,r)),0).
fval(0,(smaller,(diamond,r)),0).
fval(0,(smaller,(triangle,diamond)),0).
fval(0,(smaller,(key0,diamond)),0).
fval(0,(smaller,(r,key0)),0).
fval(0,(smaller,(r,diamond)),0).
fval(0,(smaller,(key1,triangle)),0).
fval(0,(smaller,(triangle,node1)),0).
fval(0,(smaller,(diamond,node1)),0).
fval(0,(smaller,(node1,triangle)),0).
fval(0,(smaller,(node1,key1)),0).
fval(0,(smaller,(key0,triangle)),0).
fval(0,(smaller,(triangle,key1)),0).
fval(0,(smaller,(diamond,triangle)),0).
fval(0,(smaller,(key0,key1)),0).
fval(0,(smaller,(diamond,key1)),0).
fval(0,(smaller,(node1,key0)),0).
fval(0,(smaller,(key1,key0)),0).
fval(0,(smaller,(r,triangle)),0).
fval(0,(smaller,(key1,r)),0).
fval(0,(smaller,(r,key1)),0).
fval(0,(smaller,(key1,diamond)),0).
fval(0,(smaller,(node1,r)),0).
fval(0,(er_overlap_key,(node1,)),1).
fval(0,(er_overlap_key,(triangle,)),0).
fval(0,(er_overlap_key,(diamond,)),0).
fval(0,(er_overlap_key,(key1,)),0).
fval(0,(er_overlap_key,(r,)),0).
fval(0,(er_overlap_key,(key0,)),0).
fval(0,(inter_er_left_lockedcell_er_overlap_key,(node1,)),0).
fval(0,(inter_er_left_lockedcell_er_overlap_key,(triangle,)),0).
fval(0,(inter_er_left_lockedcell_er_overlap_key,(diamond,)),0).
fval(0,(inter_er_left_lockedcell_er_overlap_key,(key1,)),0).
fval(0,(inter_er_left_lockedcell_er_overlap_key,(r,)),0).
fval(0,(inter_er_left_lockedcell_er_overlap_key,(key0,)),0).
fval(0,(comp_left_overlap,(node1,diamond)),0).
fval(0,(comp_left_overlap,(triangle,key0)),0).
fval(0,(comp_left_overlap,(diamond,key0)),0).
fval(0,(comp_left_overlap,(triangle,r)),0).
fval(0,(comp_left_overlap,(key0,r)),0).
fval(0,(comp_left_overlap,(diamond,r)),0).
fval(0,(comp_left_overlap,(triangle,diamond)),0).
fval(0,(comp_left_overlap,(key0,diamond)),0).
fval(0,(comp_left_overlap,(r,key0)),0).
fval(0,(comp_left_overlap,(key1,node1)),0).
fval(0,(comp_left_overlap,(r,diamond)),0).
fval(0,(comp_left_overlap,(key1,triangle)),0).
fval(0,(comp_left_overlap,(triangle,node1)),0).
fval(0,(comp_left_overlap,(key0,node1)),0).
fval(0,(comp_left_overlap,(diamond,node1)),0).
fval(0,(comp_left_overlap,(node1,triangle)),0).
fval(0,(comp_left_overlap,(node1,key1)),0).
fval(0,(comp_left_overlap,(key0,triangle)),0).
fval(0,(comp_left_overlap,(triangle,key1)),0).
fval(0,(comp_left_overlap,(r,node1)),0).
fval(0,(comp_left_overlap,(diamond,triangle)),0).
fval(0,(comp_left_overlap,(key0,key1)),0).
fval(0,(comp_left_overlap,(diamond,key1)),0).
fval(0,(comp_left_overlap,(node1,key0)),0).
fval(0,(comp_left_overlap,(key1,key0)),0).
fval(0,(comp_left_overlap,(r,triangle)),0).
fval(0,(comp_left_overlap,(key1,r)),0).
fval(0,(comp_left_overlap,(r,key1)),0).
fval(0,(comp_left_overlap,(key1,diamond)),0).
fval(0,(comp_left_overlap,(node1,r)),0).
fval(0,(er_smaller_verum,(key1,)),1).
fval(0,(er_smaller_verum,(key0,)),1).
fval(0,(er_smaller_verum,(r,)),1).
fval(0,(er_smaller_verum,(node1,)),0).
fval(0,(er_smaller_verum,(triangle,)),0).
fval(0,(er_smaller_verum,(diamond,)),0).
fval(0,(subset_key_er_overlap_verum,(0,)),0,0).
fval(0,(subset_key_er_overlap_verum,(0,)),1,1).
fval(0,(subset_key_er_overlap_verum,(0,)),2,0).
fval(0,(inv_shape,(triangle,key1)),1).
fval(0,(inv_shape,(triangle,key0)),1).
fval(0,(inv_shape,(node1,diamond)),0).
fval(0,(inv_shape,(triangle,r)),0).
fval(0,(inv_shape,(diamond,key0)),0).
fval(0,(inv_shape,(key0,r)),0).
fval(0,(inv_shape,(diamond,r)),0).
fval(0,(inv_shape,(triangle,diamond)),0).
fval(0,(inv_shape,(key0,diamond)),0).
fval(0,(inv_shape,(r,key0)),0).
fval(0,(inv_shape,(key1,node1)),0).
fval(0,(inv_shape,(r,diamond)),0).
fval(0,(inv_shape,(key1,triangle)),0).
fval(0,(inv_shape,(triangle,node1)),0).
fval(0,(inv_shape,(key0,node1)),0).
fval(0,(inv_shape,(diamond,node1)),0).
fval(0,(inv_shape,(node1,triangle)),0).
fval(0,(inv_shape,(node1,key1)),0).
fval(0,(inv_shape,(key0,triangle)),0).
fval(0,(inv_shape,(r,node1)),0).
fval(0,(inv_shape,(diamond,triangle)),0).
fval(0,(inv_shape,(key0,key1)),0).
fval(0,(inv_shape,(diamond,key1)),0).
fval(0,(inv_shape,(key1,r)),0).
fval(0,(inv_shape,(r,triangle)),0).
fval(0,(inv_shape,(key1,key0)),0).
fval(0,(inv_shape,(r,key1)),0).
fval(0,(inv_shape,(key1,diamond)),0).
fval(0,(inv_shape,(node1,key0)),0).
fval(0,(inv_shape,(node1,r)),0).
fval(0,(shape_form,(triangle,)),1).
fval(0,(shape_form,(diamond,)),1).
fval(0,(inter_er_below_lockedcell_er_overlap_key,(node1,)),0).
fval(0,(inter_er_below_lockedcell_er_overlap_key,(triangle,)),0).
fval(0,(inter_er_below_lockedcell_er_overlap_key,(diamond,)),0).
fval(0,(inter_er_below_lockedcell_er_overlap_key,(key1,)),0).
fval(0,(inter_er_below_lockedcell_er_overlap_key,(key0,)),0).
fval(0,(inter_er_below_lockedcell_er_overlap_key,(r,)),0).
fval(0,(comp_smaller_below,(node1,diamond)),0).
fval(0,(comp_smaller_below,(key0,r)),0).
fval(0,(comp_smaller_below,(triangle,key0)),0).
fval(0,(comp_smaller_below,(diamond,key0)),0).
fval(0,(comp_smaller_below,(triangle,r)),0).
fval(0,(comp_smaller_below,(diamond,r)),0).
fval(0,(comp_smaller_below,(triangle,diamond)),0).
fval(0,(comp_smaller_below,(key0,diamond)),0).
fval(0,(comp_smaller_below,(r,key0)),0).
fval(0,(comp_smaller_below,(key1,node1)),0).
fval(0,(comp_smaller_below,(r,diamond)),0).
fval(0,(comp_smaller_below,(key1,triangle)),0).
fval(0,(comp_smaller_below,(triangle,node1)),0).
fval(0,(comp_smaller_below,(key0,node1)),0).
fval(0,(comp_smaller_below,(diamond,node1)),0).
fval(0,(comp_smaller_below,(node1,triangle)),0).
fval(0,(comp_smaller_below,(node1,key1)),0).
fval(0,(comp_smaller_below,(key0,triangle)),0).
fval(0,(comp_smaller_below,(triangle,key1)),0).
fval(0,(comp_smaller_below,(r,node1)),0).
fval(0,(comp_smaller_below,(diamond,triangle)),0).
fval(0,(comp_smaller_below,(key0,key1)),0).
fval(0,(comp_smaller_below,(diamond,key1)),0).
fval(0,(comp_smaller_below,(key1,r)),0).
fval(0,(comp_smaller_below,(key1,key0)),0).
fval(0,(comp_smaller_below,(r,triangle)),0).
fval(0,(comp_smaller_below,(r,key1)),0).
fval(0,(comp_smaller_below,(key1,diamond)),0).
fval(0,(comp_smaller_below,(node1,key0)),0).
fval(0,(comp_smaller_below,(node1,r)),0).
feature(comp_inv_smaller_inv_overlap).
f_arity(comp_inv_smaller_inv_overlap,2).
feature(comp_below_shape).
f_arity(comp_below_shape,2).
feature(comp_smaller_inv_below).
f_arity(comp_smaller_inv_below,2).
feature(comp_overlap_inv_overlap).
f_arity(comp_overlap_inv_overlap,2).
feature(er_below_lockedcell).
f_arity(er_below_lockedcell,1).
feature(comp_below_overlap).
f_arity(comp_below_overlap,2).
feature(subset_key_verum).
f_arity(subset_key_verum,1).
feature(inter_er_overlap_verum_er_left_lockedcell).
f_arity(inter_er_overlap_verum_er_left_lockedcell,1).
feature(inter_er_overlap_robot_er_below_opencell).
f_arity(inter_er_overlap_robot_er_below_opencell,1).
feature(lockedcell).
f_arity(lockedcell,1).
feature(er_left_opencell).
f_arity(er_left_opencell,1).
feature(inter_er_below_opencell_er_overlap_key).
f_arity(inter_er_below_opencell_er_overlap_key,1).
feature(comp_smaller_shape).
f_arity(comp_smaller_shape,2).
feature(comp_overlap_shape).
f_arity(comp_overlap_shape,2).
feature(comp_below_inv_smaller).
f_arity(comp_below_inv_smaller,2).
feature(inter_er_overlap_verum_er_below_lockedcell).
f_arity(inter_er_overlap_verum_er_below_lockedcell,1).
feature(inter_er_overlap_verum_er_smaller_lockedcell).
f_arity(inter_er_overlap_verum_er_smaller_lockedcell,1).
feature(overlap).
f_arity(overlap,2).
feature(inter_er_left_opencell_er_overlap_key).
f_arity(inter_er_left_opencell_er_overlap_key,1).
feature(comp_inv_left_inv_overlap).
f_arity(comp_inv_left_inv_overlap,2).
feature(inter_er_overlap_robot_er_overlap_key).
f_arity(inter_er_overlap_robot_er_overlap_key,1).
feature(below).
f_arity(below,2).
feature(left).
f_arity(left,2).
feature(comp_smaller_left).
f_arity(comp_smaller_left,2).
feature(inter_er_below_verum_er_overlap_robot).
f_arity(inter_er_below_verum_er_overlap_robot,1).
feature(verum).
f_arity(verum,1).
feature(robot).
f_arity(robot,1).
feature(subset_lockedcell_verum).
f_arity(subset_lockedcell_verum,1).
feature(peg).
f_arity(peg,1).
feature(comp_left_inv_smaller).
f_arity(comp_left_inv_smaller,2).
feature(comp_below_inv_below).
f_arity(comp_below_inv_below,2).
feature(er_smaller_lockedcell).
f_arity(er_smaller_lockedcell,1).
feature(inter_er_shape_verum_er_overlap_key).
f_arity(inter_er_shape_verum_er_overlap_key,1).
feature(er_left_lockedcell).
f_arity(er_left_lockedcell,1).
feature(inter_er_overlap_robot_er_left_lockedcell).
f_arity(inter_er_overlap_robot_er_left_lockedcell,1).
feature(er_left_verum).
f_arity(er_left_verum,1).
feature(inter_opencell_er_shape_verum).
f_arity(inter_opencell_er_shape_verum,1).
feature(inv_below).
f_arity(inv_below,2).
feature(comp_shape_inv_shape).
f_arity(comp_shape_inv_shape,2).
feature(comp_left_shape).
f_arity(comp_left_shape,2).
feature(subset_opencell_er_overlap_key).
f_arity(subset_opencell_er_overlap_key,1).
feature(inter_opencell_er_overlap_verum).
f_arity(inter_opencell_er_overlap_verum,1).
feature(inter_er_below_verum_er_overlap_key).
f_arity(inter_er_below_verum_er_overlap_key,1).
feature(inter_er_overlap_verum_er_shape_verum).
f_arity(inter_er_overlap_verum_er_shape_verum,1).
feature(inter_er_overlap_verum_er_below_opencell).
f_arity(inter_er_overlap_verum_er_below_opencell,1).
feature(comp_smaller_overlap).
f_arity(comp_smaller_overlap,2).
feature(er_overlap_opencell).
f_arity(er_overlap_opencell,1).
feature(inter_key_er_overlap_verum).
f_arity(inter_key_er_overlap_verum,1).
feature(inter_er_overlap_verum_er_left_opencell).
f_arity(inter_er_overlap_verum_er_left_opencell,1).
feature(inter_er_overlap_robot_er_left_opencell).
f_arity(inter_er_overlap_robot_er_left_opencell,1).
feature(comp_smaller_inv_left).
f_arity(comp_smaller_inv_left,2).
feature(key).
f_arity(key,1).
feature(comp_overlap_inv_below).
f_arity(comp_overlap_inv_below,2).
feature(inter_opencell_er_left_verum).
f_arity(inter_opencell_er_left_verum,1).
feature(inter_er_left_verum_er_overlap_verum).
f_arity(inter_er_left_verum_er_overlap_verum,1).
feature(er_shape_verum).
f_arity(er_shape_verum,1).
feature(er_overlap_robot).
f_arity(er_overlap_robot,1).
feature(inter_er_left_verum_er_overlap_robot).
f_arity(inter_er_left_verum_er_overlap_robot,1).
feature(comp_overlap_inv_left).
f_arity(comp_overlap_inv_left,2).
feature(inv_smaller).
f_arity(inv_smaller,2).
feature(inter_key_er_smaller_lockedcell).
f_arity(inter_key_er_smaller_lockedcell,1).
feature(shape).
f_arity(shape,2).
feature(comp_left_inv_left).
f_arity(comp_left_inv_left,2).
feature(inv_left).
f_arity(inv_left,2).
feature(comp_inv_below_inv_overlap).
f_arity(comp_inv_below_inv_overlap,2).
feature(inter_er_shape_verum_er_overlap_robot).
f_arity(inter_er_shape_verum_er_overlap_robot,1).
feature(inter_er_below_verum_er_overlap_verum).
f_arity(inter_er_below_verum_er_overlap_verum,1).
feature(er_below_verum).
f_arity(er_below_verum,1).
feature(er_below_opencell).
f_arity(er_below_opencell,1).
feature(inter_er_overlap_robot_er_below_lockedcell).
f_arity(inter_er_overlap_robot_er_below_lockedcell,1).
feature(inter_er_left_verum_er_overlap_key).
f_arity(inter_er_left_verum_er_overlap_key,1).
feature(er_overlap_verum).
f_arity(er_overlap_verum,1).
feature(opencell).
f_arity(opencell,1).
feature(inter_er_left_verum_er_shape_verum).
f_arity(inter_er_left_verum_er_shape_verum,1).
feature(subset_opencell_er_overlap_verum).
f_arity(subset_opencell_er_overlap_verum,1).
feature(comp_smaller_inv_smaller).
f_arity(comp_smaller_inv_smaller,2).
feature(comp_overlap_inv_smaller).
f_arity(comp_overlap_inv_smaller,2).
feature(inter_robot_er_smaller_lockedcell).
f_arity(inter_robot_er_smaller_lockedcell,1).
feature(smaller).
f_arity(smaller,2).
feature(er_overlap_key).
f_arity(er_overlap_key,1).
feature(inter_er_left_lockedcell_er_overlap_key).
f_arity(inter_er_left_lockedcell_er_overlap_key,1).
feature(comp_left_overlap).
f_arity(comp_left_overlap,2).
feature(er_smaller_verum).
f_arity(er_smaller_verum,1).
feature(subset_key_er_overlap_verum).
f_arity(subset_key_er_overlap_verum,1).
feature(inv_shape).
f_arity(inv_shape,2).
feature(shape_form).
f_arity(shape_form,1).
feature(inter_er_below_lockedcell_er_overlap_key).
f_arity(inter_er_below_lockedcell_er_overlap_key,1).
feature(comp_smaller_below).
f_arity(comp_smaller_below,2).
% Number of unique features: 88
